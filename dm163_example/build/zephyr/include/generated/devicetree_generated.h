/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /home/sorybarry/Documents/3ASE/SE302a/sory-ibrahima-barry/dm163_example/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   /home/sorybarry/Documents/3ASE/SE302a/sory-ibrahima-barry/dm163_example/dts/bindings, $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /connector
 *   4   /soc
 *   5   /soc/interrupt-controller@e000e100
 *   6   /clocks
 *   7   /clocks/clk-hsi
 *   8   /clocks/pll
 *   9   /soc/rcc@40021000
 *   10  /soc/pin-controller@48000000
 *   11  /soc/pin-controller@48000000/adc1_in13_pc4
 *   12  /soc/pin-controller@48000000/adc1_in14_pc5
 *   13  /soc/pin-controller@48000000/adc1_in3_pc2
 *   14  /soc/pin-controller@48000000/adc1_in4_pc3
 *   15  /soc/pin-controller@48000000/adc1_in5_pa0
 *   16  /soc/adc@50040000
 *   17  /dietemp
 *   18  /soc/pin-controller@48000000/gpio@48000000
 *   19  /soc/pin-controller@48000000/gpio@48000400
 *   20  /soc/pin-controller@48000000/gpio@48000800
 *   21  /dm163
 *   22  /memory@20000000
 *   23  /rgb_matrix
 *   24  /clocks/clk-hse
 *   25  /clocks/clk-lse
 *   26  /clocks/clk-lsi
 *   27  /clocks/clk-msi
 *   28  /cpus
 *   29  /power-states
 *   30  /power-states/state0
 *   31  /power-states/state1
 *   32  /power-states/state2
 *   33  /cpus/cpu@0
 *   34  /gpio_keys
 *   35  /gpio_keys/button_0
 *   36  /leds
 *   37  /leds/led_1
 *   38  /leds/led_2
 *   39  /soc/adc@50040100
 *   40  /soc/adc@50040200
 *   41  /soc/can@40006400
 *   42  /soc/pin-controller@48000000/dac1_out1_pa4
 *   43  /soc/dac@40007400
 *   44  /soc/dma@40020400
 *   45  /soc/pin-controller@48000000/i2c1_scl_pb8
 *   46  /soc/pin-controller@48000000/i2c1_sda_pb9
 *   47  /soc/i2c@40005400
 *   48  /soc/pin-controller@48000000/i2c3_scl_pc0
 *   49  /soc/pin-controller@48000000/i2c3_sda_pc1
 *   50  /soc/i2c@40005c00
 *   51  /soc/interrupt-controller@40010400
 *   52  /otgfs_phy
 *   53  /soc/pin-controller@48000000/usb_otg_fs_dm_pa11
 *   54  /soc/pin-controller@48000000/usb_otg_fs_dp_pa12
 *   55  /soc/pin-controller@48000000/usb_otg_fs_id_pa10
 *   56  /soc/otgfs@50000000
 *   57  /soc/rng@50060800
 *   58  /soc/rtc@40002800
 *   59  /soc/sdmmc@40012800
 *   60  /soc/serial@40004400
 *   61  /soc/serial@40004800
 *   62  /soc/pin-controller@48000000/uart4_rx_pa1
 *   63  /soc/pin-controller@48000000/uart4_tx_pa0
 *   64  /soc/serial@40004c00
 *   65  /soc/serial@40005000
 *   66  /soc/serial@40008000
 *   67  /soc/pin-controller@48000000/usart1_rx_pb7
 *   68  /soc/pin-controller@48000000/usart1_tx_pb6
 *   69  /soc/serial@40013800
 *   70  /soc/spi@40003800
 *   71  /soc/pin-controller@48000000/spi1_miso_pa6
 *   72  /soc/pin-controller@48000000/spi1_mosi_pa7
 *   73  /soc/pin-controller@48000000/spi1_sck_pa5
 *   74  /soc/spi@40013000
 *   75  /soc/timer@e000e010
 *   76  /soc/timers@40007c00
 *   77  /soc/watchdog@40002c00
 *   78  /soc/watchdog@40003000
 *   79  /soc/flash-controller@40022000
 *   80  /soc/flash-controller@40022000/flash@8000000
 *   81  /soc/flash-controller@40022000/flash@8000000/partitions
 *   82  /soc/flash-controller@40022000/flash@8000000/partitions/partition@0
 *   83  /soc/flash-controller@40022000/flash@8000000/partitions/partition@20000
 *   84  /soc/flash-controller@40022000/flash@8000000/partitions/partition@f8000
 *   85  /soc/pin-controller@48000000/i2c2_scl_pb10
 *   86  /soc/pin-controller@48000000/i2c2_sda_pb11
 *   87  /soc/i2c@40005800
 *   88  /soc/pin-controller@48000000/gpio@48000c00
 *   89  /soc/i2c@40005800/hts221@5f
 *   90  /soc/i2c@40005800/lis3mdl-magn@1e
 *   91  /soc/i2c@40005800/lps22hb-press@5d
 *   92  /soc/i2c@40005800/lsm6dsl@6a
 *   93  /soc/i2c@40005800/vl53l0x@29
 *   94  /soc/pin-controller@48000000/gpio@48001400
 *   95  /soc/pin-controller@48000000/gpio@48001800
 *   96  /soc/pin-controller@48000000/gpio@48001c00
 *   97  /soc/dma@40020000
 *   98  /soc/pin-controller@48000000/quadspi_bk1_io0_pe12
 *   99  /soc/pin-controller@48000000/quadspi_bk1_io1_pe13
 *   100 /soc/pin-controller@48000000/quadspi_bk1_io2_pe14
 *   101 /soc/pin-controller@48000000/quadspi_bk1_io3_pe15
 *   102 /soc/pin-controller@48000000/quadspi_clk_pe10
 *   103 /soc/pin-controller@48000000/quadspi_ncs_pe11
 *   104 /soc/quadspi@a0001000
 *   105 /soc/quadspi@a0001000/qspi-nor-flash@0
 *   106 /soc/quadspi@a0001000/qspi-nor-flash@0/partitions
 *   107 /soc/quadspi@a0001000/qspi-nor-flash@0/partitions/partition@0
 *   108 /soc/quadspi@a0001000/qspi-nor-flash@0/partitions/partition@d8000
 *   109 /soc/pin-controller@48000000/gpio@48001000
 *   110 /soc/pin-controller@48000000/spi3_miso_pc11
 *   111 /soc/pin-controller@48000000/spi3_mosi_pc12
 *   112 /soc/pin-controller@48000000/spi3_sck_pc10
 *   113 /soc/spi@40003c00
 *   114 /soc/spi@40003c00/ism43362@1
 *   115 /soc/spi@40003c00/spbtle-rf@0
 *   116 /soc/timers@40000000
 *   117 /soc/timers@40000000/counter
 *   118 /soc/pin-controller@48000000/tim2_ch1_pa15
 *   119 /soc/timers@40000000/pwm
 *   120 /soc/timers@40000400
 *   121 /soc/timers@40000400/counter
 *   122 /soc/timers@40000400/pwm
 *   123 /soc/timers@40000800
 *   124 /soc/timers@40000800/counter
 *   125 /soc/timers@40000800/pwm
 *   126 /soc/timers@40000c00
 *   127 /soc/timers@40000c00/counter
 *   128 /soc/timers@40000c00/pwm
 *   129 /soc/timers@40001000
 *   130 /soc/timers@40001000/counter
 *   131 /soc/timers@40001400
 *   132 /soc/timers@40001400/counter
 *   133 /soc/timers@40012c00
 *   134 /soc/timers@40012c00/pwm
 *   135 /soc/timers@40013400
 *   136 /soc/timers@40013400/pwm
 *   137 /soc/timers@40014000
 *   138 /soc/timers@40014000/counter
 *   139 /soc/timers@40014000/pwm
 *   140 /soc/timers@40014400
 *   141 /soc/timers@40014400/counter
 *   142 /soc/timers@40014400/pwm
 *   143 /soc/timers@40014800
 *   144 /soc/timers@40014800/counter
 *   145 /soc/timers@40014800/pwm
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"

/* Helper macros for child nodes of this node. */
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_dietemp) fn(DT_N_S_otgfs_phy) fn(DT_N_S_connector) fn(DT_N_S_leds) fn(DT_N_S_gpio_keys) fn(DT_N_S_power_states) fn(DT_N_S_dm163) fn(DT_N_S_rgb_matrix)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dietemp) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_otgfs_phy) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_power_states) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dm163) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_rgb_matrix)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_dietemp, __VA_ARGS__) fn(DT_N_S_otgfs_phy, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_power_states, __VA_ARGS__) fn(DT_N_S_dm163, __VA_ARGS__) fn(DT_N_S_rgb_matrix, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dietemp, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_otgfs_phy, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_power_states, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dm163, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_rgb_matrix, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_dietemp) fn(DT_N_S_otgfs_phy) fn(DT_N_S_connector) fn(DT_N_S_leds) fn(DT_N_S_gpio_keys) fn(DT_N_S_power_states) fn(DT_N_S_dm163) fn(DT_N_S_rgb_matrix)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dietemp) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_otgfs_phy) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_power_states) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dm163) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_rgb_matrix)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_dietemp, __VA_ARGS__) fn(DT_N_S_otgfs_phy, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_power_states, __VA_ARGS__) fn(DT_N_S_dm163, __VA_ARGS__) fn(DT_N_S_rgb_matrix, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dietemp, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_otgfs_phy, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_power_states, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dm163, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_rgb_matrix, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_ORD 0

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /connector */ \
	4, /* /soc */ \
	6, /* /clocks */ \
	17, /* /dietemp */ \
	21, /* /dm163 */ \
	22, /* /memory@20000000 */ \
	23, /* /rgb_matrix */ \
	28, /* /cpus */ \
	29, /* /power-states */ \
	34, /* /gpio_keys */ \
	36, /* /leds */ \
	52, /* /otgfs_phy */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_st_stm32l475_disco_iot DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_COMPAT_MATCHES_st_stm32l475_disco_iot 1
#define DT_N_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_0 "stm32l475-disco-iot"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"st,stm32l475-disco-iot"}
#define DT_N_P_compatible_IDX_0 "st,stm32l475-disco-iot"
#define DT_N_P_compatible_IDX_0_STRING_TOKEN st_stm32l475_disco_iot
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32L475_DISCO_IOT
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /connector
 *
 * Node identifier: DT_N_S_connector
 *
 * Binding (compatible = arduino-header-r3):
 *   $ZEPHYR_BASE/dts/bindings/gpio/arduino-header-r3.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_connector_PATH "/connector"

/* Node's name with unit-address: */
#define DT_N_S_connector_FULL_NAME "connector"

/* Node parent (/) identifier: */
#define DT_N_S_connector_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_connector_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_connector_FOREACH_CHILD(fn) 
#define DT_N_S_connector_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_connector_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_connector_ORD 3

/* Ordinals for what this node depends on directly: */
#define DT_N_S_connector_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_connector_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_connector_EXISTS 1
#define DT_N_INST_0_arduino_header_r3 DT_N_S_connector
#define DT_N_NODELABEL_arduino_header DT_N_S_connector

/* Macros for properties that are special in the specification: */
#define DT_N_S_connector_REG_NUM 0
#define DT_N_S_connector_RANGES_NUM 0
#define DT_N_S_connector_FOREACH_RANGE(fn) 
#define DT_N_S_connector_IRQ_NUM 0
#define DT_N_S_connector_COMPAT_MATCHES_arduino_header_r3 1
#define DT_N_S_connector_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_connector_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_connector_P_compatible {"arduino-header-r3"}
#define DT_N_S_connector_P_compatible_IDX_0 "arduino-header-r3"
#define DT_N_S_connector_P_compatible_IDX_0_STRING_TOKEN arduino_header_r3
#define DT_N_S_connector_P_compatible_IDX_0_STRING_UPPER_TOKEN ARDUINO_HEADER_R3
#define DT_N_S_connector_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_LEN 1
#define DT_N_S_connector_P_compatible_EXISTS 1
#define DT_N_S_connector_P_wakeup_source 0
#define DT_N_S_connector_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40022000) fn(DT_N_S_soc_S_rcc_40021000) fn(DT_N_S_soc_S_interrupt_controller_40010400) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_watchdog_40002c00) fn(DT_N_S_soc_S_serial_40013800) fn(DT_N_S_soc_S_serial_40004400) fn(DT_N_S_soc_S_serial_40008000) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005c00) fn(DT_N_S_soc_S_quadspi_a0001000) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_timers_40012c00) fn(DT_N_S_soc_S_timers_40000000) fn(DT_N_S_soc_S_timers_40001000) fn(DT_N_S_soc_S_timers_40014000) fn(DT_N_S_soc_S_timers_40014400) fn(DT_N_S_soc_S_rtc_40002800) fn(DT_N_S_soc_S_adc_50040000) fn(DT_N_S_soc_S_adc_50040100) fn(DT_N_S_soc_S_dma_40020000) fn(DT_N_S_soc_S_dma_40020400) fn(DT_N_S_soc_S_timers_40007c00) fn(DT_N_S_soc_S_rng_50060800) fn(DT_N_S_soc_S_serial_40004800) fn(DT_N_S_soc_S_serial_40004c00) fn(DT_N_S_soc_S_serial_40005000) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_spi_40003800) fn(DT_N_S_soc_S_spi_40003c00) fn(DT_N_S_soc_S_timers_40000400) fn(DT_N_S_soc_S_timers_40000800) fn(DT_N_S_soc_S_timers_40000c00) fn(DT_N_S_soc_S_timers_40001400) fn(DT_N_S_soc_S_timers_40013400) fn(DT_N_S_soc_S_timers_40014800) fn(DT_N_S_soc_S_can_40006400) fn(DT_N_S_soc_S_sdmmc_40012800) fn(DT_N_S_soc_S_dac_40007400) fn(DT_N_S_soc_S_adc_50040200) fn(DT_N_S_soc_S_otgfs_50000000)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_40021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_40010400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40002c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40013800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_quadspi_a0001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40012c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40002800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_50040000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_50040100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40020400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40007c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rng_50060800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40005000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40013400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_40006400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdmmc_40012800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dac_40007400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_50040200) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_otgfs_50000000)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40010400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40002c00, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005c00, __VA_ARGS__) fn(DT_N_S_soc_S_quadspi_a0001000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40012c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__) fn(DT_N_S_soc_S_adc_50040000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_50040100, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40020400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40007c00, __VA_ARGS__) fn(DT_N_S_soc_S_rng_50060800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004c00, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40005000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40013400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800, __VA_ARGS__) fn(DT_N_S_soc_S_can_40006400, __VA_ARGS__) fn(DT_N_S_soc_S_sdmmc_40012800, __VA_ARGS__) fn(DT_N_S_soc_S_dac_40007400, __VA_ARGS__) fn(DT_N_S_soc_S_adc_50040200, __VA_ARGS__) fn(DT_N_S_soc_S_otgfs_50000000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_40021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_40010400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40002c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_quadspi_a0001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40012c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_50040000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_50040100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40020400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40007c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rng_50060800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40005000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40013400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_40006400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdmmc_40012800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dac_40007400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_50040200, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_otgfs_50000000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40022000) fn(DT_N_S_soc_S_rcc_40021000) fn(DT_N_S_soc_S_interrupt_controller_40010400) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_serial_40013800) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005c00) fn(DT_N_S_soc_S_quadspi_a0001000) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_timers_40000000) fn(DT_N_S_soc_S_rtc_40002800) fn(DT_N_S_soc_S_adc_50040000) fn(DT_N_S_soc_S_dma_40020000) fn(DT_N_S_soc_S_timers_40007c00) fn(DT_N_S_soc_S_rng_50060800) fn(DT_N_S_soc_S_serial_40004c00) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_spi_40003c00) fn(DT_N_S_soc_S_dac_40007400) fn(DT_N_S_soc_S_otgfs_50000000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_40021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_40010400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40013800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_quadspi_a0001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40002800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_50040000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40007c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rng_50060800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dac_40007400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_otgfs_50000000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40010400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005c00, __VA_ARGS__) fn(DT_N_S_soc_S_quadspi_a0001000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__) fn(DT_N_S_soc_S_adc_50040000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40007c00, __VA_ARGS__) fn(DT_N_S_soc_S_rng_50060800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004c00, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003c00, __VA_ARGS__) fn(DT_N_S_soc_S_dac_40007400, __VA_ARGS__) fn(DT_N_S_soc_S_otgfs_50000000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_40021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_40010400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_quadspi_a0001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_50040000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40007c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rng_50060800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dac_40007400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_otgfs_50000000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 4

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */ \
	10, /* /soc/pin-controller@48000000 */ \
	16, /* /soc/adc@50040000 */ \
	39, /* /soc/adc@50040100 */ \
	40, /* /soc/adc@50040200 */ \
	41, /* /soc/can@40006400 */ \
	43, /* /soc/dac@40007400 */ \
	44, /* /soc/dma@40020400 */ \
	47, /* /soc/i2c@40005400 */ \
	50, /* /soc/i2c@40005c00 */ \
	51, /* /soc/interrupt-controller@40010400 */ \
	56, /* /soc/otgfs@50000000 */ \
	57, /* /soc/rng@50060800 */ \
	58, /* /soc/rtc@40002800 */ \
	59, /* /soc/sdmmc@40012800 */ \
	60, /* /soc/serial@40004400 */ \
	61, /* /soc/serial@40004800 */ \
	64, /* /soc/serial@40004c00 */ \
	65, /* /soc/serial@40005000 */ \
	66, /* /soc/serial@40008000 */ \
	69, /* /soc/serial@40013800 */ \
	70, /* /soc/spi@40003800 */ \
	74, /* /soc/spi@40013000 */ \
	75, /* /soc/timer@e000e010 */ \
	76, /* /soc/timers@40007c00 */ \
	77, /* /soc/watchdog@40002c00 */ \
	78, /* /soc/watchdog@40003000 */ \
	79, /* /soc/flash-controller@40022000 */ \
	87, /* /soc/i2c@40005800 */ \
	97, /* /soc/dma@40020000 */ \
	104, /* /soc/quadspi@a0001000 */ \
	113, /* /soc/spi@40003c00 */ \
	116, /* /soc/timers@40000000 */ \
	120, /* /soc/timers@40000400 */ \
	123, /* /soc/timers@40000800 */ \
	126, /* /soc/timers@40000c00 */ \
	129, /* /soc/timers@40001000 */ \
	131, /* /soc/timers@40001400 */ \
	133, /* /soc/timers@40012c00 */ \
	135, /* /soc/timers@40013400 */ \
	137, /* /soc/timers@40014000 */ \
	140, /* /soc/timers@40014400 */ \
	143, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v7m-nvic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,v7m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 5

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	16, /* /soc/adc@50040000 */ \
	39, /* /soc/adc@50040100 */ \
	40, /* /soc/adc@50040200 */ \
	41, /* /soc/can@40006400 */ \
	44, /* /soc/dma@40020400 */ \
	47, /* /soc/i2c@40005400 */ \
	50, /* /soc/i2c@40005c00 */ \
	56, /* /soc/otgfs@50000000 */ \
	57, /* /soc/rng@50060800 */ \
	58, /* /soc/rtc@40002800 */ \
	59, /* /soc/sdmmc@40012800 */ \
	60, /* /soc/serial@40004400 */ \
	61, /* /soc/serial@40004800 */ \
	64, /* /soc/serial@40004c00 */ \
	65, /* /soc/serial@40005000 */ \
	66, /* /soc/serial@40008000 */ \
	69, /* /soc/serial@40013800 */ \
	70, /* /soc/spi@40003800 */ \
	74, /* /soc/spi@40013000 */ \
	76, /* /soc/timers@40007c00 */ \
	77, /* /soc/watchdog@40002c00 */ \
	79, /* /soc/flash-controller@40022000 */ \
	87, /* /soc/i2c@40005800 */ \
	97, /* /soc/dma@40020000 */ \
	104, /* /soc/quadspi@a0001000 */ \
	113, /* /soc/spi@40003c00 */ \
	116, /* /soc/timers@40000000 */ \
	120, /* /soc/timers@40000400 */ \
	123, /* /soc/timers@40000800 */ \
	126, /* /soc/timers@40000c00 */ \
	129, /* /soc/timers@40001000 */ \
	131, /* /soc/timers@40001400 */ \
	133, /* /soc/timers@40012c00 */ \
	135, /* /soc/timers@40013400 */ \
	137, /* /soc/timers@40014000 */ \
	140, /* /soc/timers@40014400 */ \
	143, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v7m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v7m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0 "v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 4
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v7m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_TOKEN arm_v7m_nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_V7M_NVIC
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /clocks
 *
 * Node identifier: DT_N_S_clocks
 */

/* Node's full path: */
#define DT_N_S_clocks_PATH "/clocks"

/* Node's name with unit-address: */
#define DT_N_S_clocks_FULL_NAME "clocks"

/* Node parent (/) identifier: */
#define DT_N_S_clocks_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_FOREACH_CHILD(fn) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_clk_hsi) fn(DT_N_S_clocks_S_clk_msi) fn(DT_N_S_clocks_S_clk_lse) fn(DT_N_S_clocks_S_clk_lsi) fn(DT_N_S_clocks_S_pll)
#define DT_N_S_clocks_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hse) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hsi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_msi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lse) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lsi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll)
#define DT_N_S_clocks_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_msi, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_msi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_clocks_S_clk_hsi) fn(DT_N_S_clocks_S_clk_lse) fn(DT_N_S_clocks_S_pll)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hsi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lse) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_clocks_ORD 6

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_SUPPORTS_ORDS \
	7, /* /clocks/clk-hsi */ \
	8, /* /clocks/pll */ \
	24, /* /clocks/clk-hse */ \
	25, /* /clocks/clk-lse */ \
	26, /* /clocks/clk-lsi */ \
	27, /* /clocks/clk-msi */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_REG_NUM 0
#define DT_N_S_clocks_RANGES_NUM 0
#define DT_N_S_clocks_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_IRQ_NUM 0
#define DT_N_S_clocks_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /clocks/clk-hsi
 *
 * Node identifier: DT_N_S_clocks_S_clk_hsi
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hsi_PATH "/clocks/clk-hsi"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hsi_FULL_NAME "clk-hsi"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hsi_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_hsi_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hsi_ORD 7

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hsi_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hsi_SUPPORTS_ORDS \
	8, /* /clocks/pll */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hsi_EXISTS 1
#define DT_N_INST_0_fixed_clock DT_N_S_clocks_S_clk_hsi
#define DT_N_NODELABEL_clk_hsi  DT_N_S_clocks_S_clk_hsi

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hsi_REG_NUM 0
#define DT_N_S_clocks_S_clk_hsi_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_hsi_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_hsi_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hsi_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_hsi_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hsi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hsi_P_clock_frequency 16000000
#define DT_N_S_clocks_S_clk_hsi_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/pll
 *
 * Node identifier: DT_N_S_clocks_S_pll
 *
 * Binding (compatible = st,stm32l4-pll-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32l4-pll-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_pll_PATH "/clocks/pll"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_pll_FULL_NAME "pll"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_pll_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_pll_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_pll_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_pll_ORD 8

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_pll_REQUIRES_ORDS \
	6, /* /clocks */ \
	7, /* /clocks/clk-hsi */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_pll_SUPPORTS_ORDS \
	9, /* /soc/rcc@40021000 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_pll_EXISTS 1
#define DT_N_INST_0_st_stm32l4_pll_clock DT_N_S_clocks_S_pll
#define DT_N_NODELABEL_pll               DT_N_S_clocks_S_pll

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_pll_REG_NUM 0
#define DT_N_S_clocks_S_pll_RANGES_NUM 0
#define DT_N_S_clocks_S_pll_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_pll_IRQ_NUM 0
#define DT_N_S_clocks_S_pll_COMPAT_MATCHES_st_stm32l4_pll_clock 1
#define DT_N_S_clocks_S_pll_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_pll_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_COMPAT_MODEL_IDX_0 "stm32l4-pll-clock"
#define DT_N_S_clocks_S_pll_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_pll_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_pll_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_clocks_IDX_0_PH DT_N_S_clocks_S_clk_hsi
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, clocks, 0)
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll, clocks, 0)
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_clocks_LEN 1
#define DT_N_S_clocks_S_pll_P_clocks_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_m 1
#define DT_N_S_clocks_S_pll_P_div_m_EXISTS 1
#define DT_N_S_clocks_S_pll_P_mul_n 20
#define DT_N_S_clocks_S_pll_P_mul_n_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_p 7
#define DT_N_S_clocks_S_pll_P_div_p_ENUM_IDX 0
#define DT_N_S_clocks_S_pll_P_div_p_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_q 2
#define DT_N_S_clocks_S_pll_P_div_q_ENUM_IDX 0
#define DT_N_S_clocks_S_pll_P_div_q_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_r 4
#define DT_N_S_clocks_S_pll_P_div_r_ENUM_IDX 1
#define DT_N_S_clocks_S_pll_P_div_r_EXISTS 1
#define DT_N_S_clocks_S_pll_P_status "okay"
#define DT_N_S_clocks_S_pll_P_status_STRING_TOKEN okay
#define DT_N_S_clocks_S_pll_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_pll_P_status_ENUM_IDX 1
#define DT_N_S_clocks_S_pll_P_status_ENUM_TOKEN okay
#define DT_N_S_clocks_S_pll_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, status, 0) \
	fn(DT_N_S_clocks_S_pll, status, 1) \
	fn(DT_N_S_clocks_S_pll, status, 2) \
	fn(DT_N_S_clocks_S_pll, status, 3)
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_pll, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_pll, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_pll, status, 3)
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, status, 0, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_pll, status, 1, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_pll, status, 2, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_pll, status, 3, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_pll, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_pll, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_pll, status, 3, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_status_EXISTS 1
#define DT_N_S_clocks_S_pll_P_compatible {"st,stm32l4-pll-clock"}
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0 "st,stm32l4-pll-clock"
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_STRING_TOKEN st_stm32l4_pll_clock
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32L4_PLL_CLOCK
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, compatible, 0)
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll, compatible, 0)
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_compatible_LEN 1
#define DT_N_S_clocks_S_pll_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_pll_P_wakeup_source 0
#define DT_N_S_clocks_S_pll_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/rcc@40021000
 *
 * Node identifier: DT_N_S_soc_S_rcc_40021000
 *
 * Binding (compatible = st,stm32-rcc):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32-rcc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rcc_40021000_PATH "/soc/rcc@40021000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rcc_40021000_FULL_NAME "rcc@40021000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rcc_40021000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rcc_40021000_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rcc_40021000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rcc_40021000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rcc_40021000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rcc_40021000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rcc_40021000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rcc_40021000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rcc_40021000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rcc_40021000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rcc_40021000_ORD 9

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rcc_40021000_REQUIRES_ORDS \
	4, /* /soc */ \
	8, /* /clocks/pll */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rcc_40021000_SUPPORTS_ORDS \
	16, /* /soc/adc@50040000 */ \
	18, /* /soc/pin-controller@48000000/gpio@48000000 */ \
	19, /* /soc/pin-controller@48000000/gpio@48000400 */ \
	20, /* /soc/pin-controller@48000000/gpio@48000800 */ \
	39, /* /soc/adc@50040100 */ \
	40, /* /soc/adc@50040200 */ \
	41, /* /soc/can@40006400 */ \
	43, /* /soc/dac@40007400 */ \
	44, /* /soc/dma@40020400 */ \
	47, /* /soc/i2c@40005400 */ \
	50, /* /soc/i2c@40005c00 */ \
	56, /* /soc/otgfs@50000000 */ \
	57, /* /soc/rng@50060800 */ \
	58, /* /soc/rtc@40002800 */ \
	59, /* /soc/sdmmc@40012800 */ \
	60, /* /soc/serial@40004400 */ \
	61, /* /soc/serial@40004800 */ \
	64, /* /soc/serial@40004c00 */ \
	65, /* /soc/serial@40005000 */ \
	66, /* /soc/serial@40008000 */ \
	69, /* /soc/serial@40013800 */ \
	70, /* /soc/spi@40003800 */ \
	74, /* /soc/spi@40013000 */ \
	76, /* /soc/timers@40007c00 */ \
	77, /* /soc/watchdog@40002c00 */ \
	79, /* /soc/flash-controller@40022000 */ \
	87, /* /soc/i2c@40005800 */ \
	88, /* /soc/pin-controller@48000000/gpio@48000c00 */ \
	94, /* /soc/pin-controller@48000000/gpio@48001400 */ \
	95, /* /soc/pin-controller@48000000/gpio@48001800 */ \
	96, /* /soc/pin-controller@48000000/gpio@48001c00 */ \
	97, /* /soc/dma@40020000 */ \
	104, /* /soc/quadspi@a0001000 */ \
	109, /* /soc/pin-controller@48000000/gpio@48001000 */ \
	113, /* /soc/spi@40003c00 */ \
	116, /* /soc/timers@40000000 */ \
	120, /* /soc/timers@40000400 */ \
	123, /* /soc/timers@40000800 */ \
	126, /* /soc/timers@40000c00 */ \
	129, /* /soc/timers@40001000 */ \
	131, /* /soc/timers@40001400 */ \
	133, /* /soc/timers@40012c00 */ \
	135, /* /soc/timers@40013400 */ \
	137, /* /soc/timers@40014000 */ \
	140, /* /soc/timers@40014400 */ \
	143, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rcc_40021000_EXISTS 1
#define DT_N_INST_0_st_stm32_rcc DT_N_S_soc_S_rcc_40021000
#define DT_N_NODELABEL_rcc       DT_N_S_soc_S_rcc_40021000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rcc_40021000_REG_NUM 1
#define DT_N_S_soc_S_rcc_40021000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_REG_IDX_0_VAL_ADDRESS 1073876992 /* 0x40021000 */
#define DT_N_S_soc_S_rcc_40021000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rcc_40021000_RANGES_NUM 0
#define DT_N_S_soc_S_rcc_40021000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rcc_40021000_IRQ_NUM 0
#define DT_N_S_soc_S_rcc_40021000_COMPAT_MATCHES_st_stm32_rcc 1
#define DT_N_S_soc_S_rcc_40021000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_rcc_40021000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_COMPAT_MODEL_IDX_0 "stm32-rcc"
#define DT_N_S_soc_S_rcc_40021000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rcc_40021000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rcc_40021000_P_reg {1073876992 /* 0x40021000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rcc_40021000_P_reg_IDX_0 1073876992
#define DT_N_S_soc_S_rcc_40021000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rcc_40021000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_40021000, reg, 0) \
	fn(DT_N_S_soc_S_rcc_40021000, reg, 1)
#define DT_N_S_soc_S_rcc_40021000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_40021000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rcc_40021000, reg, 1)
#define DT_N_S_soc_S_rcc_40021000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_40021000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rcc_40021000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_40021000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rcc_40021000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_clock_frequency 80000000
#define DT_N_S_soc_S_rcc_40021000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_ahb_prescaler 1
#define DT_N_S_soc_S_rcc_40021000_P_ahb_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_40021000_P_ahb_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_apb1_prescaler 1
#define DT_N_S_soc_S_rcc_40021000_P_apb1_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_40021000_P_apb1_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_apb2_prescaler 1
#define DT_N_S_soc_S_rcc_40021000_P_apb2_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_40021000_P_apb2_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_undershoot_prevention 0
#define DT_N_S_soc_S_rcc_40021000_P_undershoot_prevention_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_compatible {"st,stm32-rcc"}
#define DT_N_S_soc_S_rcc_40021000_P_compatible_IDX_0 "st,stm32-rcc"
#define DT_N_S_soc_S_rcc_40021000_P_compatible_IDX_0_STRING_TOKEN st_stm32_rcc
#define DT_N_S_soc_S_rcc_40021000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_RCC
#define DT_N_S_soc_S_rcc_40021000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_40021000, compatible, 0)
#define DT_N_S_soc_S_rcc_40021000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_40021000, compatible, 0)
#define DT_N_S_soc_S_rcc_40021000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_40021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_40021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_P_compatible_LEN 1
#define DT_N_S_soc_S_rcc_40021000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_clocks_IDX_0_PH DT_N_S_clocks_S_pll
#define DT_N_S_soc_S_rcc_40021000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_40021000, clocks, 0)
#define DT_N_S_soc_S_rcc_40021000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_40021000, clocks, 0)
#define DT_N_S_soc_S_rcc_40021000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_40021000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_40021000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40021000_P_clocks_LEN 1
#define DT_N_S_soc_S_rcc_40021000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rcc_40021000_P_wakeup_source 0
#define DT_N_S_soc_S_rcc_40021000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000
 *
 * Binding (compatible = st,stm32-pinctrl):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/st,stm32-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_PATH "/soc/pin-controller@48000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_FULL_NAME "pin-controller@48000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5) fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12)
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12)
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5) fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12)
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12)
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_ORD 10

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_SUPPORTS_ORDS \
	11, /* /soc/pin-controller@48000000/adc1_in13_pc4 */ \
	12, /* /soc/pin-controller@48000000/adc1_in14_pc5 */ \
	13, /* /soc/pin-controller@48000000/adc1_in3_pc2 */ \
	14, /* /soc/pin-controller@48000000/adc1_in4_pc3 */ \
	15, /* /soc/pin-controller@48000000/adc1_in5_pa0 */ \
	18, /* /soc/pin-controller@48000000/gpio@48000000 */ \
	19, /* /soc/pin-controller@48000000/gpio@48000400 */ \
	20, /* /soc/pin-controller@48000000/gpio@48000800 */ \
	42, /* /soc/pin-controller@48000000/dac1_out1_pa4 */ \
	45, /* /soc/pin-controller@48000000/i2c1_scl_pb8 */ \
	46, /* /soc/pin-controller@48000000/i2c1_sda_pb9 */ \
	48, /* /soc/pin-controller@48000000/i2c3_scl_pc0 */ \
	49, /* /soc/pin-controller@48000000/i2c3_sda_pc1 */ \
	53, /* /soc/pin-controller@48000000/usb_otg_fs_dm_pa11 */ \
	54, /* /soc/pin-controller@48000000/usb_otg_fs_dp_pa12 */ \
	55, /* /soc/pin-controller@48000000/usb_otg_fs_id_pa10 */ \
	62, /* /soc/pin-controller@48000000/uart4_rx_pa1 */ \
	63, /* /soc/pin-controller@48000000/uart4_tx_pa0 */ \
	67, /* /soc/pin-controller@48000000/usart1_rx_pb7 */ \
	68, /* /soc/pin-controller@48000000/usart1_tx_pb6 */ \
	71, /* /soc/pin-controller@48000000/spi1_miso_pa6 */ \
	72, /* /soc/pin-controller@48000000/spi1_mosi_pa7 */ \
	73, /* /soc/pin-controller@48000000/spi1_sck_pa5 */ \
	85, /* /soc/pin-controller@48000000/i2c2_scl_pb10 */ \
	86, /* /soc/pin-controller@48000000/i2c2_sda_pb11 */ \
	88, /* /soc/pin-controller@48000000/gpio@48000c00 */ \
	94, /* /soc/pin-controller@48000000/gpio@48001400 */ \
	95, /* /soc/pin-controller@48000000/gpio@48001800 */ \
	96, /* /soc/pin-controller@48000000/gpio@48001c00 */ \
	98, /* /soc/pin-controller@48000000/quadspi_bk1_io0_pe12 */ \
	99, /* /soc/pin-controller@48000000/quadspi_bk1_io1_pe13 */ \
	100, /* /soc/pin-controller@48000000/quadspi_bk1_io2_pe14 */ \
	101, /* /soc/pin-controller@48000000/quadspi_bk1_io3_pe15 */ \
	102, /* /soc/pin-controller@48000000/quadspi_clk_pe10 */ \
	103, /* /soc/pin-controller@48000000/quadspi_ncs_pe11 */ \
	109, /* /soc/pin-controller@48000000/gpio@48001000 */ \
	110, /* /soc/pin-controller@48000000/spi3_miso_pc11 */ \
	111, /* /soc/pin-controller@48000000/spi3_mosi_pc12 */ \
	112, /* /soc/pin-controller@48000000/spi3_sck_pc10 */ \
	118, /* /soc/pin-controller@48000000/tim2_ch1_pa15 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_EXISTS 1
#define DT_N_INST_0_st_stm32_pinctrl DT_N_S_soc_S_pin_controller_48000000
#define DT_N_NODELABEL_pinctrl       DT_N_S_soc_S_pin_controller_48000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_REG_IDX_0_VAL_ADDRESS 1207959552 /* 0x48000000 */
#define DT_N_S_soc_S_pin_controller_48000000_REG_IDX_0_VAL_SIZE 8192 /* 0x2000 */
#define DT_N_S_soc_S_pin_controller_48000000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_COMPAT_MATCHES_st_stm32_pinctrl 1
#define DT_N_S_soc_S_pin_controller_48000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_48000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_COMPAT_MODEL_IDX_0 "stm32-pinctrl"
#define DT_N_S_soc_S_pin_controller_48000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_P_reg {1207959552 /* 0x48000000 */, 8192 /* 0x2000 */}
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_IDX_0 1207959552
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_IDX_1 8192
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_remap_pa11 0
#define DT_N_S_soc_S_pin_controller_48000000_P_remap_pa11_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_remap_pa12 0
#define DT_N_S_soc_S_pin_controller_48000000_P_remap_pa12_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_remap_pa11_pa12 0
#define DT_N_S_soc_S_pin_controller_48000000_P_remap_pa11_pa12_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible {"st,stm32-pinctrl"}
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_IDX_0 "st,stm32-pinctrl"
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_IDX_0_STRING_TOKEN st_stm32_pinctrl
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PINCTRL
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_48000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc1_in13_pc4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_PATH "/soc/pin-controller@48000000/adc1_in13_pc4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_FULL_NAME "adc1_in13_pc4"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_ORD 11

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_SUPPORTS_ORDS \
	16, /* /soc/adc@50040000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_EXISTS 1
#define DT_N_NODELABEL_adc1_in13_pc4 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_pinmux 1168
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc1_in14_pc5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_PATH "/soc/pin-controller@48000000/adc1_in14_pc5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_FULL_NAME "adc1_in14_pc5"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_ORD 12

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_SUPPORTS_ORDS \
	16, /* /soc/adc@50040000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_EXISTS 1
#define DT_N_NODELABEL_adc1_in14_pc5 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_pinmux 1200
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc1_in3_pc2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_PATH "/soc/pin-controller@48000000/adc1_in3_pc2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_FULL_NAME "adc1_in3_pc2"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_ORD 13

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_SUPPORTS_ORDS \
	16, /* /soc/adc@50040000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_EXISTS 1
#define DT_N_NODELABEL_adc1_in3_pc2 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_pinmux 1104
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc1_in4_pc3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_PATH "/soc/pin-controller@48000000/adc1_in4_pc3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_FULL_NAME "adc1_in4_pc3"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_ORD 14

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_SUPPORTS_ORDS \
	16, /* /soc/adc@50040000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_EXISTS 1
#define DT_N_NODELABEL_adc1_in4_pc3 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_pinmux 1136
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc1_in5_pa0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_PATH "/soc/pin-controller@48000000/adc1_in5_pa0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_FULL_NAME "adc1_in5_pa0"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_ORD 15

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_SUPPORTS_ORDS \
	16, /* /soc/adc@50040000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_EXISTS 1
#define DT_N_NODELABEL_adc1_in5_pa0 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_pinmux 16
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/adc@50040000
 *
 * Node identifier: DT_N_S_soc_S_adc_50040000
 *
 * Binding (compatible = st,stm32-adc):
 *   $ZEPHYR_BASE/dts/bindings/adc/st,stm32-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_50040000_PATH "/soc/adc@50040000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_50040000_FULL_NAME "adc@50040000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_50040000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_50040000_CHILD_IDX 21

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_50040000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_50040000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_50040000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_50040000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_50040000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_50040000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_50040000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_50040000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_50040000_ORD 16

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_50040000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */ \
	11, /* /soc/pin-controller@48000000/adc1_in13_pc4 */ \
	12, /* /soc/pin-controller@48000000/adc1_in14_pc5 */ \
	13, /* /soc/pin-controller@48000000/adc1_in3_pc2 */ \
	14, /* /soc/pin-controller@48000000/adc1_in4_pc3 */ \
	15, /* /soc/pin-controller@48000000/adc1_in5_pa0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_50040000_SUPPORTS_ORDS \
	17, /* /dietemp */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_50040000_EXISTS 1
#define DT_N_INST_0_st_stm32_adc DT_N_S_soc_S_adc_50040000
#define DT_N_NODELABEL_adc1      DT_N_S_soc_S_adc_50040000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_50040000_REG_NUM 1
#define DT_N_S_soc_S_adc_50040000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_REG_IDX_0_VAL_ADDRESS 1342439424 /* 0x50040000 */
#define DT_N_S_soc_S_adc_50040000_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_soc_S_adc_50040000_RANGES_NUM 0
#define DT_N_S_soc_S_adc_50040000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_50040000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_50040000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_adc_50040000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_50040000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_COMPAT_MATCHES_st_stm32_adc 1
#define DT_N_S_soc_S_adc_50040000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_adc_50040000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_COMPAT_MODEL_IDX_0 "stm32-adc"
#define DT_N_S_soc_S_adc_50040000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_50040000_PINCTRL_NUM 1
#define DT_N_S_soc_S_adc_50040000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_adc_50040000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_adc_50040000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_adc_50040000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0
#define DT_N_S_soc_S_adc_50040000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2
#define DT_N_S_soc_S_adc_50040000_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3
#define DT_N_S_soc_S_adc_50040000_PINCTRL_NAME_default_IDX_3_PH DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4
#define DT_N_S_soc_S_adc_50040000_PINCTRL_NAME_default_IDX_4_PH DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5

/* Generic property macros: */
#define DT_N_S_soc_S_adc_50040000_P_reg {1342439424 /* 0x50040000 */, 256 /* 0x100 */}
#define DT_N_S_soc_S_adc_50040000_P_reg_IDX_0 1342439424
#define DT_N_S_soc_S_adc_50040000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_reg_IDX_1 256
#define DT_N_S_soc_S_adc_50040000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50040000, reg, 0) \
	fn(DT_N_S_soc_S_adc_50040000, reg, 1)
#define DT_N_S_soc_S_adc_50040000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50040000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040000, reg, 1)
#define DT_N_S_soc_S_adc_50040000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50040000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50040000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_adc_50040000_P_clocks_IDX_0_VAL_bus 76
#define DT_N_S_soc_S_adc_50040000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_clocks_IDX_0_VAL_bits 8192
#define DT_N_S_soc_S_adc_50040000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50040000, clocks, 0)
#define DT_N_S_soc_S_adc_50040000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50040000, clocks, 0)
#define DT_N_S_soc_S_adc_50040000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50040000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50040000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040000_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_50040000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_interrupts {18 /* 0x12 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_50040000_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_adc_50040000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_50040000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50040000, interrupts, 0) \
	fn(DT_N_S_soc_S_adc_50040000, interrupts, 1)
#define DT_N_S_soc_S_adc_50040000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50040000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040000, interrupts, 1)
#define DT_N_S_soc_S_adc_50040000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50040000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50040000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_IDX_3 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_IDX_3_PH DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_IDX_3_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_IDX_4 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_IDX_4_PH DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_IDX_4_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50040000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_adc_50040000, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_adc_50040000, pinctrl_0, 2) \
	fn(DT_N_S_soc_S_adc_50040000, pinctrl_0, 3) \
	fn(DT_N_S_soc_S_adc_50040000, pinctrl_0, 4)
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50040000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040000, pinctrl_0, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040000, pinctrl_0, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040000, pinctrl_0, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040000, pinctrl_0, 4)
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50040000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040000, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040000, pinctrl_0, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040000, pinctrl_0, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040000, pinctrl_0, 4, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50040000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040000, pinctrl_0, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040000, pinctrl_0, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040000, pinctrl_0, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040000, pinctrl_0, 4, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_LEN 5
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50040000, pinctrl_names, 0)
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50040000, pinctrl_names, 0)
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50040000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50040000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_vref_mv 3300
#define DT_N_S_soc_S_adc_50040000_P_vref_mv_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_has_temp_channel 1
#define DT_N_S_soc_S_adc_50040000_P_has_temp_channel_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_has_vref_channel 1
#define DT_N_S_soc_S_adc_50040000_P_has_vref_channel_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_has_vbat_channel 0
#define DT_N_S_soc_S_adc_50040000_P_has_vbat_channel_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_status "okay"
#define DT_N_S_soc_S_adc_50040000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_adc_50040000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_50040000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_adc_50040000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_adc_50040000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_50040000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50040000, status, 0) \
	fn(DT_N_S_soc_S_adc_50040000, status, 1) \
	fn(DT_N_S_soc_S_adc_50040000, status, 2) \
	fn(DT_N_S_soc_S_adc_50040000, status, 3)
#define DT_N_S_soc_S_adc_50040000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50040000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040000, status, 3)
#define DT_N_S_soc_S_adc_50040000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50040000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50040000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_compatible {"st,stm32-adc"}
#define DT_N_S_soc_S_adc_50040000_P_compatible_IDX_0 "st,stm32-adc"
#define DT_N_S_soc_S_adc_50040000_P_compatible_IDX_0_STRING_TOKEN st_stm32_adc
#define DT_N_S_soc_S_adc_50040000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_ADC
#define DT_N_S_soc_S_adc_50040000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50040000, compatible, 0)
#define DT_N_S_soc_S_adc_50040000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50040000, compatible, 0)
#define DT_N_S_soc_S_adc_50040000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50040000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50040000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_50040000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_wakeup_source 0
#define DT_N_S_soc_S_adc_50040000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /dietemp
 *
 * Node identifier: DT_N_S_dietemp
 *
 * Binding (compatible = st,stm32-temp-cal):
 *   $ZEPHYR_BASE/dts/bindings/sensor/st,stm32-temp-cal.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_dietemp_PATH "/dietemp"

/* Node's name with unit-address: */
#define DT_N_S_dietemp_FULL_NAME "dietemp"

/* Node parent (/) identifier: */
#define DT_N_S_dietemp_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_dietemp_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_dietemp_FOREACH_CHILD(fn) 
#define DT_N_S_dietemp_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_dietemp_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_dietemp_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_dietemp_ORD 17

/* Ordinals for what this node depends on directly: */
#define DT_N_S_dietemp_REQUIRES_ORDS \
	0, /* / */ \
	16, /* /soc/adc@50040000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_dietemp_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_dietemp_EXISTS 1
#define DT_N_INST_0_st_stm32_temp_cal DT_N_S_dietemp
#define DT_N_NODELABEL_die_temp       DT_N_S_dietemp

/* Macros for properties that are special in the specification: */
#define DT_N_S_dietemp_REG_NUM 0
#define DT_N_S_dietemp_RANGES_NUM 0
#define DT_N_S_dietemp_FOREACH_RANGE(fn) 
#define DT_N_S_dietemp_IRQ_NUM 0
#define DT_N_S_dietemp_COMPAT_MATCHES_st_stm32_temp_cal 1
#define DT_N_S_dietemp_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_dietemp_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_dietemp_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_dietemp_COMPAT_MODEL_IDX_0 "stm32-temp-cal"
#define DT_N_S_dietemp_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_dietemp_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_dietemp_P_ts_cal1_addr 536835496
#define DT_N_S_dietemp_P_ts_cal1_addr_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal2_addr 536835530
#define DT_N_S_dietemp_P_ts_cal2_addr_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal1_temp 30
#define DT_N_S_dietemp_P_ts_cal1_temp_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal2_temp 110
#define DT_N_S_dietemp_P_ts_cal2_temp_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal_vrefanalog 3000
#define DT_N_S_dietemp_P_ts_cal_vrefanalog_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal_resolution 12
#define DT_N_S_dietemp_P_ts_cal_resolution_ENUM_IDX 0
#define DT_N_S_dietemp_P_ts_cal_resolution_EXISTS 1
#define DT_N_S_dietemp_P_status "okay"
#define DT_N_S_dietemp_P_status_STRING_TOKEN okay
#define DT_N_S_dietemp_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_dietemp_P_status_ENUM_IDX 1
#define DT_N_S_dietemp_P_status_ENUM_TOKEN okay
#define DT_N_S_dietemp_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dietemp, status, 0) \
	fn(DT_N_S_dietemp, status, 1) \
	fn(DT_N_S_dietemp, status, 2) \
	fn(DT_N_S_dietemp, status, 3)
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dietemp, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_dietemp, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_dietemp, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_dietemp, status, 3)
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dietemp, status, 0, __VA_ARGS__) \
	fn(DT_N_S_dietemp, status, 1, __VA_ARGS__) \
	fn(DT_N_S_dietemp, status, 2, __VA_ARGS__) \
	fn(DT_N_S_dietemp, status, 3, __VA_ARGS__)
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dietemp, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_dietemp, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_dietemp, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_dietemp, status, 3, __VA_ARGS__)
#define DT_N_S_dietemp_P_status_EXISTS 1
#define DT_N_S_dietemp_P_compatible {"st,stm32-temp-cal"}
#define DT_N_S_dietemp_P_compatible_IDX_0 "st,stm32-temp-cal"
#define DT_N_S_dietemp_P_compatible_IDX_0_STRING_TOKEN st_stm32_temp_cal
#define DT_N_S_dietemp_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TEMP_CAL
#define DT_N_S_dietemp_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dietemp, compatible, 0)
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dietemp, compatible, 0)
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dietemp, compatible, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dietemp, compatible, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_compatible_LEN 1
#define DT_N_S_dietemp_P_compatible_EXISTS 1
#define DT_N_S_dietemp_P_io_channels_IDX_0_EXISTS 1
#define DT_N_S_dietemp_P_io_channels_IDX_0_PH DT_N_S_soc_S_adc_50040000
#define DT_N_S_dietemp_P_io_channels_IDX_0_VAL_input 17
#define DT_N_S_dietemp_P_io_channels_IDX_0_VAL_input_EXISTS 1
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dietemp, io_channels, 0)
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dietemp, io_channels, 0)
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dietemp, io_channels, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dietemp, io_channels, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_io_channels_LEN 1
#define DT_N_S_dietemp_P_io_channels_EXISTS 1
#define DT_N_S_dietemp_P_wakeup_source 0
#define DT_N_S_dietemp_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48000000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_PATH "/soc/pin-controller@48000000/gpio@48000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FULL_NAME "gpio@48000000"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_ORD 18

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_REQUIRES_ORDS \
	9, /* /soc/rcc@40021000 */ \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_SUPPORTS_ORDS \
	21, /* /dm163 */ \
	23, /* /rgb_matrix */ \
	37, /* /leds/led_1 */ \
	74, /* /soc/spi@40013000 */ \
	115, /* /soc/spi@40003c00/spbtle-rf@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_EXISTS 1
#define DT_N_INST_0_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
#define DT_N_NODELABEL_gpioa      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_REG_IDX_0_VAL_ADDRESS 1207959552 /* 0x48000000 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg {1207959552 /* 0x48000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_IDX_0 1207959552
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_VAL_bus 76
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48000400
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_PATH "/soc/pin-controller@48000000/gpio@48000400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FULL_NAME "gpio@48000400"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_ORD 19

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_REQUIRES_ORDS \
	9, /* /soc/rcc@40021000 */ \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_SUPPORTS_ORDS \
	21, /* /dm163 */ \
	23, /* /rgb_matrix */ \
	38, /* /leds/led_2 */ \
	114, /* /soc/spi@40003c00/ism43362@1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_EXISTS 1
#define DT_N_INST_1_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_NODELABEL_gpiob      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_REG_IDX_0_VAL_ADDRESS 1207960576 /* 0x48000400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg {1207960576 /* 0x48000400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_IDX_0 1207960576
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_VAL_bus 76
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48000800
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_PATH "/soc/pin-controller@48000000/gpio@48000800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FULL_NAME "gpio@48000800"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_ORD 20

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_REQUIRES_ORDS \
	9, /* /soc/rcc@40021000 */ \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_SUPPORTS_ORDS \
	21, /* /dm163 */ \
	35, /* /gpio_keys/button_0 */ \
	93, /* /soc/i2c@40005800/vl53l0x@29 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_EXISTS 1
#define DT_N_INST_2_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800
#define DT_N_NODELABEL_gpioc      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_REG_IDX_0_VAL_ADDRESS 1207961600 /* 0x48000800 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg {1207961600 /* 0x48000800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_IDX_0 1207961600
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_VAL_bus 76
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_VAL_bits 4
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /dm163
 *
 * Node identifier: DT_N_S_dm163
 *
 * Binding (compatible = siti,dm163):
 *   /home/sorybarry/Documents/3ASE/SE302a/sory-ibrahima-barry/dm163_example/dts/bindings/siti,dm163.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_dm163_PATH "/dm163"

/* Node's name with unit-address: */
#define DT_N_S_dm163_FULL_NAME "dm163"

/* Node parent (/) identifier: */
#define DT_N_S_dm163_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_dm163_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_dm163_FOREACH_CHILD(fn) 
#define DT_N_S_dm163_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_dm163_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_dm163_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_dm163_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_dm163_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_dm163_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_dm163_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_dm163_ORD 21

/* Ordinals for what this node depends on directly: */
#define DT_N_S_dm163_REQUIRES_ORDS \
	0, /* / */ \
	18, /* /soc/pin-controller@48000000/gpio@48000000 */ \
	19, /* /soc/pin-controller@48000000/gpio@48000400 */ \
	20, /* /soc/pin-controller@48000000/gpio@48000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_dm163_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_dm163_EXISTS 1
#define DT_N_INST_0_siti_dm163 DT_N_S_dm163
#define DT_N_NODELABEL_dm163   DT_N_S_dm163

/* Macros for properties that are special in the specification: */
#define DT_N_S_dm163_REG_NUM 0
#define DT_N_S_dm163_RANGES_NUM 0
#define DT_N_S_dm163_FOREACH_RANGE(fn) 
#define DT_N_S_dm163_IRQ_NUM 0
#define DT_N_S_dm163_COMPAT_MATCHES_siti_dm163 1
#define DT_N_S_dm163_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_dm163_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_dm163_P_sin_gpios_IDX_0_EXISTS 1
#define DT_N_S_dm163_P_sin_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
#define DT_N_S_dm163_P_sin_gpios_IDX_0_VAL_pin 4
#define DT_N_S_dm163_P_sin_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_dm163_P_sin_gpios_IDX_0_VAL_flags 0
#define DT_N_S_dm163_P_sin_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_dm163_P_sin_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dm163, sin_gpios, 0)
#define DT_N_S_dm163_P_sin_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dm163, sin_gpios, 0)
#define DT_N_S_dm163_P_sin_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dm163, sin_gpios, 0, __VA_ARGS__)
#define DT_N_S_dm163_P_sin_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dm163, sin_gpios, 0, __VA_ARGS__)
#define DT_N_S_dm163_P_sin_gpios_LEN 1
#define DT_N_S_dm163_P_sin_gpios_EXISTS 1
#define DT_N_S_dm163_P_selbk_gpios_IDX_0_EXISTS 1
#define DT_N_S_dm163_P_selbk_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800
#define DT_N_S_dm163_P_selbk_gpios_IDX_0_VAL_pin 5
#define DT_N_S_dm163_P_selbk_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_dm163_P_selbk_gpios_IDX_0_VAL_flags 0
#define DT_N_S_dm163_P_selbk_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_dm163_P_selbk_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dm163, selbk_gpios, 0)
#define DT_N_S_dm163_P_selbk_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dm163, selbk_gpios, 0)
#define DT_N_S_dm163_P_selbk_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dm163, selbk_gpios, 0, __VA_ARGS__)
#define DT_N_S_dm163_P_selbk_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dm163, selbk_gpios, 0, __VA_ARGS__)
#define DT_N_S_dm163_P_selbk_gpios_LEN 1
#define DT_N_S_dm163_P_selbk_gpios_EXISTS 1
#define DT_N_S_dm163_P_lat_gpios_IDX_0_EXISTS 1
#define DT_N_S_dm163_P_lat_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800
#define DT_N_S_dm163_P_lat_gpios_IDX_0_VAL_pin 4
#define DT_N_S_dm163_P_lat_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_dm163_P_lat_gpios_IDX_0_VAL_flags 1
#define DT_N_S_dm163_P_lat_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_dm163_P_lat_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dm163, lat_gpios, 0)
#define DT_N_S_dm163_P_lat_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dm163, lat_gpios, 0)
#define DT_N_S_dm163_P_lat_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dm163, lat_gpios, 0, __VA_ARGS__)
#define DT_N_S_dm163_P_lat_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dm163, lat_gpios, 0, __VA_ARGS__)
#define DT_N_S_dm163_P_lat_gpios_LEN 1
#define DT_N_S_dm163_P_lat_gpios_EXISTS 1
#define DT_N_S_dm163_P_gck_gpios_IDX_0_EXISTS 1
#define DT_N_S_dm163_P_gck_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_S_dm163_P_gck_gpios_IDX_0_VAL_pin 1
#define DT_N_S_dm163_P_gck_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_dm163_P_gck_gpios_IDX_0_VAL_flags 0
#define DT_N_S_dm163_P_gck_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_dm163_P_gck_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dm163, gck_gpios, 0)
#define DT_N_S_dm163_P_gck_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dm163, gck_gpios, 0)
#define DT_N_S_dm163_P_gck_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dm163, gck_gpios, 0, __VA_ARGS__)
#define DT_N_S_dm163_P_gck_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dm163, gck_gpios, 0, __VA_ARGS__)
#define DT_N_S_dm163_P_gck_gpios_LEN 1
#define DT_N_S_dm163_P_gck_gpios_EXISTS 1
#define DT_N_S_dm163_P_rst_gpios_IDX_0_EXISTS 1
#define DT_N_S_dm163_P_rst_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800
#define DT_N_S_dm163_P_rst_gpios_IDX_0_VAL_pin 3
#define DT_N_S_dm163_P_rst_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_dm163_P_rst_gpios_IDX_0_VAL_flags 1
#define DT_N_S_dm163_P_rst_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_dm163_P_rst_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dm163, rst_gpios, 0)
#define DT_N_S_dm163_P_rst_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dm163, rst_gpios, 0)
#define DT_N_S_dm163_P_rst_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dm163, rst_gpios, 0, __VA_ARGS__)
#define DT_N_S_dm163_P_rst_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dm163, rst_gpios, 0, __VA_ARGS__)
#define DT_N_S_dm163_P_rst_gpios_LEN 1
#define DT_N_S_dm163_P_rst_gpios_EXISTS 1

/*
 * Devicetree node: /memory@20000000
 *
 * Node identifier: DT_N_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_20000000_PATH "/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_memory_20000000_FULL_NAME "memory@20000000"

/* Node parent (/) identifier: */
#define DT_N_S_memory_20000000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_20000000_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_memory_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_20000000_ORD 22

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_20000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_memory_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_20000000_REG_NUM 1
#define DT_N_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_SIZE 98304 /* 0x18000 */
#define DT_N_S_memory_20000000_RANGES_NUM 0
#define DT_N_S_memory_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 98304 /* 0x18000 */}
#define DT_N_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_IDX_1 98304
#define DT_N_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20000000, reg, 0) \
	fn(DT_N_S_memory_20000000, reg, 1)
#define DT_N_S_memory_20000000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_20000000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_memory_20000000, reg, 1)
#define DT_N_S_memory_20000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_20000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_memory_20000000, reg, 1, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_20000000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_memory_20000000, reg, 1, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_memory_20000000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_memory_20000000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20000000, compatible, 0)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_20000000, compatible, 0)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_memory_20000000_P_compatible_EXISTS 1
#define DT_N_S_memory_20000000_P_wakeup_source 0
#define DT_N_S_memory_20000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /rgb_matrix
 *
 * Node identifier: DT_N_S_rgb_matrix
 *
 * Binding (compatible = rgb_matrix):
 *   /home/sorybarry/Documents/3ASE/SE302a/sory-ibrahima-barry/dm163_example/dts/bindings/rgb_matrix.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_rgb_matrix_PATH "/rgb_matrix"

/* Node's name with unit-address: */
#define DT_N_S_rgb_matrix_FULL_NAME "rgb_matrix"

/* Node parent (/) identifier: */
#define DT_N_S_rgb_matrix_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_rgb_matrix_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_rgb_matrix_FOREACH_CHILD(fn) 
#define DT_N_S_rgb_matrix_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_rgb_matrix_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_rgb_matrix_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_rgb_matrix_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_rgb_matrix_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_rgb_matrix_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_rgb_matrix_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_rgb_matrix_ORD 23

/* Ordinals for what this node depends on directly: */
#define DT_N_S_rgb_matrix_REQUIRES_ORDS \
	0, /* / */ \
	18, /* /soc/pin-controller@48000000/gpio@48000000 */ \
	19, /* /soc/pin-controller@48000000/gpio@48000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_rgb_matrix_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_rgb_matrix_EXISTS 1
#define DT_N_INST_0_rgb_matrix    DT_N_S_rgb_matrix
#define DT_N_NODELABEL_rgb_matrix DT_N_S_rgb_matrix

/* Macros for properties that are special in the specification: */
#define DT_N_S_rgb_matrix_REG_NUM 0
#define DT_N_S_rgb_matrix_RANGES_NUM 0
#define DT_N_S_rgb_matrix_FOREACH_RANGE(fn) 
#define DT_N_S_rgb_matrix_IRQ_NUM 0
#define DT_N_S_rgb_matrix_COMPAT_MATCHES_rgb_matrix 1
#define DT_N_S_rgb_matrix_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_rgb_matrix_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_0_EXISTS 1
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_0_VAL_pin 2
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_0_VAL_flags 0
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_1_EXISTS 1
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_1_VAL_pin 15
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_1_VAL_pin_EXISTS 1
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_1_VAL_flags 0
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_2_EXISTS 1
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_2_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_2_VAL_pin 2
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_2_VAL_pin_EXISTS 1
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_2_VAL_flags 0
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_3_EXISTS 1
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_3_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_3_VAL_pin 7
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_3_VAL_pin_EXISTS 1
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_3_VAL_flags 0
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_3_VAL_flags_EXISTS 1
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_4_EXISTS 1
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_4_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_4_VAL_pin 6
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_4_VAL_pin_EXISTS 1
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_4_VAL_flags 0
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_4_VAL_flags_EXISTS 1
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_5_EXISTS 1
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_5_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_5_VAL_pin 5
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_5_VAL_pin_EXISTS 1
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_5_VAL_flags 0
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_5_VAL_flags_EXISTS 1
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_6_EXISTS 1
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_6_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_6_VAL_pin 0
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_6_VAL_pin_EXISTS 1
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_6_VAL_flags 0
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_6_VAL_flags_EXISTS 1
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_7_EXISTS 1
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_7_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_7_VAL_pin 3
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_7_VAL_pin_EXISTS 1
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_7_VAL_flags 0
#define DT_N_S_rgb_matrix_P_rows_gpios_IDX_7_VAL_flags_EXISTS 1
#define DT_N_S_rgb_matrix_P_rows_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_rgb_matrix, rows_gpios, 0) \
	fn(DT_N_S_rgb_matrix, rows_gpios, 1) \
	fn(DT_N_S_rgb_matrix, rows_gpios, 2) \
	fn(DT_N_S_rgb_matrix, rows_gpios, 3) \
	fn(DT_N_S_rgb_matrix, rows_gpios, 4) \
	fn(DT_N_S_rgb_matrix, rows_gpios, 5) \
	fn(DT_N_S_rgb_matrix, rows_gpios, 6) \
	fn(DT_N_S_rgb_matrix, rows_gpios, 7)
#define DT_N_S_rgb_matrix_P_rows_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_rgb_matrix, rows_gpios, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_rgb_matrix, rows_gpios, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_rgb_matrix, rows_gpios, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_rgb_matrix, rows_gpios, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_rgb_matrix, rows_gpios, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_rgb_matrix, rows_gpios, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_rgb_matrix, rows_gpios, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_rgb_matrix, rows_gpios, 7)
#define DT_N_S_rgb_matrix_P_rows_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_rgb_matrix, rows_gpios, 0, __VA_ARGS__) \
	fn(DT_N_S_rgb_matrix, rows_gpios, 1, __VA_ARGS__) \
	fn(DT_N_S_rgb_matrix, rows_gpios, 2, __VA_ARGS__) \
	fn(DT_N_S_rgb_matrix, rows_gpios, 3, __VA_ARGS__) \
	fn(DT_N_S_rgb_matrix, rows_gpios, 4, __VA_ARGS__) \
	fn(DT_N_S_rgb_matrix, rows_gpios, 5, __VA_ARGS__) \
	fn(DT_N_S_rgb_matrix, rows_gpios, 6, __VA_ARGS__) \
	fn(DT_N_S_rgb_matrix, rows_gpios, 7, __VA_ARGS__)
#define DT_N_S_rgb_matrix_P_rows_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_rgb_matrix, rows_gpios, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_rgb_matrix, rows_gpios, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_rgb_matrix, rows_gpios, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_rgb_matrix, rows_gpios, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_rgb_matrix, rows_gpios, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_rgb_matrix, rows_gpios, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_rgb_matrix, rows_gpios, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_rgb_matrix, rows_gpios, 7, __VA_ARGS__)
#define DT_N_S_rgb_matrix_P_rows_gpios_LEN 8
#define DT_N_S_rgb_matrix_P_rows_gpios_EXISTS 1

/*
 * Devicetree node: /clocks/clk-hse
 *
 * Node identifier: DT_N_S_clocks_S_clk_hse
 *
 * Binding (compatible = st,stm32-hse-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32-hse-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hse_PATH "/clocks/clk-hse"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hse_FULL_NAME "clk-hse"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hse_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_hse_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hse_ORD 24

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hse_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hse_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hse_EXISTS 1
#define DT_N_INST_0_st_stm32_hse_clock DT_N_S_clocks_S_clk_hse
#define DT_N_NODELABEL_clk_hse         DT_N_S_clocks_S_clk_hse

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hse_REG_NUM 0
#define DT_N_S_clocks_S_clk_hse_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_hse_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_hse_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hse_COMPAT_MATCHES_st_stm32_hse_clock 1
#define DT_N_S_clocks_S_clk_hse_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_clk_hse_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_COMPAT_MODEL_IDX_0 "stm32-hse-clock"
#define DT_N_S_clocks_S_clk_hse_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hse_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hse_P_hse_bypass 0
#define DT_N_S_clocks_S_clk_hse_P_hse_bypass_EXISTS 1

/*
 * Devicetree node: /clocks/clk-lse
 *
 * Node identifier: DT_N_S_clocks_S_clk_lse
 *
 * Binding (compatible = st,stm32-lse-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32-lse-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_lse_PATH "/clocks/clk-lse"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_lse_FULL_NAME "clk-lse"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_lse_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_lse_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_lse_ORD 25

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_lse_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_lse_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_lse_EXISTS 1
#define DT_N_INST_0_st_stm32_lse_clock DT_N_S_clocks_S_clk_lse
#define DT_N_NODELABEL_clk_lse         DT_N_S_clocks_S_clk_lse

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_lse_REG_NUM 0
#define DT_N_S_clocks_S_clk_lse_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_lse_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_lse_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_lse_COMPAT_MATCHES_st_stm32_lse_clock 1
#define DT_N_S_clocks_S_clk_lse_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_clk_lse_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_COMPAT_MODEL_IDX_0 "stm32-lse-clock"
#define DT_N_S_clocks_S_clk_lse_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_lse_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_lse_P_driving_capability 0
#define DT_N_S_clocks_S_clk_lse_P_driving_capability_ENUM_IDX 0
#define DT_N_S_clocks_S_clk_lse_P_driving_capability_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_clock_frequency 32768
#define DT_N_S_clocks_S_clk_lse_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk-lsi
 *
 * Node identifier: DT_N_S_clocks_S_clk_lsi
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_lsi_PATH "/clocks/clk-lsi"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_lsi_FULL_NAME "clk-lsi"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_lsi_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_lsi_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_lsi_ORD 26

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_lsi_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_lsi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_lsi_EXISTS 1
#define DT_N_INST_1_fixed_clock DT_N_S_clocks_S_clk_lsi
#define DT_N_NODELABEL_clk_lsi  DT_N_S_clocks_S_clk_lsi

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_lsi_REG_NUM 0
#define DT_N_S_clocks_S_clk_lsi_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_lsi_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_lsi_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_lsi_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_lsi_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_lsi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_lsi_P_clock_frequency 32000
#define DT_N_S_clocks_S_clk_lsi_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk-msi
 *
 * Node identifier: DT_N_S_clocks_S_clk_msi
 *
 * Binding (compatible = st,stm32-msi-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32-msi-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_msi_PATH "/clocks/clk-msi"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_msi_FULL_NAME "clk-msi"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_msi_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_msi_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_msi_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_msi_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_msi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_msi_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_msi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_msi_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_msi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_msi_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_msi_ORD 27

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_msi_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_msi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_msi_EXISTS 1
#define DT_N_INST_0_st_stm32_msi_clock DT_N_S_clocks_S_clk_msi
#define DT_N_NODELABEL_clk_msi         DT_N_S_clocks_S_clk_msi

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_msi_REG_NUM 0
#define DT_N_S_clocks_S_clk_msi_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_msi_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_msi_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_msi_COMPAT_MATCHES_st_stm32_msi_clock 1
#define DT_N_S_clocks_S_clk_msi_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_msi_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_clk_msi_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_msi_COMPAT_MODEL_IDX_0 "stm32-msi-clock"
#define DT_N_S_clocks_S_clk_msi_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_msi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_msi_P_msi_range 6
#define DT_N_S_clocks_S_clk_msi_P_msi_range_ENUM_IDX 6
#define DT_N_S_clocks_S_clk_msi_P_msi_range_EXISTS 1
#define DT_N_S_clocks_S_clk_msi_P_msi_pll_mode 0
#define DT_N_S_clocks_S_clk_msi_P_msi_pll_mode_EXISTS 1
#define DT_N_S_clocks_S_clk_msi_P_status "disabled"
#define DT_N_S_clocks_S_clk_msi_P_status_STRING_TOKEN disabled
#define DT_N_S_clocks_S_clk_msi_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_clk_msi_P_status_ENUM_IDX 2
#define DT_N_S_clocks_S_clk_msi_P_status_ENUM_TOKEN disabled
#define DT_N_S_clocks_S_clk_msi_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_clk_msi_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_msi, status, 0) \
	fn(DT_N_S_clocks_S_clk_msi, status, 1) \
	fn(DT_N_S_clocks_S_clk_msi, status, 2) \
	fn(DT_N_S_clocks_S_clk_msi, status, 3) \
	fn(DT_N_S_clocks_S_clk_msi, status, 4) \
	fn(DT_N_S_clocks_S_clk_msi, status, 5) \
	fn(DT_N_S_clocks_S_clk_msi, status, 6) \
	fn(DT_N_S_clocks_S_clk_msi, status, 7)
#define DT_N_S_clocks_S_clk_msi_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_msi, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_clk_msi, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_clk_msi, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_clk_msi, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_clk_msi, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_clk_msi, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_clk_msi, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_clk_msi, status, 7)
#define DT_N_S_clocks_S_clk_msi_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_msi, status, 0, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_clk_msi, status, 1, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_clk_msi, status, 2, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_clk_msi, status, 3, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_clk_msi, status, 4, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_clk_msi, status, 5, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_clk_msi, status, 6, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_clk_msi, status, 7, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_msi_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_msi, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_clk_msi, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_clk_msi, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_clk_msi, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_clk_msi, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_clk_msi, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_clk_msi, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_clk_msi, status, 7, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_msi_P_status_EXISTS 1
#define DT_N_S_clocks_S_clk_msi_P_compatible {"st,stm32-msi-clock"}
#define DT_N_S_clocks_S_clk_msi_P_compatible_IDX_0 "st,stm32-msi-clock"
#define DT_N_S_clocks_S_clk_msi_P_compatible_IDX_0_STRING_TOKEN st_stm32_msi_clock
#define DT_N_S_clocks_S_clk_msi_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_MSI_CLOCK
#define DT_N_S_clocks_S_clk_msi_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_msi_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_msi, compatible, 0)
#define DT_N_S_clocks_S_clk_msi_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_msi, compatible, 0)
#define DT_N_S_clocks_S_clk_msi_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_msi, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_msi_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_msi, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_msi_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_msi_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_msi_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_msi_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 28

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	33, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /power-states
 *
 * Node identifier: DT_N_S_power_states
 */

/* Node's full path: */
#define DT_N_S_power_states_PATH "/power-states"

/* Node's name with unit-address: */
#define DT_N_S_power_states_FULL_NAME "power-states"

/* Node parent (/) identifier: */
#define DT_N_S_power_states_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_power_states_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_power_states_FOREACH_CHILD(fn) fn(DT_N_S_power_states_S_state0) fn(DT_N_S_power_states_S_state1) fn(DT_N_S_power_states_S_state2)
#define DT_N_S_power_states_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_power_states_S_state0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_power_states_S_state1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_power_states_S_state2)
#define DT_N_S_power_states_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_power_states_S_state0, __VA_ARGS__) fn(DT_N_S_power_states_S_state1, __VA_ARGS__) fn(DT_N_S_power_states_S_state2, __VA_ARGS__)
#define DT_N_S_power_states_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_power_states_S_state0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_power_states_S_state1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_power_states_S_state2, __VA_ARGS__)
#define DT_N_S_power_states_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_power_states_S_state0) fn(DT_N_S_power_states_S_state1) fn(DT_N_S_power_states_S_state2)
#define DT_N_S_power_states_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_power_states_S_state0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_power_states_S_state1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_power_states_S_state2)
#define DT_N_S_power_states_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_power_states_S_state0, __VA_ARGS__) fn(DT_N_S_power_states_S_state1, __VA_ARGS__) fn(DT_N_S_power_states_S_state2, __VA_ARGS__)
#define DT_N_S_power_states_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_power_states_S_state0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_power_states_S_state1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_power_states_S_state2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_power_states_ORD 29

/* Ordinals for what this node depends on directly: */
#define DT_N_S_power_states_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_power_states_SUPPORTS_ORDS \
	30, /* /power-states/state0 */ \
	31, /* /power-states/state1 */ \
	32, /* /power-states/state2 */

/* Existence and alternate IDs: */
#define DT_N_S_power_states_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_power_states_REG_NUM 0
#define DT_N_S_power_states_RANGES_NUM 0
#define DT_N_S_power_states_FOREACH_RANGE(fn) 
#define DT_N_S_power_states_IRQ_NUM 0
#define DT_N_S_power_states_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_power_states_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /power-states/state0
 *
 * Node identifier: DT_N_S_power_states_S_state0
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE/dts/bindings/power/zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_power_states_S_state0_PATH "/power-states/state0"

/* Node's name with unit-address: */
#define DT_N_S_power_states_S_state0_FULL_NAME "state0"

/* Node parent (/power-states) identifier: */
#define DT_N_S_power_states_S_state0_PARENT DT_N_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_power_states_S_state0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_power_states_S_state0_FOREACH_CHILD(fn) 
#define DT_N_S_power_states_S_state0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_power_states_S_state0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_power_states_S_state0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_power_states_S_state0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_power_states_S_state0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_power_states_S_state0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_power_states_S_state0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_power_states_S_state0_ORD 30

/* Ordinals for what this node depends on directly: */
#define DT_N_S_power_states_S_state0_REQUIRES_ORDS \
	29, /* /power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_power_states_S_state0_SUPPORTS_ORDS \
	33, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_power_states_S_state0_EXISTS 1
#define DT_N_INST_0_zephyr_power_state DT_N_S_power_states_S_state0
#define DT_N_NODELABEL_stop0           DT_N_S_power_states_S_state0

/* Macros for properties that are special in the specification: */
#define DT_N_S_power_states_S_state0_REG_NUM 0
#define DT_N_S_power_states_S_state0_RANGES_NUM 0
#define DT_N_S_power_states_S_state0_FOREACH_RANGE(fn) 
#define DT_N_S_power_states_S_state0_IRQ_NUM 0
#define DT_N_S_power_states_S_state0_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_power_states_S_state0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_power_states_S_state0_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_power_states_S_state0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_power_states_S_state0_COMPAT_MODEL_IDX_0 "power-state"
#define DT_N_S_power_states_S_state0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_power_states_S_state0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_power_states_S_state0_P_power_state_name "suspend-to-idle"
#define DT_N_S_power_states_S_state0_P_power_state_name_STRING_TOKEN suspend_to_idle
#define DT_N_S_power_states_S_state0_P_power_state_name_STRING_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_power_states_S_state0_P_power_state_name_ENUM_IDX 2
#define DT_N_S_power_states_S_state0_P_power_state_name_ENUM_TOKEN suspend_to_idle
#define DT_N_S_power_states_S_state0_P_power_state_name_ENUM_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_power_states_S_state0_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_power_states_S_state0, power_state_name, 0) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 1) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 2) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 3) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 4) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 5) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 6) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 7) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 8) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 9) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 10) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 11) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 12) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 13) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 14)
#define DT_N_S_power_states_S_state0_P_power_state_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_power_states_S_state0, power_state_name, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 14)
#define DT_N_S_power_states_S_state0_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_power_states_S_state0, power_state_name, 0, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 1, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 2, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 3, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 4, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 5, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 6, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 7, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 8, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 9, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 10, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 11, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 12, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 13, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 14, __VA_ARGS__)
#define DT_N_S_power_states_S_state0_P_power_state_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_power_states_S_state0, power_state_name, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state0, power_state_name, 14, __VA_ARGS__)
#define DT_N_S_power_states_S_state0_P_power_state_name_EXISTS 1
#define DT_N_S_power_states_S_state0_P_substate_id 1
#define DT_N_S_power_states_S_state0_P_substate_id_EXISTS 1
#define DT_N_S_power_states_S_state0_P_min_residency_us 500
#define DT_N_S_power_states_S_state0_P_min_residency_us_EXISTS 1

/*
 * Devicetree node: /power-states/state1
 *
 * Node identifier: DT_N_S_power_states_S_state1
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE/dts/bindings/power/zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_power_states_S_state1_PATH "/power-states/state1"

/* Node's name with unit-address: */
#define DT_N_S_power_states_S_state1_FULL_NAME "state1"

/* Node parent (/power-states) identifier: */
#define DT_N_S_power_states_S_state1_PARENT DT_N_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_power_states_S_state1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_power_states_S_state1_FOREACH_CHILD(fn) 
#define DT_N_S_power_states_S_state1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_power_states_S_state1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_power_states_S_state1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_power_states_S_state1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_power_states_S_state1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_power_states_S_state1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_power_states_S_state1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_power_states_S_state1_ORD 31

/* Ordinals for what this node depends on directly: */
#define DT_N_S_power_states_S_state1_REQUIRES_ORDS \
	29, /* /power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_power_states_S_state1_SUPPORTS_ORDS \
	33, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_power_states_S_state1_EXISTS 1
#define DT_N_INST_1_zephyr_power_state DT_N_S_power_states_S_state1
#define DT_N_NODELABEL_stop1           DT_N_S_power_states_S_state1

/* Macros for properties that are special in the specification: */
#define DT_N_S_power_states_S_state1_REG_NUM 0
#define DT_N_S_power_states_S_state1_RANGES_NUM 0
#define DT_N_S_power_states_S_state1_FOREACH_RANGE(fn) 
#define DT_N_S_power_states_S_state1_IRQ_NUM 0
#define DT_N_S_power_states_S_state1_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_power_states_S_state1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_power_states_S_state1_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_power_states_S_state1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_power_states_S_state1_COMPAT_MODEL_IDX_0 "power-state"
#define DT_N_S_power_states_S_state1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_power_states_S_state1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_power_states_S_state1_P_power_state_name "suspend-to-idle"
#define DT_N_S_power_states_S_state1_P_power_state_name_STRING_TOKEN suspend_to_idle
#define DT_N_S_power_states_S_state1_P_power_state_name_STRING_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_power_states_S_state1_P_power_state_name_ENUM_IDX 2
#define DT_N_S_power_states_S_state1_P_power_state_name_ENUM_TOKEN suspend_to_idle
#define DT_N_S_power_states_S_state1_P_power_state_name_ENUM_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_power_states_S_state1_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_power_states_S_state1, power_state_name, 0) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 1) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 2) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 3) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 4) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 5) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 6) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 7) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 8) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 9) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 10) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 11) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 12) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 13) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 14)
#define DT_N_S_power_states_S_state1_P_power_state_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_power_states_S_state1, power_state_name, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 14)
#define DT_N_S_power_states_S_state1_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_power_states_S_state1, power_state_name, 0, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 1, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 2, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 3, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 4, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 5, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 6, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 7, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 8, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 9, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 10, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 11, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 12, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 13, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 14, __VA_ARGS__)
#define DT_N_S_power_states_S_state1_P_power_state_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_power_states_S_state1, power_state_name, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state1, power_state_name, 14, __VA_ARGS__)
#define DT_N_S_power_states_S_state1_P_power_state_name_EXISTS 1
#define DT_N_S_power_states_S_state1_P_substate_id 2
#define DT_N_S_power_states_S_state1_P_substate_id_EXISTS 1
#define DT_N_S_power_states_S_state1_P_min_residency_us 700
#define DT_N_S_power_states_S_state1_P_min_residency_us_EXISTS 1

/*
 * Devicetree node: /power-states/state2
 *
 * Node identifier: DT_N_S_power_states_S_state2
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE/dts/bindings/power/zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_power_states_S_state2_PATH "/power-states/state2"

/* Node's name with unit-address: */
#define DT_N_S_power_states_S_state2_FULL_NAME "state2"

/* Node parent (/power-states) identifier: */
#define DT_N_S_power_states_S_state2_PARENT DT_N_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_power_states_S_state2_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_power_states_S_state2_FOREACH_CHILD(fn) 
#define DT_N_S_power_states_S_state2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_power_states_S_state2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_power_states_S_state2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_power_states_S_state2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_power_states_S_state2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_power_states_S_state2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_power_states_S_state2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_power_states_S_state2_ORD 32

/* Ordinals for what this node depends on directly: */
#define DT_N_S_power_states_S_state2_REQUIRES_ORDS \
	29, /* /power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_power_states_S_state2_SUPPORTS_ORDS \
	33, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_power_states_S_state2_EXISTS 1
#define DT_N_INST_2_zephyr_power_state DT_N_S_power_states_S_state2
#define DT_N_NODELABEL_stop2           DT_N_S_power_states_S_state2

/* Macros for properties that are special in the specification: */
#define DT_N_S_power_states_S_state2_REG_NUM 0
#define DT_N_S_power_states_S_state2_RANGES_NUM 0
#define DT_N_S_power_states_S_state2_FOREACH_RANGE(fn) 
#define DT_N_S_power_states_S_state2_IRQ_NUM 0
#define DT_N_S_power_states_S_state2_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_power_states_S_state2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_power_states_S_state2_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_power_states_S_state2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_power_states_S_state2_COMPAT_MODEL_IDX_0 "power-state"
#define DT_N_S_power_states_S_state2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_power_states_S_state2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_power_states_S_state2_P_power_state_name "suspend-to-idle"
#define DT_N_S_power_states_S_state2_P_power_state_name_STRING_TOKEN suspend_to_idle
#define DT_N_S_power_states_S_state2_P_power_state_name_STRING_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_power_states_S_state2_P_power_state_name_ENUM_IDX 2
#define DT_N_S_power_states_S_state2_P_power_state_name_ENUM_TOKEN suspend_to_idle
#define DT_N_S_power_states_S_state2_P_power_state_name_ENUM_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_power_states_S_state2_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_power_states_S_state2, power_state_name, 0) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 1) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 2) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 3) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 4) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 5) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 6) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 7) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 8) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 9) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 10) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 11) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 12) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 13) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 14)
#define DT_N_S_power_states_S_state2_P_power_state_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_power_states_S_state2, power_state_name, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 14)
#define DT_N_S_power_states_S_state2_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_power_states_S_state2, power_state_name, 0, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 1, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 2, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 3, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 4, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 5, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 6, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 7, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 8, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 9, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 10, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 11, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 12, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 13, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 14, __VA_ARGS__)
#define DT_N_S_power_states_S_state2_P_power_state_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_power_states_S_state2, power_state_name, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_power_states_S_state2, power_state_name, 14, __VA_ARGS__)
#define DT_N_S_power_states_S_state2_P_power_state_name_EXISTS 1
#define DT_N_S_power_states_S_state2_P_substate_id 3
#define DT_N_S_power_states_S_state2_P_substate_id_EXISTS 1
#define DT_N_S_power_states_S_state2_P_min_residency_us 1000
#define DT_N_S_power_states_S_state2_P_min_residency_us_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m4f):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-m4f.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 33

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	28, /* /cpus */ \
	30, /* /power-states/state0 */ \
	31, /* /power-states/state1 */ \
	32, /* /power-states/state2 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m4f DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0        DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m4f 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0 DT_N_S_power_states_S_state0
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_PH DT_N_S_power_states_S_state0
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1 DT_N_S_power_states_S_state1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1_PH DT_N_S_power_states_S_state1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_2 DT_N_S_power_states_S_state2
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_2_PH DT_N_S_power_states_S_state2
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_2_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 2)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 2)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0, __VA_ARGS__) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1, __VA_ARGS__) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 2, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 2, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_LEN 3
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m4f"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m4f
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M4F
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, reg, 0)
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, reg, 0)
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, reg, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, reg, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /gpio_keys
 *
 * Node identifier: DT_N_S_gpio_keys
 *
 * Binding (compatible = gpio-keys):
 *   $ZEPHYR_BASE/dts/bindings/input/gpio-keys.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_PATH "/gpio_keys"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_FULL_NAME "gpio_keys"

/* Node parent (/) identifier: */
#define DT_N_S_gpio_keys_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_FOREACH_CHILD(fn) fn(DT_N_S_gpio_keys_S_button_0)
#define DT_N_S_gpio_keys_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_0)
#define DT_N_S_gpio_keys_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_0, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_0, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_gpio_keys_S_button_0)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_0)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_0, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_ORD 34

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_SUPPORTS_ORDS \
	35, /* /gpio_keys/button_0 */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_EXISTS 1
#define DT_N_INST_0_gpio_keys DT_N_S_gpio_keys

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_REG_NUM 0
#define DT_N_S_gpio_keys_RANGES_NUM 0
#define DT_N_S_gpio_keys_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_IRQ_NUM 0
#define DT_N_S_gpio_keys_COMPAT_MATCHES_gpio_keys 1
#define DT_N_S_gpio_keys_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_P_compatible {"gpio-keys"}
#define DT_N_S_gpio_keys_P_compatible_IDX_0 "gpio-keys"
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_TOKEN gpio_keys
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_KEYS
#define DT_N_S_gpio_keys_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_LEN 1
#define DT_N_S_gpio_keys_P_compatible_EXISTS 1
#define DT_N_S_gpio_keys_P_wakeup_source 0
#define DT_N_S_gpio_keys_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /gpio_keys/button_0
 *
 * Node identifier: DT_N_S_gpio_keys_S_button_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_button_0_PATH "/gpio_keys/button_0"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_button_0_FULL_NAME "button_0"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_button_0_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_button_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_button_0_ORD 35

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_button_0_REQUIRES_ORDS \
	20, /* /soc/pin-controller@48000000/gpio@48000800 */ \
	34, /* /gpio_keys */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_button_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_button_0_EXISTS 1
#define DT_N_ALIAS_sw0             DT_N_S_gpio_keys_S_button_0
#define DT_N_NODELABEL_user_button DT_N_S_gpio_keys_S_button_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_button_0_REG_NUM 0
#define DT_N_S_gpio_keys_S_button_0_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_button_0_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_button_0_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_button_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_button_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_VAL_pin 13
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_button_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_0, gpios, 0)
#define DT_N_S_gpio_keys_S_button_0_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_0, gpios, 0)
#define DT_N_S_gpio_keys_S_button_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_0_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_0_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_button_0_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_button_0_P_label "User"
#define DT_N_S_gpio_keys_S_button_0_P_label_STRING_TOKEN User
#define DT_N_S_gpio_keys_S_button_0_P_label_STRING_UPPER_TOKEN USER
#define DT_N_S_gpio_keys_S_button_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_0, label, 0) \
	fn(DT_N_S_gpio_keys_S_button_0, label, 1) \
	fn(DT_N_S_gpio_keys_S_button_0, label, 2) \
	fn(DT_N_S_gpio_keys_S_button_0, label, 3)
#define DT_N_S_gpio_keys_S_button_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_0, label, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_gpio_keys_S_button_0, label, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_gpio_keys_S_button_0, label, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_gpio_keys_S_button_0, label, 3)
#define DT_N_S_gpio_keys_S_button_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_0, label, 3, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_0, label, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_gpio_keys_S_button_0, label, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_gpio_keys_S_button_0, label, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_gpio_keys_S_button_0, label, 3, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_0_P_label_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2)
#define DT_N_S_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_leds_S_led_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_leds_S_led_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 36

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	37, /* /leds/led_1 */ \
	38, /* /leds/led_2 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /leds/led_1
 *
 * Node identifier: DT_N_S_leds_S_led_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_1_PATH "/leds/led_1"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_1_FULL_NAME "led_1"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_1_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_1_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_1_ORD 37

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_1_REQUIRES_ORDS \
	18, /* /soc/pin-controller@48000000/gpio@48000000 */ \
	36, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_1_EXISTS 1
#define DT_N_ALIAS_led1            DT_N_S_leds_S_led_1
#define DT_N_NODELABEL_green_led_1 DT_N_S_leds_S_led_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_1_REG_NUM 0
#define DT_N_S_leds_S_led_1_RANGES_NUM 0
#define DT_N_S_leds_S_led_1_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_1_IRQ_NUM 0
#define DT_N_S_leds_S_led_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin 5
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_gpios_LEN 1
#define DT_N_S_leds_S_led_1_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_1_P_label "User LD1"
#define DT_N_S_leds_S_led_1_P_label_STRING_TOKEN User_LD1
#define DT_N_S_leds_S_led_1_P_label_STRING_UPPER_TOKEN USER_LD1
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, label, 0) \
	fn(DT_N_S_leds_S_led_1, label, 1) \
	fn(DT_N_S_leds_S_led_1, label, 2) \
	fn(DT_N_S_leds_S_led_1, label, 3) \
	fn(DT_N_S_leds_S_led_1, label, 4) \
	fn(DT_N_S_leds_S_led_1, label, 5) \
	fn(DT_N_S_leds_S_led_1, label, 6) \
	fn(DT_N_S_leds_S_led_1, label, 7)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_1, label, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 7)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 7, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, label, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 7, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_2
 *
 * Node identifier: DT_N_S_leds_S_led_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_2_PATH "/leds/led_2"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_2_FULL_NAME "led_2"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_2_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_2_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_2_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_2_ORD 38

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_2_REQUIRES_ORDS \
	19, /* /soc/pin-controller@48000000/gpio@48000400 */ \
	36, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_2_EXISTS 1
#define DT_N_ALIAS_led0            DT_N_S_leds_S_led_2
#define DT_N_NODELABEL_green_led_2 DT_N_S_leds_S_led_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_2_REG_NUM 0
#define DT_N_S_leds_S_led_2_RANGES_NUM 0
#define DT_N_S_leds_S_led_2_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_2_IRQ_NUM 0
#define DT_N_S_leds_S_led_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_pin 14
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_2, gpios, 0)
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_2, gpios, 0)
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_2, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_2, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_gpios_LEN 1
#define DT_N_S_leds_S_led_2_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_2_P_label "User LD2"
#define DT_N_S_leds_S_led_2_P_label_STRING_TOKEN User_LD2
#define DT_N_S_leds_S_led_2_P_label_STRING_UPPER_TOKEN USER_LD2
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_2, label, 0) \
	fn(DT_N_S_leds_S_led_2, label, 1) \
	fn(DT_N_S_leds_S_led_2, label, 2) \
	fn(DT_N_S_leds_S_led_2, label, 3) \
	fn(DT_N_S_leds_S_led_2, label, 4) \
	fn(DT_N_S_leds_S_led_2, label, 5) \
	fn(DT_N_S_leds_S_led_2, label, 6) \
	fn(DT_N_S_leds_S_led_2, label, 7)
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_2, label, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_2, label, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_2, label, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_2, label, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_2, label, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_2, label, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_2, label, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_2, label, 7)
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_2, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 7, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_2, label, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_2, label, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_2, label, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_2, label, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_2, label, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_2, label, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_2, label, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_2, label, 7, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_label_EXISTS 1

/*
 * Devicetree node: /soc/adc@50040100
 *
 * Node identifier: DT_N_S_soc_S_adc_50040100
 *
 * Binding (compatible = st,stm32-adc):
 *   $ZEPHYR_BASE/dts/bindings/adc/st,stm32-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_50040100_PATH "/soc/adc@50040100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_50040100_FULL_NAME "adc@50040100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_50040100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_50040100_CHILD_IDX 22

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_50040100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_50040100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_50040100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_50040100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_50040100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_50040100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_50040100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_50040100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_50040100_ORD 39

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_50040100_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_50040100_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_50040100_EXISTS 1
#define DT_N_INST_1_st_stm32_adc DT_N_S_soc_S_adc_50040100
#define DT_N_NODELABEL_adc2      DT_N_S_soc_S_adc_50040100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_50040100_REG_NUM 1
#define DT_N_S_soc_S_adc_50040100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040100_REG_IDX_0_VAL_ADDRESS 1342439680 /* 0x50040100 */
#define DT_N_S_soc_S_adc_50040100_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_soc_S_adc_50040100_RANGES_NUM 0
#define DT_N_S_soc_S_adc_50040100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_50040100_IRQ_NUM 1
#define DT_N_S_soc_S_adc_50040100_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040100_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_adc_50040100_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_50040100_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040100_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_50040100_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_50040100_COMPAT_MATCHES_st_stm32_adc 1
#define DT_N_S_soc_S_adc_50040100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040100_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_adc_50040100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040100_COMPAT_MODEL_IDX_0 "stm32-adc"
#define DT_N_S_soc_S_adc_50040100_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_50040100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_50040100_P_reg {1342439680 /* 0x50040100 */, 256 /* 0x100 */}
#define DT_N_S_soc_S_adc_50040100_P_reg_IDX_0 1342439680
#define DT_N_S_soc_S_adc_50040100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040100_P_reg_IDX_1 256
#define DT_N_S_soc_S_adc_50040100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_50040100_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50040100, reg, 0) \
	fn(DT_N_S_soc_S_adc_50040100, reg, 1)
#define DT_N_S_soc_S_adc_50040100_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50040100, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040100, reg, 1)
#define DT_N_S_soc_S_adc_50040100_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50040100, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040100, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040100_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50040100, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040100, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040100_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_50040100_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040100_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_adc_50040100_P_clocks_IDX_0_VAL_bus 76
#define DT_N_S_soc_S_adc_50040100_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_adc_50040100_P_clocks_IDX_0_VAL_bits 8192
#define DT_N_S_soc_S_adc_50040100_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_adc_50040100_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50040100, clocks, 0)
#define DT_N_S_soc_S_adc_50040100_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50040100, clocks, 0)
#define DT_N_S_soc_S_adc_50040100_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50040100, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040100_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50040100, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040100_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_50040100_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_50040100_P_interrupts {18 /* 0x12 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_50040100_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_adc_50040100_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040100_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_50040100_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_50040100_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50040100, interrupts, 0) \
	fn(DT_N_S_soc_S_adc_50040100, interrupts, 1)
#define DT_N_S_soc_S_adc_50040100_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50040100, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040100, interrupts, 1)
#define DT_N_S_soc_S_adc_50040100_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50040100, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040100, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040100_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50040100, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040100, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040100_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_50040100_P_vref_mv 3300
#define DT_N_S_soc_S_adc_50040100_P_vref_mv_EXISTS 1
#define DT_N_S_soc_S_adc_50040100_P_has_temp_channel 0
#define DT_N_S_soc_S_adc_50040100_P_has_temp_channel_EXISTS 1
#define DT_N_S_soc_S_adc_50040100_P_has_vref_channel 0
#define DT_N_S_soc_S_adc_50040100_P_has_vref_channel_EXISTS 1
#define DT_N_S_soc_S_adc_50040100_P_has_vbat_channel 0
#define DT_N_S_soc_S_adc_50040100_P_has_vbat_channel_EXISTS 1
#define DT_N_S_soc_S_adc_50040100_P_status "disabled"
#define DT_N_S_soc_S_adc_50040100_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_adc_50040100_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_50040100_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_adc_50040100_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_adc_50040100_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_50040100_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50040100, status, 0) \
	fn(DT_N_S_soc_S_adc_50040100, status, 1) \
	fn(DT_N_S_soc_S_adc_50040100, status, 2) \
	fn(DT_N_S_soc_S_adc_50040100, status, 3) \
	fn(DT_N_S_soc_S_adc_50040100, status, 4) \
	fn(DT_N_S_soc_S_adc_50040100, status, 5) \
	fn(DT_N_S_soc_S_adc_50040100, status, 6) \
	fn(DT_N_S_soc_S_adc_50040100, status, 7)
#define DT_N_S_soc_S_adc_50040100_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50040100, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040100, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040100, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040100, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040100, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040100, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040100, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040100, status, 7)
#define DT_N_S_soc_S_adc_50040100_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50040100, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040100, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040100, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040100, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040100, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040100, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040100, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040100, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040100_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50040100, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040100, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040100, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040100, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040100, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040100, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040100, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040100, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040100_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_50040100_P_compatible {"st,stm32-adc"}
#define DT_N_S_soc_S_adc_50040100_P_compatible_IDX_0 "st,stm32-adc"
#define DT_N_S_soc_S_adc_50040100_P_compatible_IDX_0_STRING_TOKEN st_stm32_adc
#define DT_N_S_soc_S_adc_50040100_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_ADC
#define DT_N_S_soc_S_adc_50040100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50040100, compatible, 0)
#define DT_N_S_soc_S_adc_50040100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50040100, compatible, 0)
#define DT_N_S_soc_S_adc_50040100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50040100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50040100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040100_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_50040100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_50040100_P_wakeup_source 0
#define DT_N_S_soc_S_adc_50040100_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/adc@50040200
 *
 * Node identifier: DT_N_S_soc_S_adc_50040200
 *
 * Binding (compatible = st,stm32-adc):
 *   $ZEPHYR_BASE/dts/bindings/adc/st,stm32-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_50040200_PATH "/soc/adc@50040200"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_50040200_FULL_NAME "adc@50040200"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_50040200_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_50040200_CHILD_IDX 42

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_50040200_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_50040200_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_50040200_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_50040200_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_50040200_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_50040200_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_50040200_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_50040200_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_50040200_ORD 40

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_50040200_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_50040200_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_50040200_EXISTS 1
#define DT_N_INST_2_st_stm32_adc DT_N_S_soc_S_adc_50040200
#define DT_N_NODELABEL_adc3      DT_N_S_soc_S_adc_50040200

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_50040200_REG_NUM 1
#define DT_N_S_soc_S_adc_50040200_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040200_REG_IDX_0_VAL_ADDRESS 1342439936 /* 0x50040200 */
#define DT_N_S_soc_S_adc_50040200_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_soc_S_adc_50040200_RANGES_NUM 0
#define DT_N_S_soc_S_adc_50040200_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_50040200_IRQ_NUM 1
#define DT_N_S_soc_S_adc_50040200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040200_IRQ_IDX_0_VAL_irq 47
#define DT_N_S_soc_S_adc_50040200_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_50040200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040200_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_50040200_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_50040200_COMPAT_MATCHES_st_stm32_adc 1
#define DT_N_S_soc_S_adc_50040200_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040200_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_adc_50040200_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040200_COMPAT_MODEL_IDX_0 "stm32-adc"
#define DT_N_S_soc_S_adc_50040200_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_50040200_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_50040200_P_reg {1342439936 /* 0x50040200 */, 256 /* 0x100 */}
#define DT_N_S_soc_S_adc_50040200_P_reg_IDX_0 1342439936
#define DT_N_S_soc_S_adc_50040200_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040200_P_reg_IDX_1 256
#define DT_N_S_soc_S_adc_50040200_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_50040200_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50040200, reg, 0) \
	fn(DT_N_S_soc_S_adc_50040200, reg, 1)
#define DT_N_S_soc_S_adc_50040200_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50040200, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040200, reg, 1)
#define DT_N_S_soc_S_adc_50040200_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50040200, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040200, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040200_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50040200, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040200, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040200_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_50040200_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040200_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_adc_50040200_P_clocks_IDX_0_VAL_bus 76
#define DT_N_S_soc_S_adc_50040200_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_adc_50040200_P_clocks_IDX_0_VAL_bits 8192
#define DT_N_S_soc_S_adc_50040200_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_adc_50040200_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50040200, clocks, 0)
#define DT_N_S_soc_S_adc_50040200_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50040200, clocks, 0)
#define DT_N_S_soc_S_adc_50040200_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50040200, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040200_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50040200, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040200_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_50040200_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_50040200_P_interrupts {47 /* 0x2f */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_50040200_P_interrupts_IDX_0 47
#define DT_N_S_soc_S_adc_50040200_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040200_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_50040200_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_50040200_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50040200, interrupts, 0) \
	fn(DT_N_S_soc_S_adc_50040200, interrupts, 1)
#define DT_N_S_soc_S_adc_50040200_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50040200, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040200, interrupts, 1)
#define DT_N_S_soc_S_adc_50040200_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50040200, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040200, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040200_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50040200, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040200, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040200_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_50040200_P_vref_mv 3300
#define DT_N_S_soc_S_adc_50040200_P_vref_mv_EXISTS 1
#define DT_N_S_soc_S_adc_50040200_P_has_temp_channel 1
#define DT_N_S_soc_S_adc_50040200_P_has_temp_channel_EXISTS 1
#define DT_N_S_soc_S_adc_50040200_P_has_vref_channel 0
#define DT_N_S_soc_S_adc_50040200_P_has_vref_channel_EXISTS 1
#define DT_N_S_soc_S_adc_50040200_P_has_vbat_channel 0
#define DT_N_S_soc_S_adc_50040200_P_has_vbat_channel_EXISTS 1
#define DT_N_S_soc_S_adc_50040200_P_status "disabled"
#define DT_N_S_soc_S_adc_50040200_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_adc_50040200_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_50040200_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_adc_50040200_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_adc_50040200_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_50040200_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50040200, status, 0) \
	fn(DT_N_S_soc_S_adc_50040200, status, 1) \
	fn(DT_N_S_soc_S_adc_50040200, status, 2) \
	fn(DT_N_S_soc_S_adc_50040200, status, 3) \
	fn(DT_N_S_soc_S_adc_50040200, status, 4) \
	fn(DT_N_S_soc_S_adc_50040200, status, 5) \
	fn(DT_N_S_soc_S_adc_50040200, status, 6) \
	fn(DT_N_S_soc_S_adc_50040200, status, 7)
#define DT_N_S_soc_S_adc_50040200_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50040200, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040200, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040200, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040200, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040200, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040200, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040200, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040200, status, 7)
#define DT_N_S_soc_S_adc_50040200_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50040200, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040200, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040200, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040200, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040200, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040200, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040200, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040200, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040200_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50040200, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040200, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040200, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040200, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040200, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040200, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040200, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_50040200, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040200_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_50040200_P_compatible {"st,stm32-adc"}
#define DT_N_S_soc_S_adc_50040200_P_compatible_IDX_0 "st,stm32-adc"
#define DT_N_S_soc_S_adc_50040200_P_compatible_IDX_0_STRING_TOKEN st_stm32_adc
#define DT_N_S_soc_S_adc_50040200_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_ADC
#define DT_N_S_soc_S_adc_50040200_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040200_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50040200, compatible, 0)
#define DT_N_S_soc_S_adc_50040200_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_50040200, compatible, 0)
#define DT_N_S_soc_S_adc_50040200_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50040200, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040200_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_50040200, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040200_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_50040200_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_50040200_P_wakeup_source 0
#define DT_N_S_soc_S_adc_50040200_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/can@40006400
 *
 * Node identifier: DT_N_S_soc_S_can_40006400
 *
 * Binding (compatible = st,stm32-can):
 *   $ZEPHYR_BASE/dts/bindings/can/st,stm32-can.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_can_40006400_PATH "/soc/can@40006400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_can_40006400_FULL_NAME "can@40006400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_can_40006400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_can_40006400_CHILD_IDX 39

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_can_40006400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_can_40006400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_can_40006400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_40006400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_can_40006400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_can_40006400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_can_40006400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_40006400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_can_40006400_ORD 41

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_can_40006400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_can_40006400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_can_40006400_EXISTS 1
#define DT_N_INST_0_st_stm32_can DT_N_S_soc_S_can_40006400
#define DT_N_NODELABEL_can1      DT_N_S_soc_S_can_40006400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_can_40006400_REG_NUM 1
#define DT_N_S_soc_S_can_40006400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_REG_IDX_0_VAL_ADDRESS 1073767424 /* 0x40006400 */
#define DT_N_S_soc_S_can_40006400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_can_40006400_RANGES_NUM 0
#define DT_N_S_soc_S_can_40006400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_can_40006400_IRQ_NUM 4
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_irq 19
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_irq 20
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_irq 21
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_irq 22
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_tx_VAL_irq DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_tx_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_tx_VAL_priority DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_tx_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx0_VAL_irq DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx0_VAL_priority DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx1_VAL_irq DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx1_VAL_priority DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_sce_VAL_irq DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_sce_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_sce_VAL_priority DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_sce_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_COMPAT_MATCHES_st_stm32_can 1
#define DT_N_S_soc_S_can_40006400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_can_40006400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_COMPAT_MODEL_IDX_0 "stm32-can"
#define DT_N_S_soc_S_can_40006400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_can_40006400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_can_40006400_P_reg {1073767424 /* 0x40006400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_can_40006400_P_reg_IDX_0 1073767424
#define DT_N_S_soc_S_can_40006400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_can_40006400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, reg, 0) \
	fn(DT_N_S_soc_S_can_40006400, reg, 1)
#define DT_N_S_soc_S_can_40006400_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_40006400, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, reg, 1)
#define DT_N_S_soc_S_can_40006400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_40006400, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_reg_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts {19 /* 0x13 */, 0 /* 0x0 */, 20 /* 0x14 */, 0 /* 0x0 */, 21 /* 0x15 */, 0 /* 0x0 */, 22 /* 0x16 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_0 19
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_2 20
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_4 21
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_6 22
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, interrupts, 0) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 1) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 2) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 3) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 4) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 5) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 6) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 7)
#define DT_N_S_soc_S_can_40006400_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_40006400, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 7)
#define DT_N_S_soc_S_can_40006400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 7, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_40006400, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 7, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_VAL_bus 88
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_VAL_bits 33554432
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, clocks, 0)
#define DT_N_S_soc_S_can_40006400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_40006400, clocks, 0)
#define DT_N_S_soc_S_can_40006400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_40006400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_clocks_LEN 1
#define DT_N_S_soc_S_can_40006400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_sjw 1
#define DT_N_S_soc_S_can_40006400_P_sjw_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_sample_point 875
#define DT_N_S_soc_S_can_40006400_P_sample_point_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_status "disabled"
#define DT_N_S_soc_S_can_40006400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_can_40006400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_can_40006400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_can_40006400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_can_40006400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_can_40006400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, status, 0) \
	fn(DT_N_S_soc_S_can_40006400, status, 1) \
	fn(DT_N_S_soc_S_can_40006400, status, 2) \
	fn(DT_N_S_soc_S_can_40006400, status, 3) \
	fn(DT_N_S_soc_S_can_40006400, status, 4) \
	fn(DT_N_S_soc_S_can_40006400, status, 5) \
	fn(DT_N_S_soc_S_can_40006400, status, 6) \
	fn(DT_N_S_soc_S_can_40006400, status, 7)
#define DT_N_S_soc_S_can_40006400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_40006400, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, status, 7)
#define DT_N_S_soc_S_can_40006400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_40006400, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_status_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_compatible {"st,stm32-can"}
#define DT_N_S_soc_S_can_40006400_P_compatible_IDX_0 "st,stm32-can"
#define DT_N_S_soc_S_can_40006400_P_compatible_IDX_0_STRING_TOKEN st_stm32_can
#define DT_N_S_soc_S_can_40006400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_CAN
#define DT_N_S_soc_S_can_40006400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, compatible, 0)
#define DT_N_S_soc_S_can_40006400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_40006400, compatible, 0)
#define DT_N_S_soc_S_can_40006400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_40006400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_compatible_LEN 1
#define DT_N_S_soc_S_can_40006400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names {"TX", "RX0", "RX1", "SCE"}
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_0 "TX"
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_0_STRING_TOKEN TX
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_1 "RX0"
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_1_STRING_TOKEN RX0
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN RX0
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_2 "RX1"
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_2_STRING_TOKEN RX1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN RX1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_3 "SCE"
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_3_STRING_TOKEN SCE
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN SCE
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, interrupt_names, 0) \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 1) \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 2) \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 3)
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_40006400, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 3)
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006400, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_40006400, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_wakeup_source 0
#define DT_N_S_soc_S_can_40006400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/dac1_out1_pa4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_PATH "/soc/pin-controller@48000000/dac1_out1_pa4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_FULL_NAME "dac1_out1_pa4"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_ORD 42

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_SUPPORTS_ORDS \
	43, /* /soc/dac@40007400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_EXISTS 1
#define DT_N_NODELABEL_dac1_out1_pa4 DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_pinmux 144
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/dac@40007400
 *
 * Node identifier: DT_N_S_soc_S_dac_40007400
 *
 * Binding (compatible = st,stm32-dac):
 *   $ZEPHYR_BASE/dts/bindings/dac/st,stm32-dac.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dac_40007400_PATH "/soc/dac@40007400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dac_40007400_FULL_NAME "dac@40007400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dac_40007400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dac_40007400_CHILD_IDX 41

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dac_40007400_ORD 43

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dac_40007400_REQUIRES_ORDS \
	4, /* /soc */ \
	9, /* /soc/rcc@40021000 */ \
	42, /* /soc/pin-controller@48000000/dac1_out1_pa4 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dac_40007400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dac_40007400_EXISTS 1
#define DT_N_INST_0_st_stm32_dac DT_N_S_soc_S_dac_40007400
#define DT_N_NODELABEL_dac1      DT_N_S_soc_S_dac_40007400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dac_40007400_REG_NUM 1
#define DT_N_S_soc_S_dac_40007400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_REG_IDX_0_VAL_ADDRESS 1073771520 /* 0x40007400 */
#define DT_N_S_soc_S_dac_40007400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dac_40007400_RANGES_NUM 0
#define DT_N_S_soc_S_dac_40007400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dac_40007400_IRQ_NUM 0
#define DT_N_S_soc_S_dac_40007400_COMPAT_MATCHES_st_stm32_dac 1
#define DT_N_S_soc_S_dac_40007400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_dac_40007400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_COMPAT_MODEL_IDX_0 "stm32-dac"
#define DT_N_S_soc_S_dac_40007400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dac_40007400_PINCTRL_NUM 1
#define DT_N_S_soc_S_dac_40007400_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_dac_40007400_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_dac_40007400_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_dac_40007400_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4

/* Generic property macros: */
#define DT_N_S_soc_S_dac_40007400_P_reg {1073771520 /* 0x40007400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dac_40007400_P_reg_IDX_0 1073771520
#define DT_N_S_soc_S_dac_40007400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dac_40007400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_40007400, reg, 0) \
	fn(DT_N_S_soc_S_dac_40007400, reg, 1)
#define DT_N_S_soc_S_dac_40007400_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_40007400, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_40007400, reg, 1)
#define DT_N_S_soc_S_dac_40007400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_40007400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_40007400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_40007400, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_40007400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_reg_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_VAL_bus 88
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_VAL_bits 536870912
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_40007400, clocks, 0)
#define DT_N_S_soc_S_dac_40007400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_40007400, clocks, 0)
#define DT_N_S_soc_S_dac_40007400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_40007400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_40007400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_clocks_LEN 1
#define DT_N_S_soc_S_dac_40007400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_40007400, pinctrl_0, 0)
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_40007400, pinctrl_0, 0)
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_40007400, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_40007400, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_40007400, pinctrl_names, 0)
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_40007400, pinctrl_names, 0)
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_40007400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_40007400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_dac_40007400_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_status "okay"
#define DT_N_S_soc_S_dac_40007400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_dac_40007400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_dac_40007400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_dac_40007400_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_dac_40007400_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_dac_40007400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_40007400, status, 0) \
	fn(DT_N_S_soc_S_dac_40007400, status, 1) \
	fn(DT_N_S_soc_S_dac_40007400, status, 2) \
	fn(DT_N_S_soc_S_dac_40007400, status, 3)
#define DT_N_S_soc_S_dac_40007400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_40007400, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_40007400, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_40007400, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_40007400, status, 3)
#define DT_N_S_soc_S_dac_40007400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_40007400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_40007400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_40007400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_40007400, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_40007400, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_40007400, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_40007400, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dac_40007400, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_status_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_compatible {"st,stm32-dac"}
#define DT_N_S_soc_S_dac_40007400_P_compatible_IDX_0 "st,stm32-dac"
#define DT_N_S_soc_S_dac_40007400_P_compatible_IDX_0_STRING_TOKEN st_stm32_dac
#define DT_N_S_soc_S_dac_40007400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_DAC
#define DT_N_S_soc_S_dac_40007400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_40007400, compatible, 0)
#define DT_N_S_soc_S_dac_40007400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_40007400, compatible, 0)
#define DT_N_S_soc_S_dac_40007400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_40007400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_40007400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_compatible_LEN 1
#define DT_N_S_soc_S_dac_40007400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_wakeup_source 0
#define DT_N_S_soc_S_dac_40007400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/dma@40020400
 *
 * Node identifier: DT_N_S_soc_S_dma_40020400
 *
 * Binding (compatible = st,stm32-dma-v2):
 *   $ZEPHYR_BASE/dts/bindings/dma/st,stm32-dma-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_40020400_PATH "/soc/dma@40020400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_40020400_FULL_NAME "dma@40020400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_40020400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dma_40020400_CHILD_IDX 24

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dma_40020400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_40020400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40020400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40020400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dma_40020400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_40020400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40020400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40020400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_40020400_ORD 44

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_40020400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_40020400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_40020400_EXISTS 1
#define DT_N_INST_1_st_stm32_dma_v2 DT_N_S_soc_S_dma_40020400
#define DT_N_NODELABEL_dma2         DT_N_S_soc_S_dma_40020400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_40020400_REG_NUM 1
#define DT_N_S_soc_S_dma_40020400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_REG_IDX_0_VAL_ADDRESS 1073873920 /* 0x40020400 */
#define DT_N_S_soc_S_dma_40020400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dma_40020400_RANGES_NUM 0
#define DT_N_S_soc_S_dma_40020400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dma_40020400_IRQ_NUM 7
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_0_VAL_irq 56
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_1_VAL_irq 57
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_2_VAL_irq 58
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_3_VAL_irq 59
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_4_VAL_irq 60
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_5_VAL_irq 68
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_6_VAL_irq 69
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_COMPAT_MATCHES_st_stm32_dma_v2 1
#define DT_N_S_soc_S_dma_40020400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_dma_40020400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_COMPAT_MODEL_IDX_0 "stm32-dma-v2"
#define DT_N_S_soc_S_dma_40020400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_40020400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_40020400_P_reg {1073873920 /* 0x40020400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dma_40020400_P_reg_IDX_0 1073873920
#define DT_N_S_soc_S_dma_40020400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dma_40020400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020400, reg, 0) \
	fn(DT_N_S_soc_S_dma_40020400, reg, 1)
#define DT_N_S_soc_S_dma_40020400_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40020400, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, reg, 1)
#define DT_N_S_soc_S_dma_40020400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020400_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40020400, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020400_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts {56 /* 0x38 */, 0 /* 0x0 */, 57 /* 0x39 */, 0 /* 0x0 */, 58 /* 0x3a */, 0 /* 0x0 */, 59 /* 0x3b */, 0 /* 0x0 */, 60 /* 0x3c */, 0 /* 0x0 */, 68 /* 0x44 */, 0 /* 0x0 */, 69 /* 0x45 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_0 56
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_2 57
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_4 58
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_6 59
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_8 60
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_10 68
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_12 69
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020400, interrupts, 0) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 1) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 2) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 3) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 4) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 5) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 6) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 7) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 8) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 9) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 10) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 11) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 12) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 13)
#define DT_N_S_soc_S_dma_40020400_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40020400, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 13)
#define DT_N_S_soc_S_dma_40020400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 13, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020400_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40020400, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 13, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_st_mem2mem 0
#define DT_N_S_soc_S_dma_40020400_P_st_mem2mem_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_dma_requests 7
#define DT_N_S_soc_S_dma_40020400_P_dma_requests_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_status "disabled"
#define DT_N_S_soc_S_dma_40020400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dma_40020400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40020400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_dma_40020400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_dma_40020400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40020400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020400, status, 0) \
	fn(DT_N_S_soc_S_dma_40020400, status, 1) \
	fn(DT_N_S_soc_S_dma_40020400, status, 2) \
	fn(DT_N_S_soc_S_dma_40020400, status, 3) \
	fn(DT_N_S_soc_S_dma_40020400, status, 4) \
	fn(DT_N_S_soc_S_dma_40020400, status, 5) \
	fn(DT_N_S_soc_S_dma_40020400, status, 6) \
	fn(DT_N_S_soc_S_dma_40020400, status, 7)
#define DT_N_S_soc_S_dma_40020400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40020400, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, status, 7)
#define DT_N_S_soc_S_dma_40020400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40020400, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020400_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_compatible {"st,stm32-dma-v2"}
#define DT_N_S_soc_S_dma_40020400_P_compatible_IDX_0 "st,stm32-dma-v2"
#define DT_N_S_soc_S_dma_40020400_P_compatible_IDX_0_STRING_TOKEN st_stm32_dma_v2
#define DT_N_S_soc_S_dma_40020400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_DMA_V2
#define DT_N_S_soc_S_dma_40020400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020400, compatible, 0)
#define DT_N_S_soc_S_dma_40020400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40020400, compatible, 0)
#define DT_N_S_soc_S_dma_40020400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40020400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020400_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_40020400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_dma_40020400_P_clocks_IDX_0_VAL_bus 72
#define DT_N_S_soc_S_dma_40020400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_dma_40020400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020400, clocks, 0)
#define DT_N_S_soc_S_dma_40020400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40020400, clocks, 0)
#define DT_N_S_soc_S_dma_40020400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40020400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020400_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_40020400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_wakeup_source 0
#define DT_N_S_soc_S_dma_40020400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c1_scl_pb8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_PATH "/soc/pin-controller@48000000/i2c1_scl_pb8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_FULL_NAME "i2c1_scl_pb8"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_ORD 45

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_SUPPORTS_ORDS \
	47, /* /soc/i2c@40005400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_EXISTS 1
#define DT_N_NODELABEL_i2c1_scl_pb8 DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_pinmux 772
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c1_sda_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_PATH "/soc/pin-controller@48000000/i2c1_sda_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_FULL_NAME "i2c1_sda_pb9"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_CHILD_IDX 17

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_ORD 46

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_SUPPORTS_ORDS \
	47, /* /soc/i2c@40005400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_EXISTS 1
#define DT_N_NODELABEL_i2c1_sda_pb9 DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_pinmux 804
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005400
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005400
 *
 * Binding (compatible = st,stm32-i2c-v2):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005400_PATH "/soc/i2c@40005400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005400_FULL_NAME "i2c@40005400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005400_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005400_ORD 47

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */ \
	45, /* /soc/pin-controller@48000000/i2c1_scl_pb8 */ \
	46, /* /soc/pin-controller@48000000/i2c1_sda_pb9 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005400_EXISTS 1
#define DT_N_INST_0_st_stm32_i2c_v2 DT_N_S_soc_S_i2c_40005400
#define DT_N_NODELABEL_i2c1         DT_N_S_soc_S_i2c_40005400
#define DT_N_NODELABEL_arduino_i2c  DT_N_S_soc_S_i2c_40005400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005400_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_ADDRESS 1073763328 /* 0x40005400 */
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005400_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005400_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq 31
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq 32
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MATCHES_st_stm32_i2c_v2 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MODEL_IDX_0 "stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005400_P_reg {1073763328 /* 0x40005400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_0 1073763328
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, reg, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, reg, 1)
#define DT_N_S_soc_S_i2c_40005400_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, reg, 1)
#define DT_N_S_soc_S_i2c_40005400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts {31 /* 0x1f */, 0 /* 0x0 */, 32 /* 0x20 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_0 31
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_2 32
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 1) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 2) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 3)
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 3)
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_status "okay"
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, status, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 1) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 2) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 3)
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, status, 3)
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible {"st,stm32-i2c-v2"}
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0 "st,stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_STRING_TOKEN st_stm32_i2c_v2
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_I2C_V2
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_STRING_TOKEN event
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN EVENT
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_STRING_TOKEN error
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN ERROR
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bus 88
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bits 2097152
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c3_scl_pc0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_PATH "/soc/pin-controller@48000000/i2c3_scl_pc0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_FULL_NAME "i2c3_scl_pc0"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_ORD 48

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_SUPPORTS_ORDS \
	50, /* /soc/i2c@40005c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_EXISTS 1
#define DT_N_NODELABEL_i2c3_scl_pc0 DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_pinmux 1028
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c3_sda_pc1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_PATH "/soc/pin-controller@48000000/i2c3_sda_pc1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_FULL_NAME "i2c3_sda_pc1"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_CHILD_IDX 19

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_ORD 49

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_SUPPORTS_ORDS \
	50, /* /soc/i2c@40005c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_EXISTS 1
#define DT_N_NODELABEL_i2c3_sda_pc1 DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_pinmux 1060
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005c00
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005c00
 *
 * Binding (compatible = st,stm32-i2c-v2):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005c00_PATH "/soc/i2c@40005c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005c00_FULL_NAME "i2c@40005c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005c00_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005c00_ORD 50

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */ \
	48, /* /soc/pin-controller@48000000/i2c3_scl_pc0 */ \
	49, /* /soc/pin-controller@48000000/i2c3_sda_pc1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005c00_EXISTS 1
#define DT_N_INST_1_st_stm32_i2c_v2 DT_N_S_soc_S_i2c_40005c00
#define DT_N_NODELABEL_i2c3         DT_N_S_soc_S_i2c_40005c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005c00_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_REG_IDX_0_VAL_ADDRESS 1073765376 /* 0x40005c00 */
#define DT_N_S_soc_S_i2c_40005c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005c00_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_irq 72
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_irq 73
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_COMPAT_MATCHES_st_stm32_i2c_v2 1
#define DT_N_S_soc_S_i2c_40005c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_COMPAT_MODEL_IDX_0 "stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005c00_P_reg {1073765376 /* 0x40005c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_0 1073765376
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, reg, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, reg, 1)
#define DT_N_S_soc_S_i2c_40005c00_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005c00, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005c00, reg, 1)
#define DT_N_S_soc_S_i2c_40005c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005c00, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts {72 /* 0x48 */, 0 /* 0x0 */, 73 /* 0x49 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_0 72
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_2 73
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 1) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 2) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 3)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 3)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005c00, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005c00, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005c00, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005c00, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005c00, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005c00, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_40005c00_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_status "okay"
#define DT_N_S_soc_S_i2c_40005c00_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40005c00_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, status, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 1) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 2) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 3)
#define DT_N_S_soc_S_i2c_40005c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005c00, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 3)
#define DT_N_S_soc_S_i2c_40005c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005c00, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible {"st,stm32-i2c-v2"}
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_IDX_0 "st,stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_i2c_v2
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_I2C_V2
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, compatible, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005c00, compatible, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_0_STRING_TOKEN event
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN EVENT
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_1_STRING_TOKEN error
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN ERROR
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bus 88
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bits 8388608
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, clocks, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005c00, clocks, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@40010400
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_40010400
 *
 * Binding (compatible = st,stm32-exti):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/st,stm32-exti.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_40010400_PATH "/soc/interrupt-controller@40010400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_40010400_FULL_NAME "interrupt-controller@40010400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_40010400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_40010400_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_40010400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_40010400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_40010400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_40010400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_40010400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_40010400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_40010400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_40010400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_40010400_ORD 51

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_40010400_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_40010400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_40010400_EXISTS 1
#define DT_N_INST_0_st_stm32_exti DT_N_S_soc_S_interrupt_controller_40010400
#define DT_N_NODELABEL_exti       DT_N_S_soc_S_interrupt_controller_40010400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_40010400_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_40010400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_REG_IDX_0_VAL_ADDRESS 1073808384 /* 0x40010400 */
#define DT_N_S_soc_S_interrupt_controller_40010400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_interrupt_controller_40010400_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_40010400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_40010400_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_40010400_COMPAT_MATCHES_st_stm32_exti 1
#define DT_N_S_soc_S_interrupt_controller_40010400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_interrupt_controller_40010400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_COMPAT_MODEL_IDX_0 "stm32-exti"
#define DT_N_S_soc_S_interrupt_controller_40010400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_40010400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_40010400_P_reg {1073808384 /* 0x40010400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_interrupt_controller_40010400_P_reg_IDX_0 1073808384
#define DT_N_S_soc_S_interrupt_controller_40010400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_interrupt_controller_40010400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_40010400, reg, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, reg, 1)
#define DT_N_S_soc_S_interrupt_controller_40010400_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_40010400, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, reg, 1)
#define DT_N_S_soc_S_interrupt_controller_40010400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40010400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40010400_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_40010400, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40010400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40010400_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_compatible {"st,stm32-exti"}
#define DT_N_S_soc_S_interrupt_controller_40010400_P_compatible_IDX_0 "st,stm32-exti"
#define DT_N_S_soc_S_interrupt_controller_40010400_P_compatible_IDX_0_STRING_TOKEN st_stm32_exti
#define DT_N_S_soc_S_interrupt_controller_40010400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_EXTI
#define DT_N_S_soc_S_interrupt_controller_40010400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_40010400, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_40010400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_40010400, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_40010400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40010400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40010400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_40010400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40010400_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40010400_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_40010400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /otgfs_phy
 *
 * Node identifier: DT_N_S_otgfs_phy
 *
 * Binding (compatible = usb-nop-xceiv):
 *   $ZEPHYR_BASE/dts/bindings/phy/usb-nop-xceiv.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_otgfs_phy_PATH "/otgfs_phy"

/* Node's name with unit-address: */
#define DT_N_S_otgfs_phy_FULL_NAME "otgfs_phy"

/* Node parent (/) identifier: */
#define DT_N_S_otgfs_phy_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_otgfs_phy_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_otgfs_phy_FOREACH_CHILD(fn) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_otgfs_phy_ORD 52

/* Ordinals for what this node depends on directly: */
#define DT_N_S_otgfs_phy_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_otgfs_phy_SUPPORTS_ORDS \
	56, /* /soc/otgfs@50000000 */

/* Existence and alternate IDs: */
#define DT_N_S_otgfs_phy_EXISTS 1
#define DT_N_INST_0_usb_nop_xceiv DT_N_S_otgfs_phy
#define DT_N_NODELABEL_otgfs_phy  DT_N_S_otgfs_phy

/* Macros for properties that are special in the specification: */
#define DT_N_S_otgfs_phy_REG_NUM 0
#define DT_N_S_otgfs_phy_RANGES_NUM 0
#define DT_N_S_otgfs_phy_FOREACH_RANGE(fn) 
#define DT_N_S_otgfs_phy_IRQ_NUM 0
#define DT_N_S_otgfs_phy_COMPAT_MATCHES_usb_nop_xceiv 1
#define DT_N_S_otgfs_phy_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_otgfs_phy_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_otgfs_phy_P_compatible {"usb-nop-xceiv"}
#define DT_N_S_otgfs_phy_P_compatible_IDX_0 "usb-nop-xceiv"
#define DT_N_S_otgfs_phy_P_compatible_IDX_0_STRING_TOKEN usb_nop_xceiv
#define DT_N_S_otgfs_phy_P_compatible_IDX_0_STRING_UPPER_TOKEN USB_NOP_XCEIV
#define DT_N_S_otgfs_phy_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_otgfs_phy_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_otgfs_phy, compatible, 0)
#define DT_N_S_otgfs_phy_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_otgfs_phy, compatible, 0)
#define DT_N_S_otgfs_phy_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_otgfs_phy, compatible, 0, __VA_ARGS__)
#define DT_N_S_otgfs_phy_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_otgfs_phy, compatible, 0, __VA_ARGS__)
#define DT_N_S_otgfs_phy_P_compatible_LEN 1
#define DT_N_S_otgfs_phy_P_compatible_EXISTS 1
#define DT_N_S_otgfs_phy_P_wakeup_source 0
#define DT_N_S_otgfs_phy_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usb_otg_fs_dm_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_PATH "/soc/pin-controller@48000000/usb_otg_fs_dm_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_FULL_NAME "usb_otg_fs_dm_pa11"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_CHILD_IDX 38

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_ORD 53

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_SUPPORTS_ORDS \
	56, /* /soc/otgfs@50000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_EXISTS 1
#define DT_N_NODELABEL_usb_otg_fs_dm_pa11 DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_pinmux 362
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usb_otg_fs_dp_pa12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_PATH "/soc/pin-controller@48000000/usb_otg_fs_dp_pa12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_FULL_NAME "usb_otg_fs_dp_pa12"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_CHILD_IDX 39

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_ORD 54

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_SUPPORTS_ORDS \
	56, /* /soc/otgfs@50000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_EXISTS 1
#define DT_N_NODELABEL_usb_otg_fs_dp_pa12 DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_pinmux 394
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usb_otg_fs_id_pa10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_PATH "/soc/pin-controller@48000000/usb_otg_fs_id_pa10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_FULL_NAME "usb_otg_fs_id_pa10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_CHILD_IDX 37

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_ORD 55

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_SUPPORTS_ORDS \
	56, /* /soc/otgfs@50000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_EXISTS 1
#define DT_N_NODELABEL_usb_otg_fs_id_pa10 DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_pinmux 330
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/otgfs@50000000
 *
 * Node identifier: DT_N_S_soc_S_otgfs_50000000
 *
 * Binding (compatible = st,stm32-otgfs):
 *   $ZEPHYR_BASE/dts/bindings/usb/st,stm32-otgfs.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_otgfs_50000000_PATH "/soc/otgfs@50000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_otgfs_50000000_FULL_NAME "otgfs@50000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_otgfs_50000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_otgfs_50000000_CHILD_IDX 43

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_otgfs_50000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_otgfs_50000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_otgfs_50000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_otgfs_50000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_otgfs_50000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_otgfs_50000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_otgfs_50000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_otgfs_50000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_otgfs_50000000_ORD 56

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_otgfs_50000000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */ \
	52, /* /otgfs_phy */ \
	53, /* /soc/pin-controller@48000000/usb_otg_fs_dm_pa11 */ \
	54, /* /soc/pin-controller@48000000/usb_otg_fs_dp_pa12 */ \
	55, /* /soc/pin-controller@48000000/usb_otg_fs_id_pa10 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_otgfs_50000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_otgfs_50000000_EXISTS 1
#define DT_N_INST_0_st_stm32_otgfs DT_N_S_soc_S_otgfs_50000000
#define DT_N_NODELABEL_usbotg_fs   DT_N_S_soc_S_otgfs_50000000
#define DT_N_NODELABEL_zephyr_udc0 DT_N_S_soc_S_otgfs_50000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_otgfs_50000000_REG_NUM 1
#define DT_N_S_soc_S_otgfs_50000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_REG_IDX_0_VAL_ADDRESS 1342177280 /* 0x50000000 */
#define DT_N_S_soc_S_otgfs_50000000_REG_IDX_0_VAL_SIZE 262144 /* 0x40000 */
#define DT_N_S_soc_S_otgfs_50000000_RANGES_NUM 0
#define DT_N_S_soc_S_otgfs_50000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_otgfs_50000000_IRQ_NUM 1
#define DT_N_S_soc_S_otgfs_50000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_IRQ_IDX_0_VAL_irq 67
#define DT_N_S_soc_S_otgfs_50000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_otgfs_50000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_IRQ_NAME_otgfs_VAL_irq DT_N_S_soc_S_otgfs_50000000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_otgfs_50000000_IRQ_NAME_otgfs_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_IRQ_NAME_otgfs_VAL_priority DT_N_S_soc_S_otgfs_50000000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_otgfs_50000000_IRQ_NAME_otgfs_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_COMPAT_MATCHES_st_stm32_otgfs 1
#define DT_N_S_soc_S_otgfs_50000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_otgfs_50000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_COMPAT_MODEL_IDX_0 "stm32-otgfs"
#define DT_N_S_soc_S_otgfs_50000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_otgfs_50000000_PINCTRL_NUM 1
#define DT_N_S_soc_S_otgfs_50000000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_otgfs_50000000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_otgfs_50000000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_otgfs_50000000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11
#define DT_N_S_soc_S_otgfs_50000000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12
#define DT_N_S_soc_S_otgfs_50000000_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10

/* Generic property macros: */
#define DT_N_S_soc_S_otgfs_50000000_P_reg {1342177280 /* 0x50000000 */, 262144 /* 0x40000 */}
#define DT_N_S_soc_S_otgfs_50000000_P_reg_IDX_0 1342177280
#define DT_N_S_soc_S_otgfs_50000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_reg_IDX_1 262144
#define DT_N_S_soc_S_otgfs_50000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_otgfs_50000000, reg, 0) \
	fn(DT_N_S_soc_S_otgfs_50000000, reg, 1)
#define DT_N_S_soc_S_otgfs_50000000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_otgfs_50000000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, reg, 1)
#define DT_N_S_soc_S_otgfs_50000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_otgfs_50000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_otgfs_50000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_50000000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_otgfs_50000000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_50000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_interrupts {67 /* 0x43 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_otgfs_50000000_P_interrupts_IDX_0 67
#define DT_N_S_soc_S_otgfs_50000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_otgfs_50000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_otgfs_50000000, interrupts, 0) \
	fn(DT_N_S_soc_S_otgfs_50000000, interrupts, 1)
#define DT_N_S_soc_S_otgfs_50000000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_otgfs_50000000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, interrupts, 1)
#define DT_N_S_soc_S_otgfs_50000000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_otgfs_50000000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_otgfs_50000000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_50000000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_otgfs_50000000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_50000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_otgfs_50000000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_otgfs_50000000, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_otgfs_50000000, pinctrl_0, 2)
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_otgfs_50000000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, pinctrl_0, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, pinctrl_0, 2)
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_otgfs_50000000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_otgfs_50000000, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_otgfs_50000000, pinctrl_0, 2, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_otgfs_50000000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, pinctrl_0, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, pinctrl_0, 2, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_0_LEN 3
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_otgfs_50000000, pinctrl_names, 0)
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_otgfs_50000000, pinctrl_names, 0)
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_otgfs_50000000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_otgfs_50000000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_otgfs_50000000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_ram_size 1280
#define DT_N_S_soc_S_otgfs_50000000_P_ram_size_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_phys DT_N_S_otgfs_phy
#define DT_N_S_soc_S_otgfs_50000000_P_phys_IDX_0 DT_N_S_otgfs_phy
#define DT_N_S_soc_S_otgfs_50000000_P_phys_IDX_0_PH DT_N_S_otgfs_phy
#define DT_N_S_soc_S_otgfs_50000000_P_phys_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_phys_LEN 1
#define DT_N_S_soc_S_otgfs_50000000_P_phys_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_otgfs_50000000_P_clocks_IDX_0_VAL_bus 76
#define DT_N_S_soc_S_otgfs_50000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_clocks_IDX_0_VAL_bits 4096
#define DT_N_S_soc_S_otgfs_50000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_otgfs_50000000, clocks, 0)
#define DT_N_S_soc_S_otgfs_50000000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_otgfs_50000000, clocks, 0)
#define DT_N_S_soc_S_otgfs_50000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_otgfs_50000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_50000000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_otgfs_50000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_50000000_P_clocks_LEN 1
#define DT_N_S_soc_S_otgfs_50000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_num_bidir_endpoints 6
#define DT_N_S_soc_S_otgfs_50000000_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_maximum_speed "full-speed"
#define DT_N_S_soc_S_otgfs_50000000_P_maximum_speed_STRING_TOKEN full_speed
#define DT_N_S_soc_S_otgfs_50000000_P_maximum_speed_STRING_UPPER_TOKEN FULL_SPEED
#define DT_N_S_soc_S_otgfs_50000000_P_maximum_speed_ENUM_IDX 1
#define DT_N_S_soc_S_otgfs_50000000_P_maximum_speed_ENUM_TOKEN full_speed
#define DT_N_S_soc_S_otgfs_50000000_P_maximum_speed_ENUM_UPPER_TOKEN FULL_SPEED
#define DT_N_S_soc_S_otgfs_50000000_P_maximum_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 0) \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 1) \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 2) \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 3) \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 4) \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 5) \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 6) \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 7) \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 8) \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 9)
#define DT_N_S_soc_S_otgfs_50000000_P_maximum_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 9)
#define DT_N_S_soc_S_otgfs_50000000_P_maximum_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 9, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_50000000_P_maximum_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, maximum_speed, 9, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_50000000_P_maximum_speed_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_status "okay"
#define DT_N_S_soc_S_otgfs_50000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_otgfs_50000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_otgfs_50000000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_otgfs_50000000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_otgfs_50000000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_otgfs_50000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_otgfs_50000000, status, 0) \
	fn(DT_N_S_soc_S_otgfs_50000000, status, 1) \
	fn(DT_N_S_soc_S_otgfs_50000000, status, 2) \
	fn(DT_N_S_soc_S_otgfs_50000000, status, 3)
#define DT_N_S_soc_S_otgfs_50000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_otgfs_50000000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, status, 3)
#define DT_N_S_soc_S_otgfs_50000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_otgfs_50000000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_otgfs_50000000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_otgfs_50000000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_otgfs_50000000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_50000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_otgfs_50000000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_50000000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_50000000_P_status_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_compatible {"st,stm32-otgfs"}
#define DT_N_S_soc_S_otgfs_50000000_P_compatible_IDX_0 "st,stm32-otgfs"
#define DT_N_S_soc_S_otgfs_50000000_P_compatible_IDX_0_STRING_TOKEN st_stm32_otgfs
#define DT_N_S_soc_S_otgfs_50000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_OTGFS
#define DT_N_S_soc_S_otgfs_50000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_otgfs_50000000, compatible, 0)
#define DT_N_S_soc_S_otgfs_50000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_otgfs_50000000, compatible, 0)
#define DT_N_S_soc_S_otgfs_50000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_otgfs_50000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_50000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_otgfs_50000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_50000000_P_compatible_LEN 1
#define DT_N_S_soc_S_otgfs_50000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_interrupt_names {"otgfs"}
#define DT_N_S_soc_S_otgfs_50000000_P_interrupt_names_IDX_0 "otgfs"
#define DT_N_S_soc_S_otgfs_50000000_P_interrupt_names_IDX_0_STRING_TOKEN otgfs
#define DT_N_S_soc_S_otgfs_50000000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN OTGFS
#define DT_N_S_soc_S_otgfs_50000000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_otgfs_50000000, interrupt_names, 0)
#define DT_N_S_soc_S_otgfs_50000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_otgfs_50000000, interrupt_names, 0)
#define DT_N_S_soc_S_otgfs_50000000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_otgfs_50000000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_50000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_otgfs_50000000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_50000000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_otgfs_50000000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_otgfs_50000000_P_wakeup_source 0
#define DT_N_S_soc_S_otgfs_50000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/rng@50060800
 *
 * Node identifier: DT_N_S_soc_S_rng_50060800
 *
 * Binding (compatible = st,stm32-rng):
 *   $ZEPHYR_BASE/dts/bindings/rng/st,stm32-rng.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rng_50060800_PATH "/soc/rng@50060800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rng_50060800_FULL_NAME "rng@50060800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rng_50060800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rng_50060800_CHILD_IDX 26

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rng_50060800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rng_50060800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rng_50060800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rng_50060800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rng_50060800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rng_50060800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rng_50060800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rng_50060800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rng_50060800_ORD 57

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rng_50060800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rng_50060800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rng_50060800_EXISTS 1
#define DT_N_INST_0_st_stm32_rng DT_N_S_soc_S_rng_50060800
#define DT_N_NODELABEL_rng       DT_N_S_soc_S_rng_50060800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rng_50060800_REG_NUM 1
#define DT_N_S_soc_S_rng_50060800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_REG_IDX_0_VAL_ADDRESS 1342572544 /* 0x50060800 */
#define DT_N_S_soc_S_rng_50060800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rng_50060800_RANGES_NUM 0
#define DT_N_S_soc_S_rng_50060800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rng_50060800_IRQ_NUM 1
#define DT_N_S_soc_S_rng_50060800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_IRQ_IDX_0_VAL_irq 80
#define DT_N_S_soc_S_rng_50060800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rng_50060800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_COMPAT_MATCHES_st_stm32_rng 1
#define DT_N_S_soc_S_rng_50060800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_rng_50060800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_COMPAT_MODEL_IDX_0 "stm32-rng"
#define DT_N_S_soc_S_rng_50060800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rng_50060800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rng_50060800_P_reg {1342572544 /* 0x50060800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rng_50060800_P_reg_IDX_0 1342572544
#define DT_N_S_soc_S_rng_50060800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rng_50060800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_50060800, reg, 0) \
	fn(DT_N_S_soc_S_rng_50060800, reg, 1)
#define DT_N_S_soc_S_rng_50060800_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rng_50060800, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rng_50060800, reg, 1)
#define DT_N_S_soc_S_rng_50060800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rng_50060800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rng_50060800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rng_50060800_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rng_50060800, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rng_50060800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rng_50060800_P_reg_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_rng_50060800_P_clocks_IDX_0_VAL_bus 76
#define DT_N_S_soc_S_rng_50060800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_rng_50060800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_50060800, clocks, 0)
#define DT_N_S_soc_S_rng_50060800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rng_50060800, clocks, 0)
#define DT_N_S_soc_S_rng_50060800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rng_50060800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rng_50060800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rng_50060800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rng_50060800_P_clocks_LEN 1
#define DT_N_S_soc_S_rng_50060800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_status "okay"
#define DT_N_S_soc_S_rng_50060800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_rng_50060800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rng_50060800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_rng_50060800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_rng_50060800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rng_50060800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_50060800, status, 0) \
	fn(DT_N_S_soc_S_rng_50060800, status, 1) \
	fn(DT_N_S_soc_S_rng_50060800, status, 2) \
	fn(DT_N_S_soc_S_rng_50060800, status, 3)
#define DT_N_S_soc_S_rng_50060800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rng_50060800, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rng_50060800, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rng_50060800, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rng_50060800, status, 3)
#define DT_N_S_soc_S_rng_50060800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rng_50060800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rng_50060800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rng_50060800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rng_50060800, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_rng_50060800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rng_50060800, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rng_50060800, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rng_50060800, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rng_50060800, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_rng_50060800_P_status_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_compatible {"st,stm32-rng"}
#define DT_N_S_soc_S_rng_50060800_P_compatible_IDX_0 "st,stm32-rng"
#define DT_N_S_soc_S_rng_50060800_P_compatible_IDX_0_STRING_TOKEN st_stm32_rng
#define DT_N_S_soc_S_rng_50060800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_RNG
#define DT_N_S_soc_S_rng_50060800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_50060800, compatible, 0)
#define DT_N_S_soc_S_rng_50060800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rng_50060800, compatible, 0)
#define DT_N_S_soc_S_rng_50060800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rng_50060800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rng_50060800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rng_50060800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rng_50060800_P_compatible_LEN 1
#define DT_N_S_soc_S_rng_50060800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_interrupts {80 /* 0x50 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rng_50060800_P_interrupts_IDX_0 80
#define DT_N_S_soc_S_rng_50060800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rng_50060800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_50060800, interrupts, 0) \
	fn(DT_N_S_soc_S_rng_50060800, interrupts, 1)
#define DT_N_S_soc_S_rng_50060800_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rng_50060800, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rng_50060800, interrupts, 1)
#define DT_N_S_soc_S_rng_50060800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rng_50060800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rng_50060800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rng_50060800_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rng_50060800, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rng_50060800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rng_50060800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_wakeup_source 0
#define DT_N_S_soc_S_rng_50060800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40002800
 *
 * Node identifier: DT_N_S_soc_S_rtc_40002800
 *
 * Binding (compatible = st,stm32-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/st,stm32-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40002800_PATH "/soc/rtc@40002800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_40002800_FULL_NAME "rtc@40002800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_40002800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_40002800_CHILD_IDX 20

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40002800_ORD 58

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40002800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40002800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40002800_EXISTS 1
#define DT_N_INST_0_st_stm32_rtc DT_N_S_soc_S_rtc_40002800
#define DT_N_NODELABEL_rtc       DT_N_S_soc_S_rtc_40002800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_40002800_REG_NUM 1
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_VAL_ADDRESS 1073752064 /* 0x40002800 */
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rtc_40002800_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_40002800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_40002800_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_irq 41
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_COMPAT_MATCHES_st_stm32_rtc 1
#define DT_N_S_soc_S_rtc_40002800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_rtc_40002800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_COMPAT_MODEL_IDX_0 "stm32-rtc"
#define DT_N_S_soc_S_rtc_40002800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_40002800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40002800_P_reg {1073752064 /* 0x40002800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_0 1073752064
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, reg, 0) \
	fn(DT_N_S_soc_S_rtc_40002800, reg, 1)
#define DT_N_S_soc_S_rtc_40002800_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002800, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40002800, reg, 1)
#define DT_N_S_soc_S_rtc_40002800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002800, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40002800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts {41 /* 0x29 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_0 41
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, interrupts, 0) \
	fn(DT_N_S_soc_S_rtc_40002800, interrupts, 1)
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002800, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40002800, interrupts, 1)
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002800, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40002800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_prescaler 32768
#define DT_N_S_soc_S_rtc_40002800_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_status "okay"
#define DT_N_S_soc_S_rtc_40002800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_rtc_40002800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_40002800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, status, 0) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 1) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 2) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 3)
#define DT_N_S_soc_S_rtc_40002800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002800, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40002800, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40002800, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40002800, status, 3)
#define DT_N_S_soc_S_rtc_40002800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002800, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40002800, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40002800, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40002800, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible {"st,stm32-rtc"}
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0 "st,stm32-rtc"
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0_STRING_TOKEN st_stm32_rtc
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_RTC
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, compatible, 0)
#define DT_N_S_soc_S_rtc_40002800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002800, compatible, 0)
#define DT_N_S_soc_S_rtc_40002800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bus 88
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bits 268435456
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, clocks, 0)
#define DT_N_S_soc_S_rtc_40002800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002800, clocks, 0)
#define DT_N_S_soc_S_rtc_40002800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_clocks_LEN 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_40002800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/sdmmc@40012800
 *
 * Node identifier: DT_N_S_soc_S_sdmmc_40012800
 *
 * Binding (compatible = st,stm32-sdmmc):
 *   $ZEPHYR_BASE/dts/bindings/mmc/st,stm32-sdmmc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sdmmc_40012800_PATH "/soc/sdmmc@40012800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sdmmc_40012800_FULL_NAME "sdmmc@40012800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sdmmc_40012800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sdmmc_40012800_CHILD_IDX 40

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sdmmc_40012800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sdmmc_40012800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sdmmc_40012800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdmmc_40012800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sdmmc_40012800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sdmmc_40012800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sdmmc_40012800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdmmc_40012800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sdmmc_40012800_ORD 59

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sdmmc_40012800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sdmmc_40012800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sdmmc_40012800_EXISTS 1
#define DT_N_INST_0_st_stm32_sdmmc DT_N_S_soc_S_sdmmc_40012800
#define DT_N_NODELABEL_sdmmc1      DT_N_S_soc_S_sdmmc_40012800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sdmmc_40012800_REG_NUM 1
#define DT_N_S_soc_S_sdmmc_40012800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012800_REG_IDX_0_VAL_ADDRESS 1073817600 /* 0x40012800 */
#define DT_N_S_soc_S_sdmmc_40012800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_sdmmc_40012800_RANGES_NUM 0
#define DT_N_S_soc_S_sdmmc_40012800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sdmmc_40012800_IRQ_NUM 1
#define DT_N_S_soc_S_sdmmc_40012800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012800_IRQ_IDX_0_VAL_irq 49
#define DT_N_S_soc_S_sdmmc_40012800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sdmmc_40012800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012800_COMPAT_MATCHES_st_stm32_sdmmc 1
#define DT_N_S_soc_S_sdmmc_40012800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_sdmmc_40012800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012800_COMPAT_MODEL_IDX_0 "stm32-sdmmc"
#define DT_N_S_soc_S_sdmmc_40012800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sdmmc_40012800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sdmmc_40012800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_sdmmc_40012800_P_clocks_IDX_0_VAL_bus 96
#define DT_N_S_soc_S_sdmmc_40012800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012800_P_clocks_IDX_0_VAL_bits 1024
#define DT_N_S_soc_S_sdmmc_40012800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_40012800, clocks, 0)
#define DT_N_S_soc_S_sdmmc_40012800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdmmc_40012800, clocks, 0)
#define DT_N_S_soc_S_sdmmc_40012800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_40012800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_40012800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdmmc_40012800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_40012800_P_clocks_LEN 1
#define DT_N_S_soc_S_sdmmc_40012800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012800_P_reg {1073817600 /* 0x40012800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_sdmmc_40012800_P_reg_IDX_0 1073817600
#define DT_N_S_soc_S_sdmmc_40012800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_sdmmc_40012800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_40012800, reg, 0) \
	fn(DT_N_S_soc_S_sdmmc_40012800, reg, 1)
#define DT_N_S_soc_S_sdmmc_40012800_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdmmc_40012800, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_40012800, reg, 1)
#define DT_N_S_soc_S_sdmmc_40012800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_40012800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_40012800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_40012800_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdmmc_40012800, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_40012800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_40012800_P_reg_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012800_P_bus_width 1
#define DT_N_S_soc_S_sdmmc_40012800_P_bus_width_ENUM_IDX 0
#define DT_N_S_soc_S_sdmmc_40012800_P_bus_width_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012800_P_status "disabled"
#define DT_N_S_soc_S_sdmmc_40012800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sdmmc_40012800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sdmmc_40012800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_sdmmc_40012800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_sdmmc_40012800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sdmmc_40012800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_40012800, status, 0) \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 1) \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 2) \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 3) \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 4) \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 5) \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 6) \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 7)
#define DT_N_S_soc_S_sdmmc_40012800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdmmc_40012800, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 7)
#define DT_N_S_soc_S_sdmmc_40012800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_40012800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_40012800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdmmc_40012800, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_40012800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_40012800_P_status_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012800_P_compatible {"st,stm32-sdmmc"}
#define DT_N_S_soc_S_sdmmc_40012800_P_compatible_IDX_0 "st,stm32-sdmmc"
#define DT_N_S_soc_S_sdmmc_40012800_P_compatible_IDX_0_STRING_TOKEN st_stm32_sdmmc
#define DT_N_S_soc_S_sdmmc_40012800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SDMMC
#define DT_N_S_soc_S_sdmmc_40012800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_40012800, compatible, 0)
#define DT_N_S_soc_S_sdmmc_40012800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdmmc_40012800, compatible, 0)
#define DT_N_S_soc_S_sdmmc_40012800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_40012800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_40012800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdmmc_40012800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_40012800_P_compatible_LEN 1
#define DT_N_S_soc_S_sdmmc_40012800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012800_P_interrupts {49 /* 0x31 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sdmmc_40012800_P_interrupts_IDX_0 49
#define DT_N_S_soc_S_sdmmc_40012800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sdmmc_40012800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_40012800, interrupts, 0) \
	fn(DT_N_S_soc_S_sdmmc_40012800, interrupts, 1)
#define DT_N_S_soc_S_sdmmc_40012800_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdmmc_40012800, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_40012800, interrupts, 1)
#define DT_N_S_soc_S_sdmmc_40012800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_40012800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_40012800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_40012800_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdmmc_40012800, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_40012800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_40012800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012800_P_wakeup_source 0
#define DT_N_S_soc_S_sdmmc_40012800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/serial@40004400
 *
 * Node identifier: DT_N_S_soc_S_serial_40004400
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40004400_PATH "/soc/serial@40004400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40004400_FULL_NAME "serial@40004400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40004400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40004400_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40004400_ORD 60

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40004400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40004400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40004400_EXISTS 1
#define DT_N_INST_1_st_stm32_usart DT_N_S_soc_S_serial_40004400
#define DT_N_INST_2_st_stm32_uart  DT_N_S_soc_S_serial_40004400
#define DT_N_NODELABEL_usart2      DT_N_S_soc_S_serial_40004400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40004400_REG_NUM 1
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_VAL_ADDRESS 1073759232 /* 0x40004400 */
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40004400_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40004400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40004400_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_irq 38
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40004400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MODEL_IDX_0 "stm32-usart"
#define DT_N_S_soc_S_serial_40004400_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40004400_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_40004400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40004400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40004400_P_reg {1073759232 /* 0x40004400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_0 1073759232
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, reg, 0) \
	fn(DT_N_S_soc_S_serial_40004400, reg, 1)
#define DT_N_S_soc_S_serial_40004400_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, reg, 1)
#define DT_N_S_soc_S_serial_40004400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bus 88
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bits 131072
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, clocks, 0)
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, clocks, 0)
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts {38 /* 0x26 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_0 38
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40004400, interrupts, 1)
#define DT_N_S_soc_S_serial_40004400_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, interrupts, 1)
#define DT_N_S_soc_S_serial_40004400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_single_wire 0
#define DT_N_S_soc_S_serial_40004400_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40004400_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_tx_invert 0
#define DT_N_S_soc_S_serial_40004400_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_rx_invert 0
#define DT_N_S_soc_S_serial_40004400_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40004400_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_status "disabled"
#define DT_N_S_soc_S_serial_40004400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40004400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40004400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40004400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40004400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, status, 0) \
	fn(DT_N_S_soc_S_serial_40004400, status, 1) \
	fn(DT_N_S_soc_S_serial_40004400, status, 2) \
	fn(DT_N_S_soc_S_serial_40004400, status, 3) \
	fn(DT_N_S_soc_S_serial_40004400, status, 4) \
	fn(DT_N_S_soc_S_serial_40004400, status, 5) \
	fn(DT_N_S_soc_S_serial_40004400, status, 6) \
	fn(DT_N_S_soc_S_serial_40004400, status, 7)
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, status, 7)
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_STRING_TOKEN st_stm32_usart
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_USART
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1)
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1)
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40004400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40004400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/serial@40004800
 *
 * Node identifier: DT_N_S_soc_S_serial_40004800
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40004800_PATH "/soc/serial@40004800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40004800_FULL_NAME "serial@40004800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40004800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40004800_CHILD_IDX 27

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40004800_ORD 61

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40004800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40004800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40004800_EXISTS 1
#define DT_N_INST_2_st_stm32_usart DT_N_S_soc_S_serial_40004800
#define DT_N_INST_4_st_stm32_uart  DT_N_S_soc_S_serial_40004800
#define DT_N_NODELABEL_usart3      DT_N_S_soc_S_serial_40004800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40004800_REG_NUM 1
#define DT_N_S_soc_S_serial_40004800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_REG_IDX_0_VAL_ADDRESS 1073760256 /* 0x40004800 */
#define DT_N_S_soc_S_serial_40004800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40004800_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40004800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40004800_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_irq 39
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40004800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_MODEL_IDX_0 "stm32-usart"
#define DT_N_S_soc_S_serial_40004800_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40004800_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_40004800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40004800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40004800_P_reg {1073760256 /* 0x40004800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_0 1073760256
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, reg, 0) \
	fn(DT_N_S_soc_S_serial_40004800, reg, 1)
#define DT_N_S_soc_S_serial_40004800_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004800, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, reg, 1)
#define DT_N_S_soc_S_serial_40004800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004800, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bus 88
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, clocks, 0)
#define DT_N_S_soc_S_serial_40004800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004800, clocks, 0)
#define DT_N_S_soc_S_serial_40004800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_interrupts {39 /* 0x27 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_0 39
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40004800, interrupts, 1)
#define DT_N_S_soc_S_serial_40004800_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004800, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, interrupts, 1)
#define DT_N_S_soc_S_serial_40004800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004800, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_single_wire 0
#define DT_N_S_soc_S_serial_40004800_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40004800_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_tx_invert 0
#define DT_N_S_soc_S_serial_40004800_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_rx_invert 0
#define DT_N_S_soc_S_serial_40004800_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40004800_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_status "disabled"
#define DT_N_S_soc_S_serial_40004800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40004800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40004800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40004800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40004800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40004800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, status, 0) \
	fn(DT_N_S_soc_S_serial_40004800, status, 1) \
	fn(DT_N_S_soc_S_serial_40004800, status, 2) \
	fn(DT_N_S_soc_S_serial_40004800, status, 3) \
	fn(DT_N_S_soc_S_serial_40004800, status, 4) \
	fn(DT_N_S_soc_S_serial_40004800, status, 5) \
	fn(DT_N_S_soc_S_serial_40004800, status, 6) \
	fn(DT_N_S_soc_S_serial_40004800, status, 7)
#define DT_N_S_soc_S_serial_40004800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004800, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, status, 7)
#define DT_N_S_soc_S_serial_40004800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004800, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_0_STRING_TOKEN st_stm32_usart
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_USART
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40004800, compatible, 1)
#define DT_N_S_soc_S_serial_40004800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004800, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, compatible, 1)
#define DT_N_S_soc_S_serial_40004800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004800, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40004800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40004800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/uart4_rx_pa1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_PATH "/soc/pin-controller@48000000/uart4_rx_pa1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_FULL_NAME "uart4_rx_pa1"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_CHILD_IDX 34

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_ORD 62

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_SUPPORTS_ORDS \
	64, /* /soc/serial@40004c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_EXISTS 1
#define DT_N_NODELABEL_uart4_rx_pa1 DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_pinmux 40
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/uart4_tx_pa0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_PATH "/soc/pin-controller@48000000/uart4_tx_pa0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_FULL_NAME "uart4_tx_pa0"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_CHILD_IDX 36

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_ORD 63

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_SUPPORTS_ORDS \
	64, /* /soc/serial@40004c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_EXISTS 1
#define DT_N_NODELABEL_uart4_tx_pa0 DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_pinmux 8
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/serial@40004c00
 *
 * Node identifier: DT_N_S_soc_S_serial_40004c00
 *
 * Binding (compatible = st,stm32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40004c00_PATH "/soc/serial@40004c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40004c00_FULL_NAME "serial@40004c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40004c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40004c00_CHILD_IDX 28

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40004c00_ORD 64

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40004c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */ \
	62, /* /soc/pin-controller@48000000/uart4_rx_pa1 */ \
	63, /* /soc/pin-controller@48000000/uart4_tx_pa0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40004c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40004c00_EXISTS 1
#define DT_N_INST_1_st_stm32_uart     DT_N_S_soc_S_serial_40004c00
#define DT_N_NODELABEL_uart4          DT_N_S_soc_S_serial_40004c00
#define DT_N_NODELABEL_arduino_serial DT_N_S_soc_S_serial_40004c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40004c00_REG_NUM 1
#define DT_N_S_soc_S_serial_40004c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_REG_IDX_0_VAL_ADDRESS 1073761280 /* 0x40004c00 */
#define DT_N_S_soc_S_serial_40004c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40004c00_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40004c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40004c00_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_VAL_irq 52
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40004c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40004c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_COMPAT_MODEL_IDX_0 "stm32-uart"
#define DT_N_S_soc_S_serial_40004c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40004c00_PINCTRL_NUM 1
#define DT_N_S_soc_S_serial_40004c00_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_serial_40004c00_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40004c00_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_serial_40004c00_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0
#define DT_N_S_soc_S_serial_40004c00_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40004c00_P_reg {1073761280 /* 0x40004c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40004c00_P_reg_IDX_0 1073761280
#define DT_N_S_soc_S_serial_40004c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40004c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, reg, 0) \
	fn(DT_N_S_soc_S_serial_40004c00, reg, 1)
#define DT_N_S_soc_S_serial_40004c00_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004c00, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004c00, reg, 1)
#define DT_N_S_soc_S_serial_40004c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004c00, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_VAL_bus 88
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_VAL_bits 524288
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, clocks, 0)
#define DT_N_S_soc_S_serial_40004c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004c00, clocks, 0)
#define DT_N_S_soc_S_serial_40004c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_interrupts {52 /* 0x34 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_IDX_0 52
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40004c00, interrupts, 1)
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004c00, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004c00, interrupts, 1)
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004c00, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_single_wire 0
#define DT_N_S_soc_S_serial_40004c00_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40004c00_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_tx_invert 0
#define DT_N_S_soc_S_serial_40004c00_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_rx_invert 0
#define DT_N_S_soc_S_serial_40004c00_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_serial_40004c00, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004c00, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004c00, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004c00, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004c00, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004c00, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004c00, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004c00, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_serial_40004c00_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_current_speed 115200
#define DT_N_S_soc_S_serial_40004c00_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40004c00_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_status "okay"
#define DT_N_S_soc_S_serial_40004c00_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_serial_40004c00_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40004c00_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40004c00_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_serial_40004c00_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40004c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, status, 0) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 1) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 2) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 3)
#define DT_N_S_soc_S_serial_40004c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004c00, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004c00, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004c00, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004c00, status, 3)
#define DT_N_S_soc_S_serial_40004c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004c00, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004c00, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004c00, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004c00, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_compatible {"st,stm32-uart"}
#define DT_N_S_soc_S_serial_40004c00_P_compatible_IDX_0 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40004c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40004c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40004c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, compatible, 0)
#define DT_N_S_soc_S_serial_40004c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004c00, compatible, 0)
#define DT_N_S_soc_S_serial_40004c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40004c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40004c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/serial@40005000
 *
 * Node identifier: DT_N_S_soc_S_serial_40005000
 *
 * Binding (compatible = st,stm32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40005000_PATH "/soc/serial@40005000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40005000_FULL_NAME "serial@40005000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40005000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40005000_CHILD_IDX 29

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40005000_ORD 65

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40005000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40005000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40005000_EXISTS 1
#define DT_N_INST_5_st_stm32_uart DT_N_S_soc_S_serial_40005000
#define DT_N_NODELABEL_uart5      DT_N_S_soc_S_serial_40005000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40005000_REG_NUM 1
#define DT_N_S_soc_S_serial_40005000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_REG_IDX_0_VAL_ADDRESS 1073762304 /* 0x40005000 */
#define DT_N_S_soc_S_serial_40005000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40005000_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40005000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40005000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_VAL_irq 53
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40005000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40005000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_COMPAT_MODEL_IDX_0 "stm32-uart"
#define DT_N_S_soc_S_serial_40005000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40005000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40005000_P_reg {1073762304 /* 0x40005000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40005000_P_reg_IDX_0 1073762304
#define DT_N_S_soc_S_serial_40005000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40005000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, reg, 0) \
	fn(DT_N_S_soc_S_serial_40005000, reg, 1)
#define DT_N_S_soc_S_serial_40005000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40005000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40005000, reg, 1)
#define DT_N_S_soc_S_serial_40005000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40005000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40005000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40005000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40005000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_VAL_bus 88
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_VAL_bits 1048576
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, clocks, 0)
#define DT_N_S_soc_S_serial_40005000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40005000, clocks, 0)
#define DT_N_S_soc_S_serial_40005000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40005000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40005000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_interrupts {53 /* 0x35 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40005000_P_interrupts_IDX_0 53
#define DT_N_S_soc_S_serial_40005000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40005000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40005000, interrupts, 1)
#define DT_N_S_soc_S_serial_40005000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40005000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40005000, interrupts, 1)
#define DT_N_S_soc_S_serial_40005000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40005000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40005000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40005000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40005000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_single_wire 0
#define DT_N_S_soc_S_serial_40005000_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40005000_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_tx_invert 0
#define DT_N_S_soc_S_serial_40005000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_rx_invert 0
#define DT_N_S_soc_S_serial_40005000_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40005000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_status "disabled"
#define DT_N_S_soc_S_serial_40005000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40005000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40005000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40005000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40005000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40005000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, status, 0) \
	fn(DT_N_S_soc_S_serial_40005000, status, 1) \
	fn(DT_N_S_soc_S_serial_40005000, status, 2) \
	fn(DT_N_S_soc_S_serial_40005000, status, 3) \
	fn(DT_N_S_soc_S_serial_40005000, status, 4) \
	fn(DT_N_S_soc_S_serial_40005000, status, 5) \
	fn(DT_N_S_soc_S_serial_40005000, status, 6) \
	fn(DT_N_S_soc_S_serial_40005000, status, 7)
#define DT_N_S_soc_S_serial_40005000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40005000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40005000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40005000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40005000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40005000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40005000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40005000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40005000, status, 7)
#define DT_N_S_soc_S_serial_40005000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40005000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40005000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40005000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40005000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40005000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40005000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40005000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40005000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40005000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40005000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40005000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40005000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40005000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40005000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40005000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40005000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_compatible {"st,stm32-uart"}
#define DT_N_S_soc_S_serial_40005000_P_compatible_IDX_0 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40005000_P_compatible_IDX_0_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40005000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40005000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, compatible, 0)
#define DT_N_S_soc_S_serial_40005000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40005000, compatible, 0)
#define DT_N_S_soc_S_serial_40005000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40005000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40005000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/serial@40008000
 *
 * Node identifier: DT_N_S_soc_S_serial_40008000
 *
 * Binding (compatible = st,stm32-lpuart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-lpuart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40008000_PATH "/soc/serial@40008000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40008000_FULL_NAME "serial@40008000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40008000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40008000_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40008000_ORD 66

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40008000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40008000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40008000_EXISTS 1
#define DT_N_INST_0_st_stm32_lpuart DT_N_S_soc_S_serial_40008000
#define DT_N_INST_3_st_stm32_uart   DT_N_S_soc_S_serial_40008000
#define DT_N_NODELABEL_lpuart1      DT_N_S_soc_S_serial_40008000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40008000_REG_NUM 1
#define DT_N_S_soc_S_serial_40008000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_REG_IDX_0_VAL_ADDRESS 1073774592 /* 0x40008000 */
#define DT_N_S_soc_S_serial_40008000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40008000_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40008000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40008000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_VAL_irq 70
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_COMPAT_MATCHES_st_stm32_lpuart 1
#define DT_N_S_soc_S_serial_40008000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40008000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_COMPAT_MODEL_IDX_0 "stm32-lpuart"
#define DT_N_S_soc_S_serial_40008000_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40008000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40008000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_40008000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40008000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40008000_P_reg {1073774592 /* 0x40008000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40008000_P_reg_IDX_0 1073774592
#define DT_N_S_soc_S_serial_40008000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40008000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, reg, 0) \
	fn(DT_N_S_soc_S_serial_40008000, reg, 1)
#define DT_N_S_soc_S_serial_40008000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40008000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40008000, reg, 1)
#define DT_N_S_soc_S_serial_40008000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40008000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40008000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40008000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40008000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_VAL_bus 92
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, clocks, 0)
#define DT_N_S_soc_S_serial_40008000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40008000, clocks, 0)
#define DT_N_S_soc_S_serial_40008000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40008000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40008000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_interrupts {70 /* 0x46 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40008000_P_interrupts_IDX_0 70
#define DT_N_S_soc_S_serial_40008000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40008000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40008000, interrupts, 1)
#define DT_N_S_soc_S_serial_40008000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40008000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40008000, interrupts, 1)
#define DT_N_S_soc_S_serial_40008000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40008000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40008000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40008000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40008000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_single_wire 0
#define DT_N_S_soc_S_serial_40008000_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40008000_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_tx_invert 0
#define DT_N_S_soc_S_serial_40008000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_rx_invert 0
#define DT_N_S_soc_S_serial_40008000_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40008000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_status "disabled"
#define DT_N_S_soc_S_serial_40008000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40008000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40008000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40008000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40008000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40008000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, status, 0) \
	fn(DT_N_S_soc_S_serial_40008000, status, 1) \
	fn(DT_N_S_soc_S_serial_40008000, status, 2) \
	fn(DT_N_S_soc_S_serial_40008000, status, 3) \
	fn(DT_N_S_soc_S_serial_40008000, status, 4) \
	fn(DT_N_S_soc_S_serial_40008000, status, 5) \
	fn(DT_N_S_soc_S_serial_40008000, status, 6) \
	fn(DT_N_S_soc_S_serial_40008000, status, 7)
#define DT_N_S_soc_S_serial_40008000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40008000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40008000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40008000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40008000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40008000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40008000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40008000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40008000, status, 7)
#define DT_N_S_soc_S_serial_40008000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40008000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40008000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40008000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40008000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40008000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40008000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40008000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40008000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40008000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40008000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40008000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40008000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40008000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40008000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40008000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40008000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_compatible {"st,stm32-lpuart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_0 "st,stm32-lpuart"
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_0_STRING_TOKEN st_stm32_lpuart
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_LPUART
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40008000, compatible, 1)
#define DT_N_S_soc_S_serial_40008000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40008000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40008000, compatible, 1)
#define DT_N_S_soc_S_serial_40008000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40008000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40008000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40008000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40008000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40008000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40008000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart1_rx_pb7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_PATH "/soc/pin-controller@48000000/usart1_rx_pb7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_FULL_NAME "usart1_rx_pb7"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_CHILD_IDX 33

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_ORD 67

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_SUPPORTS_ORDS \
	69, /* /soc/serial@40013800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_EXISTS 1
#define DT_N_NODELABEL_usart1_rx_pb7 DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_pinmux 743
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart1_tx_pb6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_PATH "/soc/pin-controller@48000000/usart1_tx_pb6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_FULL_NAME "usart1_tx_pb6"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_CHILD_IDX 35

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_ORD 68

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_SUPPORTS_ORDS \
	69, /* /soc/serial@40013800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_EXISTS 1
#define DT_N_NODELABEL_usart1_tx_pb6 DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_pinmux 711
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/serial@40013800
 *
 * Node identifier: DT_N_S_soc_S_serial_40013800
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40013800_PATH "/soc/serial@40013800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40013800_FULL_NAME "serial@40013800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40013800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40013800_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40013800_ORD 69

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40013800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */ \
	67, /* /soc/pin-controller@48000000/usart1_rx_pb7 */ \
	68, /* /soc/pin-controller@48000000/usart1_tx_pb6 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40013800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40013800_EXISTS 1
#define DT_N_INST_0_st_stm32_usart DT_N_S_soc_S_serial_40013800
#define DT_N_INST_0_st_stm32_uart  DT_N_S_soc_S_serial_40013800
#define DT_N_NODELABEL_usart1      DT_N_S_soc_S_serial_40013800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40013800_REG_NUM 1
#define DT_N_S_soc_S_serial_40013800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_REG_IDX_0_VAL_ADDRESS 1073821696 /* 0x40013800 */
#define DT_N_S_soc_S_serial_40013800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40013800_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40013800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40013800_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_irq 37
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40013800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_MODEL_IDX_0 "stm32-usart"
#define DT_N_S_soc_S_serial_40013800_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40013800_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_40013800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NUM 1
#define DT_N_S_soc_S_serial_40013800_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_serial_40013800_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40013800_P_reg {1073821696 /* 0x40013800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_0 1073821696
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, reg, 0) \
	fn(DT_N_S_soc_S_serial_40013800, reg, 1)
#define DT_N_S_soc_S_serial_40013800_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, reg, 1)
#define DT_N_S_soc_S_serial_40013800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bus 96
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, clocks, 0)
#define DT_N_S_soc_S_serial_40013800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, clocks, 0)
#define DT_N_S_soc_S_serial_40013800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_interrupts {37 /* 0x25 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_0 37
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40013800, interrupts, 1)
#define DT_N_S_soc_S_serial_40013800_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, interrupts, 1)
#define DT_N_S_soc_S_serial_40013800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_single_wire 0
#define DT_N_S_soc_S_serial_40013800_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40013800_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_tx_invert 0
#define DT_N_S_soc_S_serial_40013800_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_rx_invert 0
#define DT_N_S_soc_S_serial_40013800_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_current_speed 115200
#define DT_N_S_soc_S_serial_40013800_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40013800_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_status "okay"
#define DT_N_S_soc_S_serial_40013800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_serial_40013800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40013800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40013800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_serial_40013800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40013800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, status, 0) \
	fn(DT_N_S_soc_S_serial_40013800, status, 1) \
	fn(DT_N_S_soc_S_serial_40013800, status, 2) \
	fn(DT_N_S_soc_S_serial_40013800, status, 3)
#define DT_N_S_soc_S_serial_40013800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, status, 3)
#define DT_N_S_soc_S_serial_40013800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0_STRING_TOKEN st_stm32_usart
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_USART
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40013800, compatible, 1)
#define DT_N_S_soc_S_serial_40013800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, compatible, 1)
#define DT_N_S_soc_S_serial_40013800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40013800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40013800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003800
 *
 * Node identifier: DT_N_S_soc_S_spi_40003800
 *
 * Binding (compatible = st,stm32-spi-fifo):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi-fifo.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003800_PATH "/soc/spi@40003800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003800_FULL_NAME "spi@40003800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003800_CHILD_IDX 31

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003800_ORD 70

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003800_EXISTS 1
#define DT_N_INST_2_st_stm32_spi_fifo DT_N_S_soc_S_spi_40003800
#define DT_N_INST_2_st_stm32_spi      DT_N_S_soc_S_spi_40003800
#define DT_N_NODELABEL_spi2           DT_N_S_soc_S_spi_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003800_REG_NUM 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_ADDRESS 1073756160 /* 0x40003800 */
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40003800_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003800_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_0 "stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40003800_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_1 "stm32-spi"
#define DT_N_S_soc_S_spi_40003800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003800_P_reg {1073756160 /* 0x40003800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_0 1073756160
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, reg, 0) \
	fn(DT_N_S_soc_S_spi_40003800, reg, 1)
#define DT_N_S_soc_S_spi_40003800_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, reg, 1)
#define DT_N_S_soc_S_spi_40003800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts {36 /* 0x24 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40003800, interrupts, 1)
#define DT_N_S_soc_S_spi_40003800_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, interrupts, 1)
#define DT_N_S_soc_S_spi_40003800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_status "disabled"
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, status, 0) \
	fn(DT_N_S_soc_S_spi_40003800, status, 1) \
	fn(DT_N_S_soc_S_spi_40003800, status, 2) \
	fn(DT_N_S_soc_S_spi_40003800, status, 3) \
	fn(DT_N_S_soc_S_spi_40003800, status, 4) \
	fn(DT_N_S_soc_S_spi_40003800, status, 5) \
	fn(DT_N_S_soc_S_spi_40003800, status, 6) \
	fn(DT_N_S_soc_S_spi_40003800, status, 7)
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, status, 7)
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible {"st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_STRING_TOKEN st_stm32_spi_fifo
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SPI_FIFO
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, compatible, 0) \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 1)
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 1)
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_compatible_LEN 2
#define DT_N_S_soc_S_spi_40003800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bus 88
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, clocks, 0)
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, clocks, 0)
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_miso_pa6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_PATH "/soc/pin-controller@48000000/spi1_miso_pa6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FULL_NAME "spi1_miso_pa6"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_CHILD_IDX 26

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_ORD 71

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_SUPPORTS_ORDS \
	74, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_EXISTS 1
#define DT_N_NODELABEL_spi1_miso_pa6 DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_pinmux 197
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_mosi_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_PATH "/soc/pin-controller@48000000/spi1_mosi_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FULL_NAME "spi1_mosi_pa7"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_CHILD_IDX 28

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_ORD 72

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_SUPPORTS_ORDS \
	74, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_EXISTS 1
#define DT_N_NODELABEL_spi1_mosi_pa7 DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_pinmux 229
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_sck_pa5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_PATH "/soc/pin-controller@48000000/spi1_sck_pa5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FULL_NAME "spi1_sck_pa5"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_CHILD_IDX 30

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_ORD 73

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_SUPPORTS_ORDS \
	74, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_EXISTS 1
#define DT_N_NODELABEL_spi1_sck_pa5 DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_pinmux 165
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/spi@40013000
 *
 * Node identifier: DT_N_S_soc_S_spi_40013000
 *
 * Binding (compatible = st,stm32-spi-fifo):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi-fifo.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40013000_PATH "/soc/spi@40013000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40013000_FULL_NAME "spi@40013000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40013000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40013000_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40013000_ORD 74

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40013000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */ \
	18, /* /soc/pin-controller@48000000/gpio@48000000 */ \
	71, /* /soc/pin-controller@48000000/spi1_miso_pa6 */ \
	72, /* /soc/pin-controller@48000000/spi1_mosi_pa7 */ \
	73, /* /soc/pin-controller@48000000/spi1_sck_pa5 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40013000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40013000_EXISTS 1
#define DT_N_INST_0_st_stm32_spi_fifo DT_N_S_soc_S_spi_40013000
#define DT_N_INST_0_st_stm32_spi      DT_N_S_soc_S_spi_40013000
#define DT_N_NODELABEL_spi1           DT_N_S_soc_S_spi_40013000
#define DT_N_NODELABEL_arduino_spi    DT_N_S_soc_S_spi_40013000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40013000_REG_NUM 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_ADDRESS 1073819648 /* 0x40013000 */
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40013000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40013000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40013000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq 35
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_0 "stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40013000_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_1 "stm32-spi"
#define DT_N_S_soc_S_spi_40013000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NUM 1
#define DT_N_S_soc_S_spi_40013000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_40013000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40013000_P_reg {1073819648 /* 0x40013000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_0 1073819648
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, reg, 0) \
	fn(DT_N_S_soc_S_spi_40013000, reg, 1)
#define DT_N_S_soc_S_spi_40013000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, reg, 1)
#define DT_N_S_soc_S_spi_40013000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts {35 /* 0x23 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_0 35
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40013000, interrupts, 1)
#define DT_N_S_soc_S_spi_40013000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, interrupts, 1)
#define DT_N_S_soc_S_spi_40013000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 2)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 2)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_LEN 3
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_0_VAL_pin 2
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_0_VAL_flags 17
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, cs_gpios, 0)
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, cs_gpios, 0)
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, cs_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, cs_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_status "okay"
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, status, 0) \
	fn(DT_N_S_soc_S_spi_40013000, status, 1) \
	fn(DT_N_S_soc_S_spi_40013000, status, 2) \
	fn(DT_N_S_soc_S_spi_40013000, status, 3)
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, status, 3)
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible {"st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_STRING_TOKEN st_stm32_spi_fifo
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SPI_FIFO
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, compatible, 0) \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 1)
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 1)
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_compatible_LEN 2
#define DT_N_S_soc_S_spi_40013000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bus 96
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bits 4096
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, clocks, 0)
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, clocks, 0)
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40013000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Binding (compatible = arm,armv7m-systick):
 *   $ZEPHYR_BASE/dts/bindings/timer/arm,armv7m-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 75

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv7m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv7m_systick 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0 "armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, reg, 0) \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1)
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1)
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv7m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_TOKEN arm_armv7m_systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV7M_SYSTICK
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source 0
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40007c00
 *
 * Node identifier: DT_N_S_soc_S_timers_40007c00
 *
 * Binding (compatible = st,stm32-lptim):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-lptim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40007c00_PATH "/soc/timers@40007c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40007c00_FULL_NAME "timers@40007c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40007c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40007c00_CHILD_IDX 25

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40007c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40007c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40007c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40007c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40007c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40007c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40007c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40007c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40007c00_ORD 76

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40007c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40007c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40007c00_EXISTS 1
#define DT_N_INST_0_st_stm32_lptim DT_N_S_soc_S_timers_40007c00
#define DT_N_NODELABEL_lptim1      DT_N_S_soc_S_timers_40007c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40007c00_REG_NUM 1
#define DT_N_S_soc_S_timers_40007c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_REG_IDX_0_VAL_ADDRESS 1073773568 /* 0x40007c00 */
#define DT_N_S_soc_S_timers_40007c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40007c00_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40007c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40007c00_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_VAL_irq 65
#define DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_NAME_wakeup_VAL_irq DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40007c00_IRQ_NAME_wakeup_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_NAME_wakeup_VAL_priority DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40007c00_IRQ_NAME_wakeup_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_COMPAT_MATCHES_st_stm32_lptim 1
#define DT_N_S_soc_S_timers_40007c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40007c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_COMPAT_MODEL_IDX_0 "stm32-lptim"
#define DT_N_S_soc_S_timers_40007c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40007c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40007c00_P_reg {1073773568 /* 0x40007c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40007c00_P_reg_IDX_0 1073773568
#define DT_N_S_soc_S_timers_40007c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40007c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40007c00, reg, 0) \
	fn(DT_N_S_soc_S_timers_40007c00, reg, 1)
#define DT_N_S_soc_S_timers_40007c00_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40007c00, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40007c00, reg, 1)
#define DT_N_S_soc_S_timers_40007c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40007c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40007c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40007c00, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40007c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_0_VAL_bus 88
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_0_VAL_bits 2147483648
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_1_VAL_bus 3
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_1_VAL_bits 225928
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40007c00, clocks, 0) \
	fn(DT_N_S_soc_S_timers_40007c00, clocks, 1)
#define DT_N_S_soc_S_timers_40007c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40007c00, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40007c00, clocks, 1)
#define DT_N_S_soc_S_timers_40007c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40007c00, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40007c00, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40007c00, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40007c00, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_clocks_LEN 2
#define DT_N_S_soc_S_timers_40007c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupts {65 /* 0x41 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_IDX_0 65
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40007c00, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40007c00, interrupts, 1)
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40007c00, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40007c00, interrupts, 1)
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40007c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40007c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40007c00, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40007c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_status "okay"
#define DT_N_S_soc_S_timers_40007c00_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timers_40007c00_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40007c00_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timers_40007c00_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timers_40007c00_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40007c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40007c00, status, 0) \
	fn(DT_N_S_soc_S_timers_40007c00, status, 1) \
	fn(DT_N_S_soc_S_timers_40007c00, status, 2) \
	fn(DT_N_S_soc_S_timers_40007c00, status, 3)
#define DT_N_S_soc_S_timers_40007c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40007c00, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40007c00, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40007c00, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40007c00, status, 3)
#define DT_N_S_soc_S_timers_40007c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40007c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40007c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40007c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40007c00, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40007c00, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40007c00, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40007c00, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40007c00, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_compatible {"st,stm32-lptim"}
#define DT_N_S_soc_S_timers_40007c00_P_compatible_IDX_0 "st,stm32-lptim"
#define DT_N_S_soc_S_timers_40007c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_lptim
#define DT_N_S_soc_S_timers_40007c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_LPTIM
#define DT_N_S_soc_S_timers_40007c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40007c00, compatible, 0)
#define DT_N_S_soc_S_timers_40007c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40007c00, compatible, 0)
#define DT_N_S_soc_S_timers_40007c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40007c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40007c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40007c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names {"wakeup"}
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_IDX_0 "wakeup"
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_IDX_0_STRING_TOKEN wakeup
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN WAKEUP
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40007c00, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40007c00, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40007c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40007c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40007c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40002c00
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40002c00
 *
 * Binding (compatible = st,stm32-window-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/st,stm32-window-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40002c00_PATH "/soc/watchdog@40002c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40002c00_FULL_NAME "watchdog@40002c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40002c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40002c00_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40002c00_ORD 77

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40002c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40002c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40002c00_EXISTS 1
#define DT_N_INST_0_st_stm32_window_watchdog DT_N_S_soc_S_watchdog_40002c00
#define DT_N_NODELABEL_wwdg                  DT_N_S_soc_S_watchdog_40002c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40002c00_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_VAL_ADDRESS 1073753088 /* 0x40002c00 */
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40002c00_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_priority 7
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MATCHES_st_stm32_window_watchdog 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MODEL_IDX_0 "stm32-window-watchdog"
#define DT_N_S_soc_S_watchdog_40002c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40002c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40002c00_P_reg {1073753088 /* 0x40002c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_0 1073753088
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, reg, 0) \
	fn(DT_N_S_soc_S_watchdog_40002c00, reg, 1)
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40002c00, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40002c00, reg, 1)
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40002c00, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40002c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bus 88
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status "disabled"
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 1) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 2) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 3) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 4) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 5) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 6) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 7)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 7)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible {"st,stm32-window-watchdog"}
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0 "st,stm32-window-watchdog"
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_window_watchdog
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_WINDOW_WATCHDOG
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts {0 /* 0x0 */, 7 /* 0x7 */}
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_1 7
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, interrupts, 0) \
	fn(DT_N_S_soc_S_watchdog_40002c00, interrupts, 1)
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40002c00, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40002c00, interrupts, 1)
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40002c00, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40002c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40002c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40003000
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40003000
 *
 * Binding (compatible = st,stm32-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/st,stm32-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40003000_PATH "/soc/watchdog@40003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40003000_FULL_NAME "watchdog@40003000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40003000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40003000_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40003000_ORD 78

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40003000_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40003000_EXISTS 1
#define DT_N_ALIAS_watchdog0          DT_N_S_soc_S_watchdog_40003000
#define DT_N_INST_0_st_stm32_watchdog DT_N_S_soc_S_watchdog_40003000
#define DT_N_NODELABEL_iwdg           DT_N_S_soc_S_watchdog_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40003000_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40003000_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40003000_IRQ_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MATCHES_st_stm32_watchdog 1
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MODEL_IDX_0 "stm32-watchdog"
#define DT_N_S_soc_S_watchdog_40003000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40003000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40003000_P_reg {1073754112 /* 0x40003000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, reg, 0) \
	fn(DT_N_S_soc_S_watchdog_40003000, reg, 1)
#define DT_N_S_soc_S_watchdog_40003000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40003000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40003000, reg, 1)
#define DT_N_S_soc_S_watchdog_40003000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40003000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40003000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status "okay"
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, status, 0) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 1) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 2) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 3)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40003000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 3)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40003000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible {"st,stm32-watchdog"}
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0 "st,stm32-watchdog"
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_STRING_TOKEN st_stm32_watchdog
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_WATCHDOG
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40003000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000
 *
 * Binding (compatible = st,stm32-flash-controller):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/st,stm32-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_PATH "/soc/flash-controller@40022000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_FULL_NAME "flash-controller@40022000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_ORD 79

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_SUPPORTS_ORDS \
	80, /* /soc/flash-controller@40022000/flash@8000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_EXISTS 1
#define DT_N_INST_0_st_stm32_flash_controller   DT_N_S_soc_S_flash_controller_40022000
#define DT_N_INST_0_st_stm32l4_flash_controller DT_N_S_soc_S_flash_controller_40022000
#define DT_N_NODELABEL_flash                    DT_N_S_soc_S_flash_controller_40022000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_REG_IDX_0_VAL_ADDRESS 1073881088 /* 0x40022000 */
#define DT_N_S_soc_S_flash_controller_40022000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_flash_controller_40022000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MATCHES_st_stm32_flash_controller 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MODEL_IDX_0 "stm32-flash-controller"
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MATCHES_st_stm32l4_flash_controller 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MODEL_IDX_1 "stm32l4-flash-controller"
#define DT_N_S_soc_S_flash_controller_40022000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_P_reg {1073881088 /* 0x40022000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_IDX_0 1073881088
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_40022000, reg, 1)
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000, reg, 1)
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible {"st,stm32-flash-controller", "st,stm32l4-flash-controller"}
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_0 "st,stm32-flash-controller"
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_0_STRING_TOKEN st_stm32_flash_controller
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_1 "st,stm32l4-flash-controller"
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_1_STRING_TOKEN st_stm32l4_flash_controller
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32L4_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 0) \
	fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_LEN 2
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts {4 /* 0x4 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000, interrupts, 0) \
	fn(DT_N_S_soc_S_flash_controller_40022000, interrupts, 1)
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000, interrupts, 1)
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_IDX_0_VAL_bus 72
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_IDX_0_VAL_bits 256
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000, clocks, 0)
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000, clocks, 0)
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_LEN 1
#define DT_N_S_soc_S_flash_controller_40022000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40022000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000/flash@8000000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000
 *
 * Binding (compatible = st,stm32-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/st,stm32-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_PATH "/soc/flash-controller@40022000/flash@8000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FULL_NAME "flash@8000000"

/* Node parent (/soc/flash-controller@40022000) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_PARENT DT_N_S_soc_S_flash_controller_40022000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_ORD 80

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REQUIRES_ORDS \
	79, /* /soc/flash-controller@40022000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_SUPPORTS_ORDS \
	81, /* /soc/flash-controller@40022000/flash@8000000/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_EXISTS 1
#define DT_N_INST_0_st_stm32_nv_flash DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000
#define DT_N_INST_0_soc_nv_flash      DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000
#define DT_N_NODELABEL_flash0         DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REG_IDX_0_VAL_ADDRESS 134217728 /* 0x8000000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REG_IDX_0_VAL_SIZE 1048576 /* 0x100000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_MATCHES_st_stm32_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_MODEL_IDX_0 "stm32-nv-flash"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_max_erase_time 25
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_max_erase_time_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_erase_block_size 2048
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_write_block_size 8
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible {"st,stm32-nv-flash", "soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_0 "st,stm32-nv-flash"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_0_STRING_TOKEN st_stm32_nv_flash
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_NV_FLASH
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_1 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_1_STRING_TOKEN soc_nv_flash
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_1_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 0) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_LEN 2
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg {134217728 /* 0x8000000 */, 1048576 /* 0x100000 */}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_IDX_0 134217728
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_IDX_1 1048576
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, reg, 1)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, reg, 1)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000/flash@8000000/partitions
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_PATH "/soc/flash-controller@40022000/flash@8000000/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FULL_NAME "partitions"

/* Node parent (/soc/flash-controller@40022000/flash@8000000) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_PARENT DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_ORD 81

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_REQUIRES_ORDS \
	80, /* /soc/flash-controller@40022000/flash@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_SUPPORTS_ORDS \
	82, /* /soc/flash-controller@40022000/flash@8000000/partitions/partition@0 */ \
	83, /* /soc/flash-controller@40022000/flash@8000000/partitions/partition@20000 */ \
	84, /* /soc/flash-controller@40022000/flash@8000000/partitions/partition@f8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/flash-controller@40022000/flash@8000000/partitions/partition@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_PATH "/soc/flash-controller@40022000/flash@8000000/partitions/partition@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FULL_NAME "partition@0"

/* Node parent (/soc/flash-controller@40022000/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_PARENT DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_ORD 82

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_REQUIRES_ORDS \
	81, /* /soc/flash-controller@40022000/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_EXISTS 1
#define DT_N_NODELABEL_boot_partition DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label "mcuboot"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_STRING_TOKEN mcuboot
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_STRING_UPPER_TOKEN MCUBOOT
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 6)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 6)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_read_only 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_reg_IDX_1 65536
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, reg, 1)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, reg, 1)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000/flash@8000000/partitions/partition@20000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_PATH "/soc/flash-controller@40022000/flash@8000000/partitions/partition@20000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_FULL_NAME "partition@20000"

/* Node parent (/soc/flash-controller@40022000/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_PARENT DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_ORD 83

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_REQUIRES_ORDS \
	81, /* /soc/flash-controller@40022000/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_EXISTS 1
#define DT_N_NODELABEL_slot0_partition DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_REG_IDX_0_VAL_ADDRESS 131072 /* 0x20000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_REG_IDX_0_VAL_SIZE 884736 /* 0xd8000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_P_label "image-0"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_P_label_STRING_TOKEN image_0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_P_label_STRING_UPPER_TOKEN IMAGE_0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 6)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 6)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_P_reg {131072 /* 0x20000 */, 884736 /* 0xd8000 */}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_P_reg_IDX_0 131072
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_P_reg_IDX_1 884736
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, reg, 1)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, reg, 1)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000/flash@8000000/partitions/partition@f8000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_PATH "/soc/flash-controller@40022000/flash@8000000/partitions/partition@f8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_FULL_NAME "partition@f8000"

/* Node parent (/soc/flash-controller@40022000/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_PARENT DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_ORD 84

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_REQUIRES_ORDS \
	81, /* /soc/flash-controller@40022000/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_EXISTS 1
#define DT_N_NODELABEL_scratch_partition DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_REG_IDX_0_VAL_ADDRESS 1015808 /* 0xf8000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_PARTITION_ID 2

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_P_label "image-scratch"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_P_label_STRING_TOKEN image_scratch
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_P_label_STRING_UPPER_TOKEN IMAGE_SCRATCH
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 6) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 7) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 8) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 9) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 10) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 11) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 12)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 12)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 12, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, label, 12, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_P_reg {1015808 /* 0xf8000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_P_reg_IDX_0 1015808
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, reg, 1)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, reg, 1)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c2_scl_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_PATH "/soc/pin-controller@48000000/i2c2_scl_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_FULL_NAME "i2c2_scl_pb10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_ORD 85

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_SUPPORTS_ORDS \
	87, /* /soc/i2c@40005800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_EXISTS 1
#define DT_N_NODELABEL_i2c2_scl_pb10 DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_pinmux 836
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c2_sda_pb11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_PATH "/soc/pin-controller@48000000/i2c2_sda_pb11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_FULL_NAME "i2c2_sda_pb11"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_CHILD_IDX 18

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_ORD 86

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_SUPPORTS_ORDS \
	87, /* /soc/i2c@40005800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_EXISTS 1
#define DT_N_NODELABEL_i2c2_sda_pb11 DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_pinmux 868
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005800
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005800
 *
 * Binding (compatible = st,stm32-i2c-v2):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005800_PATH "/soc/i2c@40005800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005800_FULL_NAME "i2c@40005800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005800_CHILD_IDX 30

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f) fn(DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d) fn(DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a) fn(DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29)
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29)
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f) fn(DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d) fn(DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a) fn(DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29)
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29)
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005800_ORD 87

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */ \
	85, /* /soc/pin-controller@48000000/i2c2_scl_pb10 */ \
	86, /* /soc/pin-controller@48000000/i2c2_sda_pb11 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005800_SUPPORTS_ORDS \
	89, /* /soc/i2c@40005800/hts221@5f */ \
	90, /* /soc/i2c@40005800/lis3mdl-magn@1e */ \
	91, /* /soc/i2c@40005800/lps22hb-press@5d */ \
	92, /* /soc/i2c@40005800/lsm6dsl@6a */ \
	93, /* /soc/i2c@40005800/vl53l0x@29 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005800_EXISTS 1
#define DT_N_INST_2_st_stm32_i2c_v2 DT_N_S_soc_S_i2c_40005800
#define DT_N_NODELABEL_i2c2         DT_N_S_soc_S_i2c_40005800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005800_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_VAL_ADDRESS 1073764352 /* 0x40005800 */
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005800_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005800_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq 33
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq 34
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MATCHES_st_stm32_i2c_v2 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MODEL_IDX_0 "stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005800_P_reg {1073764352 /* 0x40005800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_0 1073764352
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, reg, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, reg, 1)
#define DT_N_S_soc_S_i2c_40005800_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, reg, 1)
#define DT_N_S_soc_S_i2c_40005800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts {33 /* 0x21 */, 0 /* 0x0 */, 34 /* 0x22 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_0 33
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_2 34
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 1) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 2) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 3)
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 3)
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_40005800_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_status "okay"
#define DT_N_S_soc_S_i2c_40005800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40005800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, status, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 1) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 2) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 3)
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, status, 3)
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible {"st,stm32-i2c-v2"}
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0 "st,stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_STRING_TOKEN st_stm32_i2c_v2
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_I2C_V2
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_STRING_TOKEN event
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN EVENT
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_STRING_TOKEN error
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN ERROR
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bus 88
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bits 4194304
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48000c00
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_PATH "/soc/pin-controller@48000000/gpio@48000c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FULL_NAME "gpio@48000c00"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_ORD 88

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_REQUIRES_ORDS \
	9, /* /soc/rcc@40021000 */ \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_SUPPORTS_ORDS \
	89, /* /soc/i2c@40005800/hts221@5f */ \
	92, /* /soc/i2c@40005800/lsm6dsl@6a */ \
	113, /* /soc/spi@40003c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_EXISTS 1
#define DT_N_INST_4_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00
#define DT_N_NODELABEL_gpiod      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_REG_IDX_0_VAL_ADDRESS 1207962624 /* 0x48000c00 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg {1207962624 /* 0x48000c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg_IDX_0 1207962624
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_IDX_0_VAL_bus 76
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_IDX_0_VAL_bits 8
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005800/hts221@5f
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005800_S_hts221_5f
 *
 * Binding (compatible = st,hts221):
 *   $ZEPHYR_BASE/dts/bindings/sensor/st,hts221-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_PATH "/soc/i2c@40005800/hts221@5f"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_FULL_NAME "hts221@5f"

/* Node parent (/soc/i2c@40005800) identifier: */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_PARENT DT_N_S_soc_S_i2c_40005800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_ORD 89

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_REQUIRES_ORDS \
	87, /* /soc/i2c@40005800 */ \
	88, /* /soc/pin-controller@48000000/gpio@48000c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_EXISTS 1
#define DT_N_INST_0_st_hts221 DT_N_S_soc_S_i2c_40005800_S_hts221_5f

/* Bus info (controller: '/soc/i2c@40005800', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_BUS DT_N_S_soc_S_i2c_40005800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_REG_IDX_0_VAL_ADDRESS 95 /* 0x5f */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_COMPAT_MATCHES_st_hts221 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_COMPAT_MODEL_IDX_0 "hts221"
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_reg {95 /* 0x5f */}
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_reg_IDX_0 95
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, reg, 0)
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, reg, 0)
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_compatible {"st,hts221"}
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_compatible_IDX_0 "st,hts221"
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_compatible_IDX_0_STRING_TOKEN st_hts221
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_HTS221
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_drdy_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_drdy_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_drdy_gpios_IDX_0_VAL_pin 15
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_drdy_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_drdy_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_drdy_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_drdy_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, drdy_gpios, 0)
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_drdy_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, drdy_gpios, 0)
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_drdy_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, drdy_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_drdy_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, drdy_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_drdy_gpios_LEN 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_drdy_gpios_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005800/lis3mdl-magn@1e
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e
 *
 * Binding (compatible = st,lis3mdl-magn):
 *   $ZEPHYR_BASE/dts/bindings/sensor/st,lis3mdl-magn.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_PATH "/soc/i2c@40005800/lis3mdl-magn@1e"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_FULL_NAME "lis3mdl-magn@1e"

/* Node parent (/soc/i2c@40005800) identifier: */
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_PARENT DT_N_S_soc_S_i2c_40005800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_ORD 90

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_REQUIRES_ORDS \
	87, /* /soc/i2c@40005800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_EXISTS 1
#define DT_N_INST_0_st_lis3mdl_magn DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e

/* Bus info (controller: '/soc/i2c@40005800', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_BUS DT_N_S_soc_S_i2c_40005800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_REG_IDX_0_VAL_ADDRESS 30 /* 0x1e */
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_COMPAT_MATCHES_st_lis3mdl_magn 1
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_COMPAT_MODEL_IDX_0 "lis3mdl-magn"
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_P_compatible {"st,lis3mdl-magn"}
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_P_compatible_IDX_0 "st,lis3mdl-magn"
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_P_compatible_IDX_0_STRING_TOKEN st_lis3mdl_magn
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_LIS3MDL_MAGN
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_P_reg {30 /* 0x1e */}
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_P_reg_IDX_0 30
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e, reg, 0)
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e, reg, 0)
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005800/lps22hb-press@5d
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d
 *
 * Binding (compatible = st,lps22hb-press):
 *   $ZEPHYR_BASE/dts/bindings/sensor/st,lps22hb-press.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_PATH "/soc/i2c@40005800/lps22hb-press@5d"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_FULL_NAME "lps22hb-press@5d"

/* Node parent (/soc/i2c@40005800) identifier: */
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_PARENT DT_N_S_soc_S_i2c_40005800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_ORD 91

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_REQUIRES_ORDS \
	87, /* /soc/i2c@40005800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_EXISTS 1
#define DT_N_INST_0_st_lps22hb_press DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d

/* Bus info (controller: '/soc/i2c@40005800', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_BUS DT_N_S_soc_S_i2c_40005800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_REG_IDX_0_VAL_ADDRESS 93 /* 0x5d */
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_COMPAT_MATCHES_st_lps22hb_press 1
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_COMPAT_MODEL_IDX_0 "lps22hb-press"
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_P_compatible {"st,lps22hb-press"}
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_P_compatible_IDX_0 "st,lps22hb-press"
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_P_compatible_IDX_0_STRING_TOKEN st_lps22hb_press
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_LPS22HB_PRESS
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_P_reg {93 /* 0x5d */}
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_P_reg_IDX_0 93
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d, reg, 0)
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d, reg, 0)
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005800/lsm6dsl@6a
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a
 *
 * Binding (compatible = st,lsm6dsl):
 *   $ZEPHYR_BASE/dts/bindings/sensor/st,lsm6dsl-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_PATH "/soc/i2c@40005800/lsm6dsl@6a"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_FULL_NAME "lsm6dsl@6a"

/* Node parent (/soc/i2c@40005800) identifier: */
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_PARENT DT_N_S_soc_S_i2c_40005800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_ORD 92

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_REQUIRES_ORDS \
	87, /* /soc/i2c@40005800 */ \
	88, /* /soc/pin-controller@48000000/gpio@48000c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_EXISTS 1
#define DT_N_ALIAS_accel0      DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a
#define DT_N_INST_0_st_lsm6dsl DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a
#define DT_N_NODELABEL_lsm6dsl DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a

/* Bus info (controller: '/soc/i2c@40005800', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_BUS DT_N_S_soc_S_i2c_40005800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_REG_IDX_0_VAL_ADDRESS 106 /* 0x6a */
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_COMPAT_MATCHES_st_lsm6dsl 1
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_COMPAT_MODEL_IDX_0 "lsm6dsl"
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_irq_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_irq_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_irq_gpios_IDX_0_VAL_pin 11
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_irq_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_irq_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_irq_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_irq_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a, irq_gpios, 0)
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_irq_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a, irq_gpios, 0)
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_irq_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a, irq_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_irq_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a, irq_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_irq_gpios_LEN 1
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_irq_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_compatible {"st,lsm6dsl"}
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_compatible_IDX_0 "st,lsm6dsl"
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_compatible_IDX_0_STRING_TOKEN st_lsm6dsl
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_LSM6DSL
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_reg {106 /* 0x6a */}
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_reg_IDX_0 106
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a, reg, 0)
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a, reg, 0)
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005800/vl53l0x@29
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29
 *
 * Binding (compatible = st,vl53l0x):
 *   $ZEPHYR_BASE/dts/bindings/sensor/st,vl53l0x.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_PATH "/soc/i2c@40005800/vl53l0x@29"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_FULL_NAME "vl53l0x@29"

/* Node parent (/soc/i2c@40005800) identifier: */
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_PARENT DT_N_S_soc_S_i2c_40005800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_ORD 93

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_REQUIRES_ORDS \
	20, /* /soc/pin-controller@48000000/gpio@48000800 */ \
	87, /* /soc/i2c@40005800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_EXISTS 1
#define DT_N_INST_0_st_vl53l0x DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29

/* Bus info (controller: '/soc/i2c@40005800', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_BUS DT_N_S_soc_S_i2c_40005800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_REG_IDX_0_VAL_ADDRESS 41 /* 0x29 */
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_COMPAT_MATCHES_st_vl53l0x 1
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_COMPAT_MODEL_IDX_0 "vl53l0x"
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_xshut_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_xshut_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_xshut_gpios_IDX_0_VAL_pin 6
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_xshut_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_xshut_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_xshut_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_xshut_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29, xshut_gpios, 0)
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_xshut_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29, xshut_gpios, 0)
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_xshut_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29, xshut_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_xshut_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29, xshut_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_xshut_gpios_LEN 1
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_xshut_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_compatible {"st,vl53l0x"}
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_compatible_IDX_0 "st,vl53l0x"
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_compatible_IDX_0_STRING_TOKEN st_vl53l0x
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_VL53L0X
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_reg {41 /* 0x29 */}
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_reg_IDX_0 41
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29, reg, 0)
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29, reg, 0)
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48001400
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_PATH "/soc/pin-controller@48000000/gpio@48001400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FULL_NAME "gpio@48001400"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_ORD 94

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_REQUIRES_ORDS \
	9, /* /soc/rcc@40021000 */ \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_EXISTS 1
#define DT_N_INST_6_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400
#define DT_N_NODELABEL_gpiof      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_REG_IDX_0_VAL_ADDRESS 1207964672 /* 0x48001400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_reg {1207964672 /* 0x48001400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_reg_IDX_0 1207964672
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_IDX_0_VAL_bus 76
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_IDX_0_VAL_bits 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48001800
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_PATH "/soc/pin-controller@48000000/gpio@48001800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_FULL_NAME "gpio@48001800"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_ORD 95

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_REQUIRES_ORDS \
	9, /* /soc/rcc@40021000 */ \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_EXISTS 1
#define DT_N_INST_7_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800
#define DT_N_NODELABEL_gpiog      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_REG_IDX_0_VAL_ADDRESS 1207965696 /* 0x48001800 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_reg {1207965696 /* 0x48001800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_reg_IDX_0 1207965696
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_clocks_IDX_0_VAL_bus 76
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_clocks_IDX_0_VAL_bits 64
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48001c00
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_PATH "/soc/pin-controller@48000000/gpio@48001c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_FULL_NAME "gpio@48001c00"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_ORD 96

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_REQUIRES_ORDS \
	9, /* /soc/rcc@40021000 */ \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_EXISTS 1
#define DT_N_INST_3_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00
#define DT_N_NODELABEL_gpioh      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_REG_IDX_0_VAL_ADDRESS 1207966720 /* 0x48001c00 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_reg {1207966720 /* 0x48001c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_reg_IDX_0 1207966720
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_IDX_0_VAL_bus 76
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_IDX_0_VAL_bits 128
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/dma@40020000
 *
 * Node identifier: DT_N_S_soc_S_dma_40020000
 *
 * Binding (compatible = st,stm32-dma-v2):
 *   $ZEPHYR_BASE/dts/bindings/dma/st,stm32-dma-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_40020000_PATH "/soc/dma@40020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_40020000_FULL_NAME "dma@40020000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_40020000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dma_40020000_CHILD_IDX 23

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_40020000_ORD 97

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_40020000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_40020000_SUPPORTS_ORDS \
	104, /* /soc/quadspi@a0001000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_40020000_EXISTS 1
#define DT_N_INST_0_st_stm32_dma_v2 DT_N_S_soc_S_dma_40020000
#define DT_N_NODELABEL_dma1         DT_N_S_soc_S_dma_40020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_40020000_REG_NUM 1
#define DT_N_S_soc_S_dma_40020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_REG_IDX_0_VAL_ADDRESS 1073872896 /* 0x40020000 */
#define DT_N_S_soc_S_dma_40020000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dma_40020000_RANGES_NUM 0
#define DT_N_S_soc_S_dma_40020000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dma_40020000_IRQ_NUM 7
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_irq 12
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_irq 13
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_irq 14
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_irq 15
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_VAL_irq 16
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_VAL_irq 17
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_COMPAT_MATCHES_st_stm32_dma_v2 1
#define DT_N_S_soc_S_dma_40020000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_dma_40020000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_COMPAT_MODEL_IDX_0 "stm32-dma-v2"
#define DT_N_S_soc_S_dma_40020000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_40020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_40020000_P_reg {1073872896 /* 0x40020000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_0 1073872896
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020000, reg, 0) \
	fn(DT_N_S_soc_S_dma_40020000, reg, 1)
#define DT_N_S_soc_S_dma_40020000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40020000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, reg, 1)
#define DT_N_S_soc_S_dma_40020000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40020000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts {11 /* 0xb */, 0 /* 0x0 */, 12 /* 0xc */, 0 /* 0x0 */, 13 /* 0xd */, 0 /* 0x0 */, 14 /* 0xe */, 0 /* 0x0 */, 15 /* 0xf */, 0 /* 0x0 */, 16 /* 0x10 */, 0 /* 0x0 */, 17 /* 0x11 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_2 12
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_4 13
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_6 14
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_8 15
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_10 16
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_12 17
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020000, interrupts, 0) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 1) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 2) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 3) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 4) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 5) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 6) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 7) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 8) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 9) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 10) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 11) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 12) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 13)
#define DT_N_S_soc_S_dma_40020000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40020000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 13)
#define DT_N_S_soc_S_dma_40020000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 13, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40020000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 13, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_st_mem2mem 0
#define DT_N_S_soc_S_dma_40020000_P_st_mem2mem_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_dma_requests 7
#define DT_N_S_soc_S_dma_40020000_P_dma_requests_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_status "okay"
#define DT_N_S_soc_S_dma_40020000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_dma_40020000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_dma_40020000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_dma_40020000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_dma_40020000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_dma_40020000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020000, status, 0) \
	fn(DT_N_S_soc_S_dma_40020000, status, 1) \
	fn(DT_N_S_soc_S_dma_40020000, status, 2) \
	fn(DT_N_S_soc_S_dma_40020000, status, 3)
#define DT_N_S_soc_S_dma_40020000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40020000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, status, 3)
#define DT_N_S_soc_S_dma_40020000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40020000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_40020000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_compatible {"st,stm32-dma-v2"}
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0 "st,stm32-dma-v2"
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0_STRING_TOKEN st_stm32_dma_v2
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_DMA_V2
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020000, compatible, 0)
#define DT_N_S_soc_S_dma_40020000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40020000, compatible, 0)
#define DT_N_S_soc_S_dma_40020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_40020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bus 72
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020000, clocks, 0)
#define DT_N_S_soc_S_dma_40020000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40020000, clocks, 0)
#define DT_N_S_soc_S_dma_40020000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40020000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_wakeup_source 0
#define DT_N_S_soc_S_dma_40020000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/quadspi_bk1_io0_pe12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_PATH "/soc/pin-controller@48000000/quadspi_bk1_io0_pe12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_FULL_NAME "quadspi_bk1_io0_pe12"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_CHILD_IDX 22

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_ORD 98

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_SUPPORTS_ORDS \
	104, /* /soc/quadspi@a0001000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_EXISTS 1
#define DT_N_NODELABEL_quadspi_bk1_io0_pe12 DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_pinmux 2442
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/quadspi_bk1_io1_pe13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_PATH "/soc/pin-controller@48000000/quadspi_bk1_io1_pe13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_FULL_NAME "quadspi_bk1_io1_pe13"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_CHILD_IDX 23

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_ORD 99

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_SUPPORTS_ORDS \
	104, /* /soc/quadspi@a0001000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_EXISTS 1
#define DT_N_NODELABEL_quadspi_bk1_io1_pe13 DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_pinmux 2474
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/quadspi_bk1_io2_pe14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_PATH "/soc/pin-controller@48000000/quadspi_bk1_io2_pe14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_FULL_NAME "quadspi_bk1_io2_pe14"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_CHILD_IDX 24

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_ORD 100

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_SUPPORTS_ORDS \
	104, /* /soc/quadspi@a0001000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_EXISTS 1
#define DT_N_NODELABEL_quadspi_bk1_io2_pe14 DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_pinmux 2506
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/quadspi_bk1_io3_pe15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_PATH "/soc/pin-controller@48000000/quadspi_bk1_io3_pe15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_FULL_NAME "quadspi_bk1_io3_pe15"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_CHILD_IDX 25

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_ORD 101

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_SUPPORTS_ORDS \
	104, /* /soc/quadspi@a0001000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_EXISTS 1
#define DT_N_NODELABEL_quadspi_bk1_io3_pe15 DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_pinmux 2538
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/quadspi_clk_pe10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_PATH "/soc/pin-controller@48000000/quadspi_clk_pe10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_FULL_NAME "quadspi_clk_pe10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_CHILD_IDX 20

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_ORD 102

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_SUPPORTS_ORDS \
	104, /* /soc/quadspi@a0001000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_EXISTS 1
#define DT_N_NODELABEL_quadspi_clk_pe10 DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_pinmux 2378
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/quadspi_ncs_pe11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_PATH "/soc/pin-controller@48000000/quadspi_ncs_pe11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_FULL_NAME "quadspi_ncs_pe11"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_CHILD_IDX 21

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_ORD 103

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_SUPPORTS_ORDS \
	104, /* /soc/quadspi@a0001000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_EXISTS 1
#define DT_N_NODELABEL_quadspi_ncs_pe11 DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_pinmux 2410
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/quadspi@a0001000
 *
 * Node identifier: DT_N_S_soc_S_quadspi_a0001000
 *
 * Binding (compatible = st,stm32-qspi):
 *   $ZEPHYR_BASE/dts/bindings/qspi/st,stm32-qspi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_quadspi_a0001000_PATH "/soc/quadspi@a0001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_quadspi_a0001000_FULL_NAME "quadspi@a0001000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_quadspi_a0001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_quadspi_a0001000_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_quadspi_a0001000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0)
#define DT_N_S_soc_S_quadspi_a0001000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0)
#define DT_N_S_soc_S_quadspi_a0001000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0)
#define DT_N_S_soc_S_quadspi_a0001000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0)
#define DT_N_S_soc_S_quadspi_a0001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_quadspi_a0001000_ORD 104

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_quadspi_a0001000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */ \
	97, /* /soc/dma@40020000 */ \
	98, /* /soc/pin-controller@48000000/quadspi_bk1_io0_pe12 */ \
	99, /* /soc/pin-controller@48000000/quadspi_bk1_io1_pe13 */ \
	100, /* /soc/pin-controller@48000000/quadspi_bk1_io2_pe14 */ \
	101, /* /soc/pin-controller@48000000/quadspi_bk1_io3_pe15 */ \
	102, /* /soc/pin-controller@48000000/quadspi_clk_pe10 */ \
	103, /* /soc/pin-controller@48000000/quadspi_ncs_pe11 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_quadspi_a0001000_SUPPORTS_ORDS \
	105, /* /soc/quadspi@a0001000/qspi-nor-flash@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_quadspi_a0001000_EXISTS 1
#define DT_N_INST_0_st_stm32_qspi DT_N_S_soc_S_quadspi_a0001000
#define DT_N_NODELABEL_quadspi    DT_N_S_soc_S_quadspi_a0001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_quadspi_a0001000_REG_NUM 1
#define DT_N_S_soc_S_quadspi_a0001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_REG_IDX_0_VAL_ADDRESS 2684358656 /* 0xa0001000 */
#define DT_N_S_soc_S_quadspi_a0001000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_quadspi_a0001000_RANGES_NUM 0
#define DT_N_S_soc_S_quadspi_a0001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_quadspi_a0001000_IRQ_NUM 1
#define DT_N_S_soc_S_quadspi_a0001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_IRQ_IDX_0_VAL_irq 71
#define DT_N_S_soc_S_quadspi_a0001000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_quadspi_a0001000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_COMPAT_MATCHES_st_stm32_qspi 1
#define DT_N_S_soc_S_quadspi_a0001000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_quadspi_a0001000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_COMPAT_MODEL_IDX_0 "stm32-qspi"
#define DT_N_S_soc_S_quadspi_a0001000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_quadspi_a0001000_PINCTRL_NUM 1
#define DT_N_S_soc_S_quadspi_a0001000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_quadspi_a0001000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_quadspi_a0001000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_quadspi_a0001000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10
#define DT_N_S_soc_S_quadspi_a0001000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11
#define DT_N_S_soc_S_quadspi_a0001000_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12
#define DT_N_S_soc_S_quadspi_a0001000_PINCTRL_NAME_default_IDX_3_PH DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13
#define DT_N_S_soc_S_quadspi_a0001000_PINCTRL_NAME_default_IDX_4_PH DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14
#define DT_N_S_soc_S_quadspi_a0001000_PINCTRL_NAME_default_IDX_5_PH DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15

/* Generic property macros: */
#define DT_N_S_soc_S_quadspi_a0001000_P_reg {2684358656 /* 0xa0001000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_quadspi_a0001000_P_reg_IDX_0 2684358656
#define DT_N_S_soc_S_quadspi_a0001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_quadspi_a0001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_quadspi_a0001000, reg, 0) \
	fn(DT_N_S_soc_S_quadspi_a0001000, reg, 1)
#define DT_N_S_soc_S_quadspi_a0001000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_quadspi_a0001000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000, reg, 1)
#define DT_N_S_soc_S_quadspi_a0001000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_quadspi_a0001000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_interrupts {71 /* 0x47 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_quadspi_a0001000_P_interrupts_IDX_0 71
#define DT_N_S_soc_S_quadspi_a0001000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_quadspi_a0001000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_quadspi_a0001000, interrupts, 0) \
	fn(DT_N_S_soc_S_quadspi_a0001000, interrupts, 1)
#define DT_N_S_soc_S_quadspi_a0001000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_quadspi_a0001000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000, interrupts, 1)
#define DT_N_S_soc_S_quadspi_a0001000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_quadspi_a0001000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_0_IDX_3 DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_0_IDX_3_PH DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_0_IDX_3_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_0_IDX_4 DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_0_IDX_4_PH DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_0_IDX_4_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_0_IDX_5 DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_0_IDX_5_PH DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_0_IDX_5_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_0, 2) \
	fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_0, 3) \
	fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_0, 4) \
	fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_0, 5)
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_0, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_0, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_0, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_0, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_0, 5)
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_0, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_0, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_0, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_0, 5, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_0, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_0, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_0, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_0, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_0, 5, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_0_LEN 6
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_names, 0)
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_names, 0)
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_quadspi_a0001000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_quadspi_a0001000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_40020000
#define DT_N_S_soc_S_quadspi_a0001000_P_dmas_IDX_0_VAL_channel 5
#define DT_N_S_soc_S_quadspi_a0001000_P_dmas_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_dmas_IDX_0_VAL_slot 5
#define DT_N_S_soc_S_quadspi_a0001000_P_dmas_IDX_0_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_dmas_IDX_0_VAL_channel_config 0
#define DT_N_S_soc_S_quadspi_a0001000_P_dmas_IDX_0_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_dmas_IDX_0_NAME "tx_rx"
#define DT_N_S_soc_S_quadspi_a0001000_P_dmas_NAME_tx_rx_PH DT_N_S_soc_S_dma_40020000
#define DT_N_S_soc_S_quadspi_a0001000_P_dmas_NAME_tx_rx_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_dmas_NAME_tx_rx_VAL_channel DT_N_S_soc_S_quadspi_a0001000_P_dmas_IDX_0_VAL_channel
#define DT_N_S_soc_S_quadspi_a0001000_P_dmas_NAME_tx_rx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_dmas_NAME_tx_rx_VAL_slot DT_N_S_soc_S_quadspi_a0001000_P_dmas_IDX_0_VAL_slot
#define DT_N_S_soc_S_quadspi_a0001000_P_dmas_NAME_tx_rx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_dmas_NAME_tx_rx_VAL_channel_config DT_N_S_soc_S_quadspi_a0001000_P_dmas_IDX_0_VAL_channel_config
#define DT_N_S_soc_S_quadspi_a0001000_P_dmas_NAME_tx_rx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_quadspi_a0001000, dmas, 0)
#define DT_N_S_soc_S_quadspi_a0001000_P_dmas_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_quadspi_a0001000, dmas, 0)
#define DT_N_S_soc_S_quadspi_a0001000_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000, dmas, 0, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_P_dmas_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_quadspi_a0001000, dmas, 0, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_P_dmas_LEN 1
#define DT_N_S_soc_S_quadspi_a0001000_P_dmas_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_dma_names {"tx_rx"}
#define DT_N_S_soc_S_quadspi_a0001000_P_dma_names_IDX_0 "tx_rx"
#define DT_N_S_soc_S_quadspi_a0001000_P_dma_names_IDX_0_STRING_TOKEN tx_rx
#define DT_N_S_soc_S_quadspi_a0001000_P_dma_names_IDX_0_STRING_UPPER_TOKEN TX_RX
#define DT_N_S_soc_S_quadspi_a0001000_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_quadspi_a0001000, dma_names, 0)
#define DT_N_S_soc_S_quadspi_a0001000_P_dma_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_quadspi_a0001000, dma_names, 0)
#define DT_N_S_soc_S_quadspi_a0001000_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000, dma_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_P_dma_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_quadspi_a0001000, dma_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_P_dma_names_LEN 1
#define DT_N_S_soc_S_quadspi_a0001000_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_status "okay"
#define DT_N_S_soc_S_quadspi_a0001000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_quadspi_a0001000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_quadspi_a0001000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_quadspi_a0001000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_quadspi_a0001000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_quadspi_a0001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_quadspi_a0001000, status, 0) \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 1) \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 2) \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 3)
#define DT_N_S_soc_S_quadspi_a0001000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_quadspi_a0001000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 3)
#define DT_N_S_soc_S_quadspi_a0001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_quadspi_a0001000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_P_status_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_compatible {"st,stm32-qspi"}
#define DT_N_S_soc_S_quadspi_a0001000_P_compatible_IDX_0 "st,stm32-qspi"
#define DT_N_S_soc_S_quadspi_a0001000_P_compatible_IDX_0_STRING_TOKEN st_stm32_qspi
#define DT_N_S_soc_S_quadspi_a0001000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_QSPI
#define DT_N_S_soc_S_quadspi_a0001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_quadspi_a0001000, compatible, 0)
#define DT_N_S_soc_S_quadspi_a0001000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_quadspi_a0001000, compatible, 0)
#define DT_N_S_soc_S_quadspi_a0001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_quadspi_a0001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_P_compatible_LEN 1
#define DT_N_S_soc_S_quadspi_a0001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_quadspi_a0001000_P_clocks_IDX_0_VAL_bus 80
#define DT_N_S_soc_S_quadspi_a0001000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_clocks_IDX_0_VAL_bits 256
#define DT_N_S_soc_S_quadspi_a0001000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_quadspi_a0001000, clocks, 0)
#define DT_N_S_soc_S_quadspi_a0001000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_quadspi_a0001000, clocks, 0)
#define DT_N_S_soc_S_quadspi_a0001000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_quadspi_a0001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_P_clocks_LEN 1
#define DT_N_S_soc_S_quadspi_a0001000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_wakeup_source 0
#define DT_N_S_soc_S_quadspi_a0001000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/quadspi@a0001000/qspi-nor-flash@0
 *
 * Node identifier: DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0
 *
 * Binding (compatible = st,stm32-qspi-nor):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/st,stm32-qspi-nor.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_PATH "/soc/quadspi@a0001000/qspi-nor-flash@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_FULL_NAME "qspi-nor-flash@0"

/* Node parent (/soc/quadspi@a0001000) identifier: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_PARENT DT_N_S_soc_S_quadspi_a0001000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_ORD 105

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_REQUIRES_ORDS \
	104, /* /soc/quadspi@a0001000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_SUPPORTS_ORDS \
	106, /* /soc/quadspi@a0001000/qspi-nor-flash@0/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_EXISTS 1
#define DT_N_ALIAS_spi_flash0         DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0
#define DT_N_INST_0_st_stm32_qspi_nor DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0
#define DT_N_NODELABEL_mx25r6435f     DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0

/* Bus info (controller: '/soc/quadspi@a0001000', type: '['qspi']') */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_BUS_qspi 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_BUS DT_N_S_soc_S_quadspi_a0001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_REG_NUM 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_RANGES_NUM 0
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_IRQ_NUM 0
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_COMPAT_MATCHES_st_stm32_qspi_nor 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_COMPAT_MODEL_IDX_0 "stm32-qspi-nor"
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, reg, 0)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, reg, 0)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_qspi_max_frequency 50000000
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_qspi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_size 67108864
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_size_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_reset_cmd 0
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_reset_cmd_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_reset_cmd_wait 10
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_reset_cmd_wait_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_status "okay"
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, status, 0) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, status, 1) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, status, 2) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, status, 3)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, status, 3)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_status_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_compatible {"st,stm32-qspi-nor"}
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_compatible_IDX_0 "st,stm32-qspi-nor"
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_compatible_IDX_0_STRING_TOKEN st_stm32_qspi_nor
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_QSPI_NOR
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, compatible, 0)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, compatible, 0)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_compatible_LEN 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_wakeup_source 0
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/quadspi@a0001000/qspi-nor-flash@0/partitions
 *
 * Node identifier: DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_PATH "/soc/quadspi@a0001000/qspi-nor-flash@0/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_FULL_NAME "partitions"

/* Node parent (/soc/quadspi@a0001000/qspi-nor-flash@0) identifier: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_PARENT DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_ORD 106

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_REQUIRES_ORDS \
	105, /* /soc/quadspi@a0001000/qspi-nor-flash@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_SUPPORTS_ORDS \
	107, /* /soc/quadspi@a0001000/qspi-nor-flash@0/partitions/partition@0 */ \
	108, /* /soc/quadspi@a0001000/qspi-nor-flash@0/partitions/partition@d8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_EXISTS 1
#define DT_N_INST_1_fixed_partitions DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/quadspi@a0001000/qspi-nor-flash@0/partitions/partition@0
 *
 * Node identifier: DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_PATH "/soc/quadspi@a0001000/qspi-nor-flash@0/partitions/partition@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_FULL_NAME "partition@0"

/* Node parent (/soc/quadspi@a0001000/qspi-nor-flash@0/partitions) identifier: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_PARENT DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_ORD 107

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_REQUIRES_ORDS \
	106, /* /soc/quadspi@a0001000/qspi-nor-flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_EXISTS 1
#define DT_N_NODELABEL_slot1_partition DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 884736 /* 0xd8000 */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_RANGES_NUM 0
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_PARTITION_ID 3

/* Generic property macros: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_P_label "image-1"
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_P_label_STRING_TOKEN image_1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_P_label_STRING_UPPER_TOKEN IMAGE_1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 0) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 1) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 2) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 3) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 4) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 5) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 6)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 6)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_P_label_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_P_read_only 0
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 884736 /* 0xd8000 */}
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_P_reg_IDX_1 884736
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, reg, 0) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, reg, 1)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, reg, 1)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/quadspi@a0001000/qspi-nor-flash@0/partitions/partition@d8000
 *
 * Node identifier: DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_PATH "/soc/quadspi@a0001000/qspi-nor-flash@0/partitions/partition@d8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_FULL_NAME "partition@d8000"

/* Node parent (/soc/quadspi@a0001000/qspi-nor-flash@0/partitions) identifier: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_PARENT DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_ORD 108

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_REQUIRES_ORDS \
	106, /* /soc/quadspi@a0001000/qspi-nor-flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_EXISTS 1
#define DT_N_NODELABEL_storage_partition DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_REG_NUM 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_REG_IDX_0_VAL_ADDRESS 884736 /* 0xd8000 */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_REG_IDX_0_VAL_SIZE 7340032 /* 0x700000 */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_RANGES_NUM 0
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_IRQ_NUM 0
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_PARTITION_ID 4

/* Generic property macros: */
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_P_label "storage"
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_P_label_STRING_TOKEN storage
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_P_label_STRING_UPPER_TOKEN STORAGE
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 0) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 1) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 2) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 3) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 4) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 5) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 6)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 6)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_P_label_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_P_read_only 0
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_P_reg {884736 /* 0xd8000 */, 7340032 /* 0x700000 */}
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_P_reg_IDX_0 884736
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_P_reg_IDX_1 7340032
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, reg, 0) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, reg, 1)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, reg, 1)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48001000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_PATH "/soc/pin-controller@48000000/gpio@48001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FULL_NAME "gpio@48001000"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_ORD 109

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_REQUIRES_ORDS \
	9, /* /soc/rcc@40021000 */ \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_SUPPORTS_ORDS \
	113, /* /soc/spi@40003c00 */ \
	114, /* /soc/spi@40003c00/ism43362@1 */ \
	115, /* /soc/spi@40003c00/spbtle-rf@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_EXISTS 1
#define DT_N_INST_5_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000
#define DT_N_NODELABEL_gpioe      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_REG_IDX_0_VAL_ADDRESS 1207963648 /* 0x48001000 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg {1207963648 /* 0x48001000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg_IDX_0 1207963648
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_IDX_0_VAL_bus 76
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_IDX_0_VAL_bits 16
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi3_miso_pc11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_PATH "/soc/pin-controller@48000000/spi3_miso_pc11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_FULL_NAME "spi3_miso_pc11"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_CHILD_IDX 27

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_ORD 110

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_SUPPORTS_ORDS \
	113, /* /soc/spi@40003c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_EXISTS 1
#define DT_N_NODELABEL_spi3_miso_pc11 DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_pinmux 1382
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi3_mosi_pc12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_PATH "/soc/pin-controller@48000000/spi3_mosi_pc12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_FULL_NAME "spi3_mosi_pc12"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_CHILD_IDX 29

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_ORD 111

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_SUPPORTS_ORDS \
	113, /* /soc/spi@40003c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_EXISTS 1
#define DT_N_NODELABEL_spi3_mosi_pc12 DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_pinmux 1414
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi3_sck_pc10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_PATH "/soc/pin-controller@48000000/spi3_sck_pc10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_FULL_NAME "spi3_sck_pc10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_CHILD_IDX 31

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_ORD 112

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_SUPPORTS_ORDS \
	113, /* /soc/spi@40003c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_EXISTS 1
#define DT_N_NODELABEL_spi3_sck_pc10 DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_pinmux 1350
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003c00
 *
 * Node identifier: DT_N_S_soc_S_spi_40003c00
 *
 * Binding (compatible = st,stm32-spi-fifo):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi-fifo.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003c00_PATH "/soc/spi@40003c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003c00_FULL_NAME "spi@40003c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003c00_CHILD_IDX 32

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1)
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1)
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1)
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1)
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003c00_ORD 113

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */ \
	88, /* /soc/pin-controller@48000000/gpio@48000c00 */ \
	109, /* /soc/pin-controller@48000000/gpio@48001000 */ \
	110, /* /soc/pin-controller@48000000/spi3_miso_pc11 */ \
	111, /* /soc/pin-controller@48000000/spi3_mosi_pc12 */ \
	112, /* /soc/pin-controller@48000000/spi3_sck_pc10 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003c00_SUPPORTS_ORDS \
	114, /* /soc/spi@40003c00/ism43362@1 */ \
	115, /* /soc/spi@40003c00/spbtle-rf@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003c00_EXISTS 1
#define DT_N_INST_1_st_stm32_spi_fifo DT_N_S_soc_S_spi_40003c00
#define DT_N_INST_1_st_stm32_spi      DT_N_S_soc_S_spi_40003c00
#define DT_N_NODELABEL_spi3           DT_N_S_soc_S_spi_40003c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003c00_REG_NUM 1
#define DT_N_S_soc_S_spi_40003c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_REG_IDX_0_VAL_ADDRESS 1073757184 /* 0x40003c00 */
#define DT_N_S_soc_S_spi_40003c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40003c00_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003c00_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_irq 51
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MODEL_IDX_0 "stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MODEL_IDX_1 "stm32-spi"
#define DT_N_S_soc_S_spi_40003c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003c00_PINCTRL_NUM 1
#define DT_N_S_soc_S_spi_40003c00_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_40003c00_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40003c00_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_40003c00_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10
#define DT_N_S_soc_S_spi_40003c00_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11
#define DT_N_S_soc_S_spi_40003c00_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003c00_P_reg {1073757184 /* 0x40003c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_0 1073757184
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, reg, 0) \
	fn(DT_N_S_soc_S_spi_40003c00, reg, 1)
#define DT_N_S_soc_S_spi_40003c00_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, reg, 1)
#define DT_N_S_soc_S_spi_40003c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_interrupts {51 /* 0x33 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_0 51
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40003c00, interrupts, 1)
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, interrupts, 1)
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_spi_40003c00, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_spi_40003c00, pinctrl_0, 2)
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, pinctrl_0, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, pinctrl_0, 2)
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, pinctrl_0, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, pinctrl_0, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, pinctrl_0, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_0_LEN 3
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_spi_40003c00_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_cs_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_cs_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00
#define DT_N_S_soc_S_spi_40003c00_P_cs_gpios_IDX_0_VAL_pin 13
#define DT_N_S_soc_S_spi_40003c00_P_cs_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_cs_gpios_IDX_0_VAL_flags 17
#define DT_N_S_soc_S_spi_40003c00_P_cs_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_cs_gpios_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_cs_gpios_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000
#define DT_N_S_soc_S_spi_40003c00_P_cs_gpios_IDX_1_VAL_pin 0
#define DT_N_S_soc_S_spi_40003c00_P_cs_gpios_IDX_1_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_cs_gpios_IDX_1_VAL_flags 1
#define DT_N_S_soc_S_spi_40003c00_P_cs_gpios_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_cs_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, cs_gpios, 0) \
	fn(DT_N_S_soc_S_spi_40003c00, cs_gpios, 1)
#define DT_N_S_soc_S_spi_40003c00_P_cs_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00, cs_gpios, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, cs_gpios, 1)
#define DT_N_S_soc_S_spi_40003c00_P_cs_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, cs_gpios, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, cs_gpios, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_cs_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00, cs_gpios, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, cs_gpios, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_cs_gpios_LEN 2
#define DT_N_S_soc_S_spi_40003c00_P_cs_gpios_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_status "okay"
#define DT_N_S_soc_S_spi_40003c00_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40003c00_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003c00_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40003c00_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40003c00_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, status, 0) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 1) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 2) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 3)
#define DT_N_S_soc_S_spi_40003c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, status, 3)
#define DT_N_S_soc_S_spi_40003c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_compatible {"st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_spi_fifo
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SPI_FIFO
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_1 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_1_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, compatible, 0) \
	fn(DT_N_S_soc_S_spi_40003c00, compatible, 1)
#define DT_N_S_soc_S_spi_40003c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, compatible, 1)
#define DT_N_S_soc_S_spi_40003c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_compatible_LEN 2
#define DT_N_S_soc_S_spi_40003c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bus 88
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bits 32768
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, clocks, 0)
#define DT_N_S_soc_S_spi_40003c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00, clocks, 0)
#define DT_N_S_soc_S_spi_40003c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003c00/ism43362@1
 *
 * Node identifier: DT_N_S_soc_S_spi_40003c00_S_ism43362_1
 *
 * Binding (compatible = inventek,eswifi):
 *   $ZEPHYR_BASE/dts/bindings/wifi/inventek,eswifi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_PATH "/soc/spi@40003c00/ism43362@1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_FULL_NAME "ism43362@1"

/* Node parent (/soc/spi@40003c00) identifier: */
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_PARENT DT_N_S_soc_S_spi_40003c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_ORD 114

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_REQUIRES_ORDS \
	19, /* /soc/pin-controller@48000000/gpio@48000400 */ \
	109, /* /soc/pin-controller@48000000/gpio@48001000 */ \
	113, /* /soc/spi@40003c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_EXISTS 1
#define DT_N_ALIAS_eswifi0          DT_N_S_soc_S_spi_40003c00_S_ism43362_1
#define DT_N_INST_0_inventek_eswifi DT_N_S_soc_S_spi_40003c00_S_ism43362_1
#define DT_N_NODELABEL_wifi0        DT_N_S_soc_S_spi_40003c00_S_ism43362_1

/* Bus info (controller: '/soc/spi@40003c00', type: '['spi']') */
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_BUS_spi 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_BUS DT_N_S_soc_S_spi_40003c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_REG_NUM 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_REG_IDX_0_VAL_ADDRESS 1 /* 0x1 */
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_COMPAT_MATCHES_inventek_eswifi 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_COMPAT_VENDOR_IDX_0 "Inventek Systems"
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_COMPAT_MODEL_IDX_0 "eswifi"
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_resetn_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_resetn_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_resetn_gpios_IDX_0_VAL_pin 8
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_resetn_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_resetn_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_resetn_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_resetn_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, resetn_gpios, 0)
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_resetn_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, resetn_gpios, 0)
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_resetn_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, resetn_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_resetn_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, resetn_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_resetn_gpios_LEN 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_resetn_gpios_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_data_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_data_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_data_gpios_IDX_0_VAL_pin 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_data_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_data_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_data_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_data_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, data_gpios, 0)
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_data_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, data_gpios, 0)
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_data_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, data_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_data_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, data_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_data_gpios_LEN 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_data_gpios_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_wakeup_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_wakeup_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_wakeup_gpios_IDX_0_VAL_pin 13
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_wakeup_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_wakeup_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_wakeup_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_wakeup_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, wakeup_gpios, 0)
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_wakeup_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, wakeup_gpios, 0)
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_wakeup_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, wakeup_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_wakeup_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, wakeup_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_wakeup_gpios_LEN 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_wakeup_gpios_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_boot0_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_boot0_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_boot0_gpios_IDX_0_VAL_pin 12
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_boot0_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_boot0_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_boot0_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_boot0_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, boot0_gpios, 0)
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_boot0_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, boot0_gpios, 0)
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_boot0_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, boot0_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_boot0_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, boot0_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_boot0_gpios_LEN 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_boot0_gpios_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_reg {1 /* 0x1 */}
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_reg_IDX_0 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, reg, 0)
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, reg, 0)
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_spi_max_frequency 2000000
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_duplex 0
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_duplex_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_frame_format 0
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_frame_format_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_compatible {"inventek,eswifi"}
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_compatible_IDX_0 "inventek,eswifi"
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_compatible_IDX_0_STRING_TOKEN inventek_eswifi
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_compatible_IDX_0_STRING_UPPER_TOKEN INVENTEK_ESWIFI
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, compatible, 0)
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, compatible, 0)
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003c00_S_ism43362_1_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003c00/spbtle-rf@0
 *
 * Node identifier: DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0
 *
 * Binding (compatible = zephyr,bt-hci-spi):
 *   $ZEPHYR_BASE/dts/bindings/bluetooth/zephyr,bt-hci-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_PATH "/soc/spi@40003c00/spbtle-rf@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_FULL_NAME "spbtle-rf@0"

/* Node parent (/soc/spi@40003c00) identifier: */
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_PARENT DT_N_S_soc_S_spi_40003c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_ORD 115

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_REQUIRES_ORDS \
	18, /* /soc/pin-controller@48000000/gpio@48000000 */ \
	109, /* /soc/pin-controller@48000000/gpio@48001000 */ \
	113, /* /soc/spi@40003c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_EXISTS 1
#define DT_N_INST_0_zephyr_bt_hci_spi DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0

/* Bus info (controller: '/soc/spi@40003c00', type: '['spi']') */
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_BUS_spi 1
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_BUS DT_N_S_soc_S_spi_40003c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_REG_NUM 1
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_COMPAT_MATCHES_zephyr_bt_hci_spi 1
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_COMPAT_MODEL_IDX_0 "bt-hci-spi"
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_irq_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_irq_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_irq_gpios_IDX_0_VAL_pin 6
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_irq_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_irq_gpios_IDX_0_VAL_flags 32
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_irq_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_irq_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0, irq_gpios, 0)
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_irq_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0, irq_gpios, 0)
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_irq_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0, irq_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_irq_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0, irq_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_irq_gpios_LEN 1
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_irq_gpios_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_reset_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_reset_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_reset_gpios_IDX_0_VAL_pin 8
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_reset_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_reset_gpios_IDX_0_VAL_flags 17
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_reset_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_reset_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0, reset_gpios, 0)
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_reset_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0, reset_gpios, 0)
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_reset_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0, reset_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_reset_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0, reset_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_reset_gpios_LEN 1
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_reset_gpios_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0, reg, 0)
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0, reg, 0)
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_spi_max_frequency 2000000
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_duplex 0
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_duplex_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_frame_format 0
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_frame_format_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_compatible {"zephyr,bt-hci-spi"}
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_compatible_IDX_0 "zephyr,bt-hci-spi"
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_compatible_IDX_0_STRING_TOKEN zephyr_bt_hci_spi
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_BT_HCI_SPI
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0, compatible, 0)
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0, compatible, 0)
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_PATH "/soc/timers@40000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_FULL_NAME "timers@40000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000000_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm) fn(DT_N_S_soc_S_timers_40000000_S_counter)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000000_S_counter)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_pwm)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_ORD 116

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_SUPPORTS_ORDS \
	117, /* /soc/timers@40000000/counter */ \
	119, /* /soc/timers@40000000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_EXISTS 1
#define DT_N_INST_0_st_stm32_timers DT_N_S_soc_S_timers_40000000
#define DT_N_NODELABEL_timers2      DT_N_S_soc_S_timers_40000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000000_REG_NUM 1
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_VAL_ADDRESS 1073741824 /* 0x40000000 */
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq 28
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_P_reg {1073741824 /* 0x40000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_0 1073741824
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, reg, 0) \
	fn(DT_N_S_soc_S_timers_40000000, reg, 1)
#define DT_N_S_soc_S_timers_40000000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000, reg, 1)
#define DT_N_S_soc_S_timers_40000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bus 88
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, clocks, 0)
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, clocks, 0)
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts {28 /* 0x1c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_0 28
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40000000, interrupts, 1)
#define DT_N_S_soc_S_timers_40000000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000, interrupts, 1)
#define DT_N_S_soc_S_timers_40000000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40000000_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40000000_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_status "okay"
#define DT_N_S_soc_S_timers_40000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timers_40000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, status, 0) \
	fn(DT_N_S_soc_S_timers_40000000, status, 1) \
	fn(DT_N_S_soc_S_timers_40000000, status, 2) \
	fn(DT_N_S_soc_S_timers_40000000, status, 3)
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000, status, 3)
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_S_counter_PATH "/soc/timers@40000000/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40000000) identifier: */
#define DT_N_S_soc_S_timers_40000000_S_counter_PARENT DT_N_S_soc_S_timers_40000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000000_S_counter_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_S_counter_ORD 117

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_S_counter_REQUIRES_ORDS \
	116, /* /soc/timers@40000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_S_counter_EXISTS 1
#define DT_N_INST_0_st_stm32_counter DT_N_S_soc_S_timers_40000000_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000000_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000000_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40000000_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000000_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40000000_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000000_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 0) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 1) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 2) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 3) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 4) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 5) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 6) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000000_S_counter_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim2_ch1_pa15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_PATH "/soc/pin-controller@48000000/tim2_ch1_pa15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_FULL_NAME "tim2_ch1_pa15"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_CHILD_IDX 32

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_ORD 118

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_REQUIRES_ORDS \
	10, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_SUPPORTS_ORDS \
	119, /* /soc/timers@40000000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_EXISTS 1
#define DT_N_NODELABEL_tim2_ch1_pa15 DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_pinmux 481
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PATH "/soc/timers@40000000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000000) identifier: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PARENT DT_N_S_soc_S_timers_40000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_ORD 119

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_REQUIRES_ORDS \
	116, /* /soc/timers@40000000 */ \
	118, /* /soc/pin-controller@48000000/tim2_ch1_pa15 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_EXISTS 1
#define DT_N_INST_0_st_stm32_pwm DT_N_S_soc_S_timers_40000000_S_pwm
#define DT_N_NODELABEL_pwm2      DT_N_S_soc_S_timers_40000000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40000000_S_pwm_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PINCTRL_NUM 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_timers_40000000_S_pwm_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timers_40000000_S_pwm_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, pinctrl_0, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_pwm, pinctrl_0, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status "okay"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 3)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 3)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400
 *
 * Node identifier: DT_N_S_soc_S_timers_40000400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000400_PATH "/soc/timers@40000400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000400_FULL_NAME "timers@40000400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000400_CHILD_IDX 33

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm) fn(DT_N_S_soc_S_timers_40000400_S_counter)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400_S_counter)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000400_ORD 120

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000400_SUPPORTS_ORDS \
	121, /* /soc/timers@40000400/counter */ \
	122, /* /soc/timers@40000400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_EXISTS 1
#define DT_N_INST_5_st_stm32_timers DT_N_S_soc_S_timers_40000400
#define DT_N_NODELABEL_timers3      DT_N_S_soc_S_timers_40000400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000400_REG_NUM 1
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_VAL_ADDRESS 1073742848 /* 0x40000400 */
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq 29
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40000400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_P_reg {1073742848 /* 0x40000400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_0 1073742848
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, reg, 0) \
	fn(DT_N_S_soc_S_timers_40000400, reg, 1)
#define DT_N_S_soc_S_timers_40000400_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400, reg, 1)
#define DT_N_S_soc_S_timers_40000400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bus 88
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, clocks, 0)
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, clocks, 0)
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts {29 /* 0x1d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_0 29
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40000400, interrupts, 1)
#define DT_N_S_soc_S_timers_40000400_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400, interrupts, 1)
#define DT_N_S_soc_S_timers_40000400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40000400_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_st_countermode 0
#define DT_N_S_soc_S_timers_40000400_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_status "disabled"
#define DT_N_S_soc_S_timers_40000400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, status, 0) \
	fn(DT_N_S_soc_S_timers_40000400, status, 1) \
	fn(DT_N_S_soc_S_timers_40000400, status, 2) \
	fn(DT_N_S_soc_S_timers_40000400, status, 3) \
	fn(DT_N_S_soc_S_timers_40000400, status, 4) \
	fn(DT_N_S_soc_S_timers_40000400, status, 5) \
	fn(DT_N_S_soc_S_timers_40000400, status, 6) \
	fn(DT_N_S_soc_S_timers_40000400, status, 7)
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400, status, 7)
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40000400_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000400_S_counter_PATH "/soc/timers@40000400/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000400_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40000400) identifier: */
#define DT_N_S_soc_S_timers_40000400_S_counter_PARENT DT_N_S_soc_S_timers_40000400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000400_S_counter_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000400_S_counter_ORD 121

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000400_S_counter_REQUIRES_ORDS \
	120, /* /soc/timers@40000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000400_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_S_counter_EXISTS 1
#define DT_N_INST_4_st_stm32_counter DT_N_S_soc_S_timers_40000400_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000400_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000400_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40000400_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000400_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 0) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 1) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 2) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 3) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 4) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 5) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 6) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000400_S_counter_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PATH "/soc/timers@40000400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000400) identifier: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PARENT DT_N_S_soc_S_timers_40000400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_ORD 122

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_REQUIRES_ORDS \
	120, /* /soc/timers@40000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_EXISTS 1
#define DT_N_INST_4_st_stm32_pwm DT_N_S_soc_S_timers_40000400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40000400_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000800
 *
 * Node identifier: DT_N_S_soc_S_timers_40000800
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000800_PATH "/soc/timers@40000800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000800_FULL_NAME "timers@40000800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000800_CHILD_IDX 34

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm) fn(DT_N_S_soc_S_timers_40000800_S_counter)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000800_S_counter)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000800_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000800_ORD 123

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000800_SUPPORTS_ORDS \
	124, /* /soc/timers@40000800/counter */ \
	125, /* /soc/timers@40000800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000800_EXISTS 1
#define DT_N_INST_6_st_stm32_timers DT_N_S_soc_S_timers_40000800
#define DT_N_NODELABEL_timers4      DT_N_S_soc_S_timers_40000800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000800_REG_NUM 1
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_VAL_ADDRESS 1073743872 /* 0x40000800 */
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000800_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000800_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq 30
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40000800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000800_P_reg {1073743872 /* 0x40000800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_0 1073743872
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, reg, 0) \
	fn(DT_N_S_soc_S_timers_40000800, reg, 1)
#define DT_N_S_soc_S_timers_40000800_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800, reg, 1)
#define DT_N_S_soc_S_timers_40000800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bus 88
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bits 4
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, clocks, 0)
#define DT_N_S_soc_S_timers_40000800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, clocks, 0)
#define DT_N_S_soc_S_timers_40000800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupts {30 /* 0x1e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_0 30
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40000800, interrupts, 1)
#define DT_N_S_soc_S_timers_40000800_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800, interrupts, 1)
#define DT_N_S_soc_S_timers_40000800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40000800_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_st_countermode 0
#define DT_N_S_soc_S_timers_40000800_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_status "disabled"
#define DT_N_S_soc_S_timers_40000800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, status, 0) \
	fn(DT_N_S_soc_S_timers_40000800, status, 1) \
	fn(DT_N_S_soc_S_timers_40000800, status, 2) \
	fn(DT_N_S_soc_S_timers_40000800, status, 3) \
	fn(DT_N_S_soc_S_timers_40000800, status, 4) \
	fn(DT_N_S_soc_S_timers_40000800, status, 5) \
	fn(DT_N_S_soc_S_timers_40000800, status, 6) \
	fn(DT_N_S_soc_S_timers_40000800, status, 7)
#define DT_N_S_soc_S_timers_40000800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800, status, 7)
#define DT_N_S_soc_S_timers_40000800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000800/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40000800_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000800_S_counter_PATH "/soc/timers@40000800/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000800_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40000800) identifier: */
#define DT_N_S_soc_S_timers_40000800_S_counter_PARENT DT_N_S_soc_S_timers_40000800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000800_S_counter_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000800_S_counter_ORD 124

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000800_S_counter_REQUIRES_ORDS \
	123, /* /soc/timers@40000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000800_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000800_S_counter_EXISTS 1
#define DT_N_INST_5_st_stm32_counter DT_N_S_soc_S_timers_40000800_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000800_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000800_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40000800_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000800_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40000800_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000800_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 0) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 1) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 2) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 3) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 4) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 5) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 6) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000800_S_counter_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000800/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000800_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_PATH "/soc/timers@40000800/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000800) identifier: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_PARENT DT_N_S_soc_S_timers_40000800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_ORD 125

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_REQUIRES_ORDS \
	123, /* /soc/timers@40000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_EXISTS 1
#define DT_N_INST_5_st_stm32_pwm DT_N_S_soc_S_timers_40000800_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40000800_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000c00
 *
 * Node identifier: DT_N_S_soc_S_timers_40000c00
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000c00_PATH "/soc/timers@40000c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000c00_FULL_NAME "timers@40000c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000c00_CHILD_IDX 35

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000c00_S_pwm) fn(DT_N_S_soc_S_timers_40000c00_S_counter)
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000c00_S_counter)
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000c00_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000c00_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000c00_ORD 126

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000c00_SUPPORTS_ORDS \
	127, /* /soc/timers@40000c00/counter */ \
	128, /* /soc/timers@40000c00/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000c00_EXISTS 1
#define DT_N_INST_7_st_stm32_timers DT_N_S_soc_S_timers_40000c00
#define DT_N_NODELABEL_timers5      DT_N_S_soc_S_timers_40000c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000c00_REG_NUM 1
#define DT_N_S_soc_S_timers_40000c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_REG_IDX_0_VAL_ADDRESS 1073744896 /* 0x40000c00 */
#define DT_N_S_soc_S_timers_40000c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000c00_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000c00_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_irq 50
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40000c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000c00_P_reg {1073744896 /* 0x40000c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_0 1073744896
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, reg, 0) \
	fn(DT_N_S_soc_S_timers_40000c00, reg, 1)
#define DT_N_S_soc_S_timers_40000c00_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00, reg, 1)
#define DT_N_S_soc_S_timers_40000c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bus 88
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bits 8
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, clocks, 0)
#define DT_N_S_soc_S_timers_40000c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00, clocks, 0)
#define DT_N_S_soc_S_timers_40000c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupts {50 /* 0x32 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_0 50
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40000c00, interrupts, 1)
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00, interrupts, 1)
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40000c00_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_st_countermode 0
#define DT_N_S_soc_S_timers_40000c00_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_status "disabled"
#define DT_N_S_soc_S_timers_40000c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, status, 0) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 1) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 2) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 3) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 4) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 5) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 6) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 7)
#define DT_N_S_soc_S_timers_40000c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00, status, 7)
#define DT_N_S_soc_S_timers_40000c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000c00_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40000c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40000c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000c00/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40000c00_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_PATH "/soc/timers@40000c00/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40000c00) identifier: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_PARENT DT_N_S_soc_S_timers_40000c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_ORD 127

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_REQUIRES_ORDS \
	126, /* /soc/timers@40000c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_EXISTS 1
#define DT_N_INST_6_st_stm32_counter DT_N_S_soc_S_timers_40000c00_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000c00_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40000c00_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 0) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 1) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 2) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 3) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 4) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 5) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 6) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000c00/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000c00_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_PATH "/soc/timers@40000c00/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000c00) identifier: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_PARENT DT_N_S_soc_S_timers_40000c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_ORD 128

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_REQUIRES_ORDS \
	126, /* /soc/timers@40000c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_EXISTS 1
#define DT_N_INST_6_st_stm32_pwm DT_N_S_soc_S_timers_40000c00_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001000
 *
 * Node identifier: DT_N_S_soc_S_timers_40001000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001000_PATH "/soc/timers@40001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001000_FULL_NAME "timers@40001000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001000_CHILD_IDX 17

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40001000_S_counter)
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000_S_counter)
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001000_ORD 129

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001000_SUPPORTS_ORDS \
	130, /* /soc/timers@40001000/counter */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001000_EXISTS 1
#define DT_N_INST_2_st_stm32_timers DT_N_S_soc_S_timers_40001000
#define DT_N_NODELABEL_timers6      DT_N_S_soc_S_timers_40001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001000_REG_NUM 1
#define DT_N_S_soc_S_timers_40001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_REG_IDX_0_VAL_ADDRESS 1073745920 /* 0x40001000 */
#define DT_N_S_soc_S_timers_40001000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40001000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_irq 54
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40001000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40001000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001000_P_reg {1073745920 /* 0x40001000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_0 1073745920
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, reg, 0) \
	fn(DT_N_S_soc_S_timers_40001000, reg, 1)
#define DT_N_S_soc_S_timers_40001000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000, reg, 1)
#define DT_N_S_soc_S_timers_40001000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bus 88
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bits 16
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, clocks, 0)
#define DT_N_S_soc_S_timers_40001000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, clocks, 0)
#define DT_N_S_soc_S_timers_40001000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupts {54 /* 0x36 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_0 54
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40001000, interrupts, 1)
#define DT_N_S_soc_S_timers_40001000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000, interrupts, 1)
#define DT_N_S_soc_S_timers_40001000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40001000_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40001000_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_status "disabled"
#define DT_N_S_soc_S_timers_40001000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, status, 0) \
	fn(DT_N_S_soc_S_timers_40001000, status, 1) \
	fn(DT_N_S_soc_S_timers_40001000, status, 2) \
	fn(DT_N_S_soc_S_timers_40001000, status, 3) \
	fn(DT_N_S_soc_S_timers_40001000, status, 4) \
	fn(DT_N_S_soc_S_timers_40001000, status, 5) \
	fn(DT_N_S_soc_S_timers_40001000, status, 6) \
	fn(DT_N_S_soc_S_timers_40001000, status, 7)
#define DT_N_S_soc_S_timers_40001000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000, status, 7)
#define DT_N_S_soc_S_timers_40001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001000/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40001000_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001000_S_counter_PATH "/soc/timers@40001000/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001000_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40001000) identifier: */
#define DT_N_S_soc_S_timers_40001000_S_counter_PARENT DT_N_S_soc_S_timers_40001000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001000_S_counter_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001000_S_counter_ORD 130

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001000_S_counter_REQUIRES_ORDS \
	129, /* /soc/timers@40001000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001000_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001000_S_counter_EXISTS 1
#define DT_N_INST_1_st_stm32_counter DT_N_S_soc_S_timers_40001000_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001000_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001000_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40001000_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001000_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40001000_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001000_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 0) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 1) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 2) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 3) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 4) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 5) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 6) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001000_S_counter_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001400
 *
 * Node identifier: DT_N_S_soc_S_timers_40001400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001400_PATH "/soc/timers@40001400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001400_FULL_NAME "timers@40001400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40001400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001400_CHILD_IDX 36

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40001400_S_counter)
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400_S_counter)
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001400_ORD 131

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001400_SUPPORTS_ORDS \
	132, /* /soc/timers@40001400/counter */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001400_EXISTS 1
#define DT_N_INST_8_st_stm32_timers DT_N_S_soc_S_timers_40001400
#define DT_N_NODELABEL_timers7      DT_N_S_soc_S_timers_40001400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001400_REG_NUM 1
#define DT_N_S_soc_S_timers_40001400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_REG_IDX_0_VAL_ADDRESS 1073746944 /* 0x40001400 */
#define DT_N_S_soc_S_timers_40001400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40001400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_irq 55
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40001400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40001400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001400_P_reg {1073746944 /* 0x40001400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_0 1073746944
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, reg, 0) \
	fn(DT_N_S_soc_S_timers_40001400, reg, 1)
#define DT_N_S_soc_S_timers_40001400_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400, reg, 1)
#define DT_N_S_soc_S_timers_40001400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bus 88
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bits 32
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, clocks, 0)
#define DT_N_S_soc_S_timers_40001400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400, clocks, 0)
#define DT_N_S_soc_S_timers_40001400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupts {55 /* 0x37 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_0 55
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40001400, interrupts, 1)
#define DT_N_S_soc_S_timers_40001400_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400, interrupts, 1)
#define DT_N_S_soc_S_timers_40001400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40001400_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_st_countermode 0
#define DT_N_S_soc_S_timers_40001400_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_status "disabled"
#define DT_N_S_soc_S_timers_40001400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, status, 0) \
	fn(DT_N_S_soc_S_timers_40001400, status, 1) \
	fn(DT_N_S_soc_S_timers_40001400, status, 2) \
	fn(DT_N_S_soc_S_timers_40001400, status, 3) \
	fn(DT_N_S_soc_S_timers_40001400, status, 4) \
	fn(DT_N_S_soc_S_timers_40001400, status, 5) \
	fn(DT_N_S_soc_S_timers_40001400, status, 6) \
	fn(DT_N_S_soc_S_timers_40001400, status, 7)
#define DT_N_S_soc_S_timers_40001400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400, status, 7)
#define DT_N_S_soc_S_timers_40001400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40001400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40001400_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40001400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40001400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, compatible, 0)
#define DT_N_S_soc_S_timers_40001400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400, compatible, 0)
#define DT_N_S_soc_S_timers_40001400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001400/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40001400_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001400_S_counter_PATH "/soc/timers@40001400/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001400_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40001400) identifier: */
#define DT_N_S_soc_S_timers_40001400_S_counter_PARENT DT_N_S_soc_S_timers_40001400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001400_S_counter_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001400_S_counter_ORD 132

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001400_S_counter_REQUIRES_ORDS \
	131, /* /soc/timers@40001400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001400_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001400_S_counter_EXISTS 1
#define DT_N_INST_7_st_stm32_counter DT_N_S_soc_S_timers_40001400_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001400_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001400_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40001400_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001400_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40001400_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001400_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 0) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 1) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 2) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 3) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 4) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 5) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 6) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001400_S_counter_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40012c00
 *
 * Node identifier: DT_N_S_soc_S_timers_40012c00
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40012c00_PATH "/soc/timers@40012c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40012c00_FULL_NAME "timers@40012c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40012c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40012c00_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00_S_pwm)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40012c00_ORD 133

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40012c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40012c00_SUPPORTS_ORDS \
	134, /* /soc/timers@40012c00/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40012c00_EXISTS 1
#define DT_N_INST_1_st_stm32_timers DT_N_S_soc_S_timers_40012c00
#define DT_N_NODELABEL_timers1      DT_N_S_soc_S_timers_40012c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40012c00_REG_NUM 1
#define DT_N_S_soc_S_timers_40012c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_REG_IDX_0_VAL_ADDRESS 1073818624 /* 0x40012c00 */
#define DT_N_S_soc_S_timers_40012c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40012c00_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40012c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40012c00_IRQ_NUM 4
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_irq 25
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_irq 26
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_irq 27
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40012c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40012c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40012c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40012c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40012c00_P_reg {1073818624 /* 0x40012c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_0 1073818624
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, reg, 0) \
	fn(DT_N_S_soc_S_timers_40012c00, reg, 1)
#define DT_N_S_soc_S_timers_40012c00_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, reg, 1)
#define DT_N_S_soc_S_timers_40012c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bus 96
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, clocks, 0)
#define DT_N_S_soc_S_timers_40012c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, clocks, 0)
#define DT_N_S_soc_S_timers_40012c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */, 25 /* 0x19 */, 0 /* 0x0 */, 26 /* 0x1a */, 0 /* 0x0 */, 27 /* 0x1b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_2 25
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_4 26
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_6 27
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 1) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 2) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 3) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 4) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 5) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 6) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 7)
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 7)
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40012c00_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_st_countermode 0
#define DT_N_S_soc_S_timers_40012c00_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_status "disabled"
#define DT_N_S_soc_S_timers_40012c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40012c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40012c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40012c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40012c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40012c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, status, 0) \
	fn(DT_N_S_soc_S_timers_40012c00, status, 1) \
	fn(DT_N_S_soc_S_timers_40012c00, status, 2) \
	fn(DT_N_S_soc_S_timers_40012c00, status, 3) \
	fn(DT_N_S_soc_S_timers_40012c00, status, 4) \
	fn(DT_N_S_soc_S_timers_40012c00, status, 5) \
	fn(DT_N_S_soc_S_timers_40012c00, status, 6) \
	fn(DT_N_S_soc_S_timers_40012c00, status, 7)
#define DT_N_S_soc_S_timers_40012c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, status, 7)
#define DT_N_S_soc_S_timers_40012c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, compatible, 0)
#define DT_N_S_soc_S_timers_40012c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, compatible, 0)
#define DT_N_S_soc_S_timers_40012c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40012c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names {"brk", "up", "trgcom", "cc"}
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0 "brk"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0_STRING_TOKEN brk
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN BRK
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1 "up"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1_STRING_TOKEN up
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN UP
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_2 "trgcom"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_2_STRING_TOKEN trgcom
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN TRGCOM
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_3 "cc"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_3_STRING_TOKEN cc
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN CC
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 0) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 1) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 2) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 3)
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 3)
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40012c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40012c00/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40012c00_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PATH "/soc/timers@40012c00/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40012c00) identifier: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PARENT DT_N_S_soc_S_timers_40012c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_ORD 134

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_REQUIRES_ORDS \
	133, /* /soc/timers@40012c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_EXISTS 1
#define DT_N_INST_1_st_stm32_pwm DT_N_S_soc_S_timers_40012c00_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40013400
 *
 * Node identifier: DT_N_S_soc_S_timers_40013400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40013400_PATH "/soc/timers@40013400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40013400_FULL_NAME "timers@40013400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40013400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40013400_CHILD_IDX 37

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40013400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40013400_S_pwm)
#define DT_N_S_soc_S_timers_40013400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40013400_S_pwm)
#define DT_N_S_soc_S_timers_40013400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40013400_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40013400_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40013400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40013400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40013400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40013400_ORD 135

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40013400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40013400_SUPPORTS_ORDS \
	136, /* /soc/timers@40013400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40013400_EXISTS 1
#define DT_N_INST_9_st_stm32_timers DT_N_S_soc_S_timers_40013400
#define DT_N_NODELABEL_timers8      DT_N_S_soc_S_timers_40013400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40013400_REG_NUM 1
#define DT_N_S_soc_S_timers_40013400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_REG_IDX_0_VAL_ADDRESS 1073820672 /* 0x40013400 */
#define DT_N_S_soc_S_timers_40013400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40013400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40013400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40013400_IRQ_NUM 4
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_VAL_irq 43
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_VAL_irq 44
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_VAL_irq 45
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_VAL_irq 46
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_brk_VAL_irq DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_brk_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_brk_VAL_priority DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_brk_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_up_VAL_irq DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_up_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_up_VAL_priority DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_up_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_trgcom_VAL_irq DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_trgcom_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_trgcom_VAL_priority DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_trgcom_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_cc_VAL_irq DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_cc_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_cc_VAL_priority DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_cc_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40013400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40013400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40013400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40013400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40013400_P_reg {1073820672 /* 0x40013400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40013400_P_reg_IDX_0 1073820672
#define DT_N_S_soc_S_timers_40013400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40013400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40013400, reg, 0) \
	fn(DT_N_S_soc_S_timers_40013400, reg, 1)
#define DT_N_S_soc_S_timers_40013400_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40013400, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, reg, 1)
#define DT_N_S_soc_S_timers_40013400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40013400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40013400, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40013400_P_clocks_IDX_0_VAL_bus 96
#define DT_N_S_soc_S_timers_40013400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_clocks_IDX_0_VAL_bits 8192
#define DT_N_S_soc_S_timers_40013400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40013400, clocks, 0)
#define DT_N_S_soc_S_timers_40013400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40013400, clocks, 0)
#define DT_N_S_soc_S_timers_40013400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40013400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40013400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40013400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts {43 /* 0x2b */, 0 /* 0x0 */, 44 /* 0x2c */, 0 /* 0x0 */, 45 /* 0x2d */, 0 /* 0x0 */, 46 /* 0x2e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_0 43
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_2 44
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_4 45
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_6 46
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40013400, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 1) \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 2) \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 3) \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 4) \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 5) \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 6) \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 7)
#define DT_N_S_soc_S_timers_40013400_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40013400, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 7)
#define DT_N_S_soc_S_timers_40013400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40013400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40013400, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupts, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40013400_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_st_countermode 0
#define DT_N_S_soc_S_timers_40013400_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_status "disabled"
#define DT_N_S_soc_S_timers_40013400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40013400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40013400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40013400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40013400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40013400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40013400, status, 0) \
	fn(DT_N_S_soc_S_timers_40013400, status, 1) \
	fn(DT_N_S_soc_S_timers_40013400, status, 2) \
	fn(DT_N_S_soc_S_timers_40013400, status, 3) \
	fn(DT_N_S_soc_S_timers_40013400, status, 4) \
	fn(DT_N_S_soc_S_timers_40013400, status, 5) \
	fn(DT_N_S_soc_S_timers_40013400, status, 6) \
	fn(DT_N_S_soc_S_timers_40013400, status, 7)
#define DT_N_S_soc_S_timers_40013400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40013400, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, status, 7)
#define DT_N_S_soc_S_timers_40013400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40013400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40013400, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40013400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40013400_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40013400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40013400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40013400, compatible, 0)
#define DT_N_S_soc_S_timers_40013400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40013400, compatible, 0)
#define DT_N_S_soc_S_timers_40013400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40013400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40013400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40013400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names {"brk", "up", "trgcom", "cc"}
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_0 "brk"
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_0_STRING_TOKEN brk
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN BRK
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_1 "up"
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_1_STRING_TOKEN up
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN UP
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_2 "trgcom"
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_2_STRING_TOKEN trgcom
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN TRGCOM
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_3 "cc"
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_3_STRING_TOKEN cc
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN CC
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 0) \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 1) \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 2) \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 3)
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 3)
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40013400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40013400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40013400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_PATH "/soc/timers@40013400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40013400) identifier: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_PARENT DT_N_S_soc_S_timers_40013400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_ORD 136

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_REQUIRES_ORDS \
	135, /* /soc/timers@40013400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_EXISTS 1
#define DT_N_INST_7_st_stm32_pwm DT_N_S_soc_S_timers_40013400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40013400_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40013400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40013400_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40013400_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40013400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40013400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40013400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40013400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014000
 *
 * Node identifier: DT_N_S_soc_S_timers_40014000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014000_PATH "/soc/timers@40014000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014000_FULL_NAME "timers@40014000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014000_CHILD_IDX 18

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm) fn(DT_N_S_soc_S_timers_40014000_S_counter)
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014000_S_counter)
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014000_ORD 137

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014000_SUPPORTS_ORDS \
	138, /* /soc/timers@40014000/counter */ \
	139, /* /soc/timers@40014000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014000_EXISTS 1
#define DT_N_INST_3_st_stm32_timers DT_N_S_soc_S_timers_40014000
#define DT_N_NODELABEL_timers15     DT_N_S_soc_S_timers_40014000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014000_REG_NUM 1
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_VAL_ADDRESS 1073823744 /* 0x40014000 */
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40014000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014000_P_reg {1073823744 /* 0x40014000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_0 1073823744
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, reg, 0) \
	fn(DT_N_S_soc_S_timers_40014000, reg, 1)
#define DT_N_S_soc_S_timers_40014000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000, reg, 1)
#define DT_N_S_soc_S_timers_40014000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bus 96
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bits 65536
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, clocks, 0)
#define DT_N_S_soc_S_timers_40014000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, clocks, 0)
#define DT_N_S_soc_S_timers_40014000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40014000, interrupts, 1)
#define DT_N_S_soc_S_timers_40014000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000, interrupts, 1)
#define DT_N_S_soc_S_timers_40014000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40014000_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40014000_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_status "disabled"
#define DT_N_S_soc_S_timers_40014000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, status, 0) \
	fn(DT_N_S_soc_S_timers_40014000, status, 1) \
	fn(DT_N_S_soc_S_timers_40014000, status, 2) \
	fn(DT_N_S_soc_S_timers_40014000, status, 3) \
	fn(DT_N_S_soc_S_timers_40014000, status, 4) \
	fn(DT_N_S_soc_S_timers_40014000, status, 5) \
	fn(DT_N_S_soc_S_timers_40014000, status, 6) \
	fn(DT_N_S_soc_S_timers_40014000, status, 7)
#define DT_N_S_soc_S_timers_40014000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000, status, 7)
#define DT_N_S_soc_S_timers_40014000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014000/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40014000_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014000_S_counter_PATH "/soc/timers@40014000/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014000_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40014000) identifier: */
#define DT_N_S_soc_S_timers_40014000_S_counter_PARENT DT_N_S_soc_S_timers_40014000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014000_S_counter_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014000_S_counter_ORD 138

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014000_S_counter_REQUIRES_ORDS \
	137, /* /soc/timers@40014000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014000_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014000_S_counter_EXISTS 1
#define DT_N_INST_2_st_stm32_counter DT_N_S_soc_S_timers_40014000_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014000_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014000_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40014000_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014000_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 0) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 1) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 2) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 3) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 4) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 5) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 6) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014000_S_counter_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_PATH "/soc/timers@40014000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40014000) identifier: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_PARENT DT_N_S_soc_S_timers_40014000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_ORD 139

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_REQUIRES_ORDS \
	137, /* /soc/timers@40014000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_EXISTS 1
#define DT_N_INST_2_st_stm32_pwm DT_N_S_soc_S_timers_40014000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40014000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_PATH "/soc/timers@40014400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_FULL_NAME "timers@40014400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014400_CHILD_IDX 19

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm) fn(DT_N_S_soc_S_timers_40014400_S_counter)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014400_S_counter)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_ORD 140

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_SUPPORTS_ORDS \
	141, /* /soc/timers@40014400/counter */ \
	142, /* /soc/timers@40014400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_EXISTS 1
#define DT_N_INST_4_st_stm32_timers DT_N_S_soc_S_timers_40014400
#define DT_N_NODELABEL_timers16     DT_N_S_soc_S_timers_40014400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014400_REG_NUM 1
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_VAL_ADDRESS 1073824768 /* 0x40014400 */
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq 25
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40014400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_P_reg {1073824768 /* 0x40014400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_0 1073824768
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, reg, 0) \
	fn(DT_N_S_soc_S_timers_40014400, reg, 1)
#define DT_N_S_soc_S_timers_40014400_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400, reg, 1)
#define DT_N_S_soc_S_timers_40014400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bus 96
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bits 131072
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, clocks, 0)
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, clocks, 0)
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts {25 /* 0x19 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_0 25
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40014400, interrupts, 1)
#define DT_N_S_soc_S_timers_40014400_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400, interrupts, 1)
#define DT_N_S_soc_S_timers_40014400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40014400_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_st_countermode 0
#define DT_N_S_soc_S_timers_40014400_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, status, 0) \
	fn(DT_N_S_soc_S_timers_40014400, status, 1) \
	fn(DT_N_S_soc_S_timers_40014400, status, 2) \
	fn(DT_N_S_soc_S_timers_40014400, status, 3) \
	fn(DT_N_S_soc_S_timers_40014400, status, 4) \
	fn(DT_N_S_soc_S_timers_40014400, status, 5) \
	fn(DT_N_S_soc_S_timers_40014400, status, 6) \
	fn(DT_N_S_soc_S_timers_40014400, status, 7)
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400, status, 7)
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_S_counter_PATH "/soc/timers@40014400/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40014400) identifier: */
#define DT_N_S_soc_S_timers_40014400_S_counter_PARENT DT_N_S_soc_S_timers_40014400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014400_S_counter_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_S_counter_ORD 141

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_S_counter_REQUIRES_ORDS \
	140, /* /soc/timers@40014400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_S_counter_EXISTS 1
#define DT_N_INST_3_st_stm32_counter DT_N_S_soc_S_timers_40014400_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014400_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014400_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40014400_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014400_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 1) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 2) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 3) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 4) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 5) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 6) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014400_S_counter_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PATH "/soc/timers@40014400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40014400) identifier: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PARENT DT_N_S_soc_S_timers_40014400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_ORD 142

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_REQUIRES_ORDS \
	140, /* /soc/timers@40014400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_EXISTS 1
#define DT_N_INST_3_st_stm32_pwm DT_N_S_soc_S_timers_40014400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40014400_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_PATH "/soc/timers@40014800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_FULL_NAME "timers@40014800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014800_CHILD_IDX 38

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm) fn(DT_N_S_soc_S_timers_40014800_S_counter)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014800_S_counter)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014800_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_ORD 143

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_SUPPORTS_ORDS \
	144, /* /soc/timers@40014800/counter */ \
	145, /* /soc/timers@40014800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_EXISTS 1
#define DT_N_INST_10_st_stm32_timers DT_N_S_soc_S_timers_40014800
#define DT_N_NODELABEL_timers17      DT_N_S_soc_S_timers_40014800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014800_REG_NUM 1
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_VAL_ADDRESS 1073825792 /* 0x40014800 */
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014800_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014800_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq 26
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40014800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_P_reg {1073825792 /* 0x40014800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_0 1073825792
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, reg, 0) \
	fn(DT_N_S_soc_S_timers_40014800, reg, 1)
#define DT_N_S_soc_S_timers_40014800_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800, reg, 1)
#define DT_N_S_soc_S_timers_40014800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40021000
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bus 96
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, clocks, 0)
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, clocks, 0)
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts {26 /* 0x1a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_0 26
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40014800, interrupts, 1)
#define DT_N_S_soc_S_timers_40014800_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800, interrupts, 1)
#define DT_N_S_soc_S_timers_40014800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40014800_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_st_countermode 0
#define DT_N_S_soc_S_timers_40014800_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, status, 0) \
	fn(DT_N_S_soc_S_timers_40014800, status, 1) \
	fn(DT_N_S_soc_S_timers_40014800, status, 2) \
	fn(DT_N_S_soc_S_timers_40014800, status, 3) \
	fn(DT_N_S_soc_S_timers_40014800, status, 4) \
	fn(DT_N_S_soc_S_timers_40014800, status, 5) \
	fn(DT_N_S_soc_S_timers_40014800, status, 6) \
	fn(DT_N_S_soc_S_timers_40014800, status, 7)
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800, status, 7)
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_S_counter_PATH "/soc/timers@40014800/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40014800) identifier: */
#define DT_N_S_soc_S_timers_40014800_S_counter_PARENT DT_N_S_soc_S_timers_40014800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014800_S_counter_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_S_counter_ORD 144

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_S_counter_REQUIRES_ORDS \
	143, /* /soc/timers@40014800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_S_counter_EXISTS 1
#define DT_N_INST_8_st_stm32_counter DT_N_S_soc_S_timers_40014800_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014800_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014800_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40014800_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014800_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 1) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 2) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 3) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 4) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 5) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 6) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014800_S_counter_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PATH "/soc/timers@40014800/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40014800) identifier: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PARENT DT_N_S_soc_S_timers_40014800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_ORD 145

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_REQUIRES_ORDS \
	143, /* /soc/timers@40014800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_EXISTS 1
#define DT_N_INST_8_st_stm32_pwm DT_N_S_soc_S_timers_40014800_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40014800_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_entropy                 DT_N_S_soc_S_rng_50060800
#define DT_CHOSEN_zephyr_entropy_EXISTS          1
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_serial_40013800
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_serial_40013800
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_code_partition          DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000
#define DT_CHOSEN_zephyr_code_partition_EXISTS   1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40022000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000) fn(DT_N_S_soc_S_rcc_40021000) fn(DT_N_S_soc_S_interrupt_controller_40010400) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5) fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_watchdog_40002c00) fn(DT_N_S_soc_S_serial_40013800) fn(DT_N_S_soc_S_serial_40004400) fn(DT_N_S_soc_S_serial_40008000) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005c00) fn(DT_N_S_soc_S_quadspi_a0001000) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_timers_40012c00) fn(DT_N_S_soc_S_timers_40012c00_S_pwm) fn(DT_N_S_soc_S_timers_40000000) fn(DT_N_S_soc_S_timers_40000000_S_pwm) fn(DT_N_S_soc_S_timers_40000000_S_counter) fn(DT_N_S_soc_S_timers_40001000) fn(DT_N_S_soc_S_timers_40001000_S_counter) fn(DT_N_S_soc_S_timers_40014000) fn(DT_N_S_soc_S_timers_40014000_S_pwm) fn(DT_N_S_soc_S_timers_40014000_S_counter) fn(DT_N_S_soc_S_timers_40014400) fn(DT_N_S_soc_S_timers_40014400_S_pwm) fn(DT_N_S_soc_S_timers_40014400_S_counter) fn(DT_N_S_soc_S_rtc_40002800) fn(DT_N_S_soc_S_adc_50040000) fn(DT_N_S_soc_S_adc_50040100) fn(DT_N_S_soc_S_dma_40020000) fn(DT_N_S_soc_S_dma_40020400) fn(DT_N_S_soc_S_timers_40007c00) fn(DT_N_S_soc_S_rng_50060800) fn(DT_N_S_soc_S_serial_40004800) fn(DT_N_S_soc_S_serial_40004c00) fn(DT_N_S_soc_S_serial_40005000) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f) fn(DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d) fn(DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a) fn(DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29) fn(DT_N_S_soc_S_spi_40003800) fn(DT_N_S_soc_S_spi_40003c00) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1) fn(DT_N_S_soc_S_timers_40000400) fn(DT_N_S_soc_S_timers_40000400_S_pwm) fn(DT_N_S_soc_S_timers_40000400_S_counter) fn(DT_N_S_soc_S_timers_40000800) fn(DT_N_S_soc_S_timers_40000800_S_pwm) fn(DT_N_S_soc_S_timers_40000800_S_counter) fn(DT_N_S_soc_S_timers_40000c00) fn(DT_N_S_soc_S_timers_40000c00_S_pwm) fn(DT_N_S_soc_S_timers_40000c00_S_counter) fn(DT_N_S_soc_S_timers_40001400) fn(DT_N_S_soc_S_timers_40001400_S_counter) fn(DT_N_S_soc_S_timers_40013400) fn(DT_N_S_soc_S_timers_40013400_S_pwm) fn(DT_N_S_soc_S_timers_40014800) fn(DT_N_S_soc_S_timers_40014800_S_pwm) fn(DT_N_S_soc_S_timers_40014800_S_counter) fn(DT_N_S_soc_S_can_40006400) fn(DT_N_S_soc_S_sdmmc_40012800) fn(DT_N_S_soc_S_dac_40007400) fn(DT_N_S_soc_S_adc_50040200) fn(DT_N_S_soc_S_otgfs_50000000) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_clk_hsi) fn(DT_N_S_clocks_S_clk_msi) fn(DT_N_S_clocks_S_clk_lse) fn(DT_N_S_clocks_S_clk_lsi) fn(DT_N_S_clocks_S_pll) fn(DT_N_S_dietemp) fn(DT_N_S_otgfs_phy) fn(DT_N_S_connector) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2) fn(DT_N_S_gpio_keys) fn(DT_N_S_gpio_keys_S_button_0) fn(DT_N_S_power_states) fn(DT_N_S_power_states_S_state0) fn(DT_N_S_power_states_S_state1) fn(DT_N_S_power_states_S_state2) fn(DT_N_S_dm163) fn(DT_N_S_rgb_matrix)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40022000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000) fn(DT_N_S_soc_S_rcc_40021000) fn(DT_N_S_soc_S_interrupt_controller_40010400) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5) fn(DT_N_S_soc_S_pin_controller_48000000_S_dac1_out1_pa4) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_scl_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c2_sda_pb11) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pe10) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_ncs_pe11) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pe12) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pe13) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pe14) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pe15) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_miso_pc11) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_mosi_pc12) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi3_sck_pc10) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_rx_pa1) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6) fn(DT_N_S_soc_S_pin_controller_48000000_S_uart4_tx_pa0) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_id_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dm_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_otg_fs_dp_pa12) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_serial_40013800) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005c00) fn(DT_N_S_soc_S_quadspi_a0001000) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_timers_40000000) fn(DT_N_S_soc_S_timers_40000000_S_pwm) fn(DT_N_S_soc_S_rtc_40002800) fn(DT_N_S_soc_S_adc_50040000) fn(DT_N_S_soc_S_dma_40020000) fn(DT_N_S_soc_S_timers_40007c00) fn(DT_N_S_soc_S_rng_50060800) fn(DT_N_S_soc_S_serial_40004c00) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f) fn(DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d) fn(DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a) fn(DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29) fn(DT_N_S_soc_S_spi_40003c00) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1) fn(DT_N_S_soc_S_dac_40007400) fn(DT_N_S_soc_S_otgfs_50000000) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_clk_hsi) fn(DT_N_S_clocks_S_clk_lse) fn(DT_N_S_clocks_S_pll) fn(DT_N_S_dietemp) fn(DT_N_S_otgfs_phy) fn(DT_N_S_connector) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2) fn(DT_N_S_gpio_keys) fn(DT_N_S_gpio_keys_S_button_0) fn(DT_N_S_power_states) fn(DT_N_S_power_states_S_state0) fn(DT_N_S_power_states_S_state1) fn(DT_N_S_power_states_S_state2) fn(DT_N_S_dm163) fn(DT_N_S_rgb_matrix)
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_0 DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_20000
#define DT_COMPAT_fixed_partitions_LABEL_image_0_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f8000
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_1 DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_0
#define DT_COMPAT_fixed_partitions_LABEL_image_1_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_storage DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions_S_partition_d8000
#define DT_COMPAT_fixed_partitions_LABEL_storage_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_st_stm32l475_disco_iot 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v7m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv7m_systick 1
#define DT_COMPAT_HAS_OKAY_st_stm32_flash_controller 1
#define DT_COMPAT_HAS_OKAY_st_stm32l4_flash_controller 1
#define DT_COMPAT_HAS_OKAY_st_stm32_nv_flash 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rcc 1
#define DT_COMPAT_HAS_OKAY_st_stm32_exti 1
#define DT_COMPAT_HAS_OKAY_st_stm32_pinctrl 1
#define DT_COMPAT_HAS_OKAY_st_stm32_gpio 1
#define DT_COMPAT_HAS_OKAY_st_stm32_watchdog 1
#define DT_COMPAT_HAS_OKAY_st_stm32_usart 1
#define DT_COMPAT_HAS_OKAY_st_stm32_uart 1
#define DT_COMPAT_HAS_OKAY_st_stm32_i2c_v2 1
#define DT_COMPAT_HAS_OKAY_st_stm32_qspi 1
#define DT_COMPAT_HAS_OKAY_st_stm32_qspi_nor 1
#define DT_COMPAT_HAS_OKAY_st_stm32_spi_fifo 1
#define DT_COMPAT_HAS_OKAY_st_stm32_spi 1
#define DT_COMPAT_HAS_OKAY_st_stm32_timers 1
#define DT_COMPAT_HAS_OKAY_st_stm32_pwm 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rtc 1
#define DT_COMPAT_HAS_OKAY_st_stm32_adc 1
#define DT_COMPAT_HAS_OKAY_st_stm32_dma_v2 1
#define DT_COMPAT_HAS_OKAY_st_stm32_lptim 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rng 1
#define DT_COMPAT_HAS_OKAY_st_lis3mdl_magn 1
#define DT_COMPAT_HAS_OKAY_st_hts221 1
#define DT_COMPAT_HAS_OKAY_st_lps22hb_press 1
#define DT_COMPAT_HAS_OKAY_st_lsm6dsl 1
#define DT_COMPAT_HAS_OKAY_st_vl53l0x 1
#define DT_COMPAT_HAS_OKAY_zephyr_bt_hci_spi 1
#define DT_COMPAT_HAS_OKAY_inventek_eswifi 1
#define DT_COMPAT_HAS_OKAY_st_stm32_dac 1
#define DT_COMPAT_HAS_OKAY_st_stm32_otgfs 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m4f 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_fixed_clock 1
#define DT_COMPAT_HAS_OKAY_st_stm32_lse_clock 1
#define DT_COMPAT_HAS_OKAY_st_stm32l4_pll_clock 1
#define DT_COMPAT_HAS_OKAY_st_stm32_temp_cal 1
#define DT_COMPAT_HAS_OKAY_usb_nop_xceiv 1
#define DT_COMPAT_HAS_OKAY_arduino_header_r3 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_gpio_keys 1
#define DT_COMPAT_HAS_OKAY_zephyr_power_state 1
#define DT_COMPAT_HAS_OKAY_siti_dm163 1
#define DT_COMPAT_HAS_OKAY_rgb_matrix 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_st_stm32l475_disco_iot_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v7m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv7m_systick_NUM_OKAY 1
#define DT_N_INST_st_stm32_flash_controller_NUM_OKAY 1
#define DT_N_INST_st_stm32l4_flash_controller_NUM_OKAY 1
#define DT_N_INST_st_stm32_nv_flash_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 2
#define DT_N_INST_st_stm32_rcc_NUM_OKAY 1
#define DT_N_INST_st_stm32_exti_NUM_OKAY 1
#define DT_N_INST_st_stm32_pinctrl_NUM_OKAY 1
#define DT_N_INST_st_stm32_gpio_NUM_OKAY 8
#define DT_N_INST_st_stm32_watchdog_NUM_OKAY 1
#define DT_N_INST_st_stm32_usart_NUM_OKAY 1
#define DT_N_INST_st_stm32_uart_NUM_OKAY 2
#define DT_N_INST_st_stm32_i2c_v2_NUM_OKAY 3
#define DT_N_INST_st_stm32_qspi_NUM_OKAY 1
#define DT_N_INST_st_stm32_qspi_nor_NUM_OKAY 1
#define DT_N_INST_st_stm32_spi_fifo_NUM_OKAY 2
#define DT_N_INST_st_stm32_spi_NUM_OKAY 2
#define DT_N_INST_st_stm32_timers_NUM_OKAY 1
#define DT_N_INST_st_stm32_pwm_NUM_OKAY 1
#define DT_N_INST_st_stm32_rtc_NUM_OKAY 1
#define DT_N_INST_st_stm32_adc_NUM_OKAY 1
#define DT_N_INST_st_stm32_dma_v2_NUM_OKAY 1
#define DT_N_INST_st_stm32_lptim_NUM_OKAY 1
#define DT_N_INST_st_stm32_rng_NUM_OKAY 1
#define DT_N_INST_st_lis3mdl_magn_NUM_OKAY 1
#define DT_N_INST_st_hts221_NUM_OKAY 1
#define DT_N_INST_st_lps22hb_press_NUM_OKAY 1
#define DT_N_INST_st_lsm6dsl_NUM_OKAY 1
#define DT_N_INST_st_vl53l0x_NUM_OKAY 1
#define DT_N_INST_zephyr_bt_hci_spi_NUM_OKAY 1
#define DT_N_INST_inventek_eswifi_NUM_OKAY 1
#define DT_N_INST_st_stm32_dac_NUM_OKAY 1
#define DT_N_INST_st_stm32_otgfs_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m4f_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_fixed_clock_NUM_OKAY 1
#define DT_N_INST_st_stm32_lse_clock_NUM_OKAY 1
#define DT_N_INST_st_stm32l4_pll_clock_NUM_OKAY 1
#define DT_N_INST_st_stm32_temp_cal_NUM_OKAY 1
#define DT_N_INST_usb_nop_xceiv_NUM_OKAY 1
#define DT_N_INST_arduino_header_r3_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_gpio_keys_NUM_OKAY 1
#define DT_N_INST_zephyr_power_state_NUM_OKAY 3
#define DT_N_INST_siti_dm163_NUM_OKAY 1
#define DT_N_INST_rgb_matrix_NUM_OKAY 1
#define DT_FOREACH_OKAY_st_stm32l475_disco_iot(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_st_stm32l475_disco_iot(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32l475_disco_iot(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32l475_disco_iot(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v7m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v7m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v7m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v7m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv7m_systick(fn) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_FOREACH_OKAY_VARGS_arm_armv7m_systick(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv7m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv7m_systick(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_40022000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32l4_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_40022000)
#define DT_FOREACH_OKAY_VARGS_st_stm32l4_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32l4_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32l4_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_partitions(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions)
#define DT_FOREACH_OKAY_VARGS_fixed_partitions(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0_S_partitions, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_partitions(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_rcc(fn) fn(DT_N_S_soc_S_rcc_40021000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_rcc(fn, ...) fn(DT_N_S_soc_S_rcc_40021000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_rcc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_rcc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_exti(fn) fn(DT_N_S_soc_S_interrupt_controller_40010400)
#define DT_FOREACH_OKAY_VARGS_st_stm32_exti(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40010400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_exti(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_exti(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_pinctrl(fn) fn(DT_N_S_soc_S_pin_controller_48000000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_pinctrl(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_gpio(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_gpio(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_gpio(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5) fn(6) fn(7)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__) fn(6, __VA_ARGS__) fn(7, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_watchdog(fn) fn(DT_N_S_soc_S_watchdog_40003000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_watchdog(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_watchdog(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_watchdog(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_usart(fn) fn(DT_N_S_soc_S_serial_40013800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_usart(fn, ...) fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_usart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_usart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_uart(fn) fn(DT_N_S_soc_S_serial_40013800) fn(DT_N_S_soc_S_serial_40004c00)
#define DT_FOREACH_OKAY_VARGS_st_stm32_uart(fn, ...) fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_uart(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_uart(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_i2c_v2(fn) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005c00) fn(DT_N_S_soc_S_i2c_40005800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_i2c_v2(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005c00, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_i2c_v2(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_i2c_v2(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_qspi(fn) fn(DT_N_S_soc_S_quadspi_a0001000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_qspi(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_qspi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_qspi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_qspi_nor(fn) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0)
#define DT_FOREACH_OKAY_VARGS_st_stm32_qspi_nor(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000_S_qspi_nor_flash_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_qspi_nor(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_qspi_nor(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_spi_fifo(fn) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_spi_40003c00)
#define DT_FOREACH_OKAY_VARGS_st_stm32_spi_fifo(fn, ...) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_spi_fifo(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_spi_fifo(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_spi(fn) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_spi_40003c00)
#define DT_FOREACH_OKAY_VARGS_st_stm32_spi(fn, ...) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_spi(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_spi(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_timers(fn) fn(DT_N_S_soc_S_timers_40000000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_timers(fn, ...) fn(DT_N_S_soc_S_timers_40000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_timers(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_timers(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_pwm(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm)
#define DT_FOREACH_OKAY_VARGS_st_stm32_pwm(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_pwm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_pwm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_rtc(fn) fn(DT_N_S_soc_S_rtc_40002800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_rtc(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_rtc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_rtc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_adc(fn) fn(DT_N_S_soc_S_adc_50040000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_adc(fn, ...) fn(DT_N_S_soc_S_adc_50040000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_adc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_adc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_dma_v2(fn) fn(DT_N_S_soc_S_dma_40020000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_dma_v2(fn, ...) fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_dma_v2(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_dma_v2(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_lptim(fn) fn(DT_N_S_soc_S_timers_40007c00)
#define DT_FOREACH_OKAY_VARGS_st_stm32_lptim(fn, ...) fn(DT_N_S_soc_S_timers_40007c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_lptim(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_lptim(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_rng(fn) fn(DT_N_S_soc_S_rng_50060800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_rng(fn, ...) fn(DT_N_S_soc_S_rng_50060800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_rng(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_rng(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_lis3mdl_magn(fn) fn(DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e)
#define DT_FOREACH_OKAY_VARGS_st_lis3mdl_magn(fn, ...) fn(DT_N_S_soc_S_i2c_40005800_S_lis3mdl_magn_1e, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_lis3mdl_magn(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_lis3mdl_magn(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_hts221(fn) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f)
#define DT_FOREACH_OKAY_VARGS_st_hts221(fn, ...) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_hts221(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_hts221(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_lps22hb_press(fn) fn(DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d)
#define DT_FOREACH_OKAY_VARGS_st_lps22hb_press(fn, ...) fn(DT_N_S_soc_S_i2c_40005800_S_lps22hb_press_5d, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_lps22hb_press(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_lps22hb_press(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_lsm6dsl(fn) fn(DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a)
#define DT_FOREACH_OKAY_VARGS_st_lsm6dsl(fn, ...) fn(DT_N_S_soc_S_i2c_40005800_S_lsm6dsl_6a, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_lsm6dsl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_lsm6dsl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_vl53l0x(fn) fn(DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29)
#define DT_FOREACH_OKAY_VARGS_st_vl53l0x(fn, ...) fn(DT_N_S_soc_S_i2c_40005800_S_vl53l0x_29, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_vl53l0x(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_vl53l0x(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_bt_hci_spi(fn) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0)
#define DT_FOREACH_OKAY_VARGS_zephyr_bt_hci_spi(fn, ...) fn(DT_N_S_soc_S_spi_40003c00_S_spbtle_rf_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_bt_hci_spi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_bt_hci_spi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_inventek_eswifi(fn) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1)
#define DT_FOREACH_OKAY_VARGS_inventek_eswifi(fn, ...) fn(DT_N_S_soc_S_spi_40003c00_S_ism43362_1, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_inventek_eswifi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_inventek_eswifi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_dac(fn) fn(DT_N_S_soc_S_dac_40007400)
#define DT_FOREACH_OKAY_VARGS_st_stm32_dac(fn, ...) fn(DT_N_S_soc_S_dac_40007400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_dac(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_dac(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_otgfs(fn) fn(DT_N_S_soc_S_otgfs_50000000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_otgfs(fn, ...) fn(DT_N_S_soc_S_otgfs_50000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_otgfs(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_otgfs(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m4f(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m4f(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m4f(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m4f(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_memory_20000000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_memory_20000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_clock(fn) fn(DT_N_S_clocks_S_clk_hsi)
#define DT_FOREACH_OKAY_VARGS_fixed_clock(fn, ...) fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_lse_clock(fn) fn(DT_N_S_clocks_S_clk_lse)
#define DT_FOREACH_OKAY_VARGS_st_stm32_lse_clock(fn, ...) fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_lse_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_lse_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32l4_pll_clock(fn) fn(DT_N_S_clocks_S_pll)
#define DT_FOREACH_OKAY_VARGS_st_stm32l4_pll_clock(fn, ...) fn(DT_N_S_clocks_S_pll, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32l4_pll_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32l4_pll_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_temp_cal(fn) fn(DT_N_S_dietemp)
#define DT_FOREACH_OKAY_VARGS_st_stm32_temp_cal(fn, ...) fn(DT_N_S_dietemp, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_temp_cal(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_temp_cal(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_usb_nop_xceiv(fn) fn(DT_N_S_otgfs_phy)
#define DT_FOREACH_OKAY_VARGS_usb_nop_xceiv(fn, ...) fn(DT_N_S_otgfs_phy, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_usb_nop_xceiv(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_usb_nop_xceiv(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arduino_header_r3(fn) fn(DT_N_S_connector)
#define DT_FOREACH_OKAY_VARGS_arduino_header_r3(fn, ...) fn(DT_N_S_connector, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arduino_header_r3(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arduino_header_r3(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_keys(fn) fn(DT_N_S_gpio_keys)
#define DT_FOREACH_OKAY_VARGS_gpio_keys(fn, ...) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_keys(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_keys(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_power_state(fn) fn(DT_N_S_power_states_S_state0) fn(DT_N_S_power_states_S_state1) fn(DT_N_S_power_states_S_state2)
#define DT_FOREACH_OKAY_VARGS_zephyr_power_state(fn, ...) fn(DT_N_S_power_states_S_state0, __VA_ARGS__) fn(DT_N_S_power_states_S_state1, __VA_ARGS__) fn(DT_N_S_power_states_S_state2, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_power_state(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_power_state(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__)
#define DT_FOREACH_OKAY_siti_dm163(fn) fn(DT_N_S_dm163)
#define DT_FOREACH_OKAY_VARGS_siti_dm163(fn, ...) fn(DT_N_S_dm163, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_siti_dm163(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_siti_dm163(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_rgb_matrix(fn) fn(DT_N_S_rgb_matrix)
#define DT_FOREACH_OKAY_VARGS_rgb_matrix(fn, ...) fn(DT_N_S_rgb_matrix, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_rgb_matrix(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_rgb_matrix(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_st_stm32_qspi_nor_BUS_qspi 1
#define DT_COMPAT_st_lis3mdl_magn_BUS_i2c 1
#define DT_COMPAT_st_hts221_BUS_i2c 1
#define DT_COMPAT_st_lps22hb_press_BUS_i2c 1
#define DT_COMPAT_st_lsm6dsl_BUS_i2c 1
#define DT_COMPAT_st_vl53l0x_BUS_i2c 1
#define DT_COMPAT_zephyr_bt_hci_spi_BUS_spi 1
#define DT_COMPAT_inventek_eswifi_BUS_spi 1
